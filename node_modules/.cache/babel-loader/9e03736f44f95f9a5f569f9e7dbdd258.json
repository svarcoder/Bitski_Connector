{"ast":null,"code":"import { EventEmitter } from 'events';\nexport default class Stoplight extends EventEmitter {\n  constructor() {\n    super();\n    this.isLocked = true;\n  }\n  go() {\n    this.isLocked = false;\n    this.emit('unlock');\n  }\n  stop() {\n    this.isLocked = true;\n    this.emit('lock');\n  }\n  await(fn) {\n    if (this.isLocked) {\n      this.once('unlock', fn);\n    } else {\n      setTimeout(fn);\n    }\n  }\n}","map":{"version":3,"names":["EventEmitter","Stoplight","constructor","isLocked","go","emit","stop","await","fn","once","setTimeout"],"sources":["/Users/charvai/Desktop/template/node_modules/@bitski/provider-engine/dist/modules/util/stoplight.js"],"sourcesContent":["import { EventEmitter } from 'events';\nexport default class Stoplight extends EventEmitter {\n    constructor() {\n        super();\n        this.isLocked = true;\n    }\n    go() {\n        this.isLocked = false;\n        this.emit('unlock');\n    }\n    stop() {\n        this.isLocked = true;\n        this.emit('lock');\n    }\n    await(fn) {\n        if (this.isLocked) {\n            this.once('unlock', fn);\n        }\n        else {\n            setTimeout(fn);\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,QAAQ;AACrC,eAAe,MAAMC,SAAS,SAASD,YAAY,CAAC;EAChDE,WAAW,GAAG;IACV,KAAK,EAAE;IACP,IAAI,CAACC,QAAQ,GAAG,IAAI;EACxB;EACAC,EAAE,GAAG;IACD,IAAI,CAACD,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACE,IAAI,CAAC,QAAQ,CAAC;EACvB;EACAC,IAAI,GAAG;IACH,IAAI,CAACH,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACE,IAAI,CAAC,MAAM,CAAC;EACrB;EACAE,KAAK,CAACC,EAAE,EAAE;IACN,IAAI,IAAI,CAACL,QAAQ,EAAE;MACf,IAAI,CAACM,IAAI,CAAC,QAAQ,EAAED,EAAE,CAAC;IAC3B,CAAC,MACI;MACDE,UAAU,CAACF,EAAE,CAAC;IAClB;EACJ;AACJ"},"metadata":{},"sourceType":"module"}