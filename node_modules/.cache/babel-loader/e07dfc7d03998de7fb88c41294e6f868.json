{"ast":null,"code":"import Subprovider from '../subprovider';\nimport { addHexPrefix } from '../util/eth-util';\nexport default class SanitizerSubprovider extends Subprovider {\n  handleRequest(payload, next, _end) {\n    const txParams = payload.params[0];\n    if (typeof txParams === 'object' && !Array.isArray(txParams)) {\n      const sanitized = cloneTxParams(txParams);\n      payload.params[0] = sanitized;\n    }\n    next();\n  }\n}\n// we use this to clean any custom params from the txParams\nconst permitted = ['from', 'to', 'value', 'data', 'gas', 'gasPrice', 'nonce', 'fromBlock', 'toBlock', 'address', 'topics'];\nfunction cloneTxParams(txParams) {\n  const sanitized = permitted.reduce((copy, p) => {\n    if (p in txParams) {\n      if (Array.isArray(txParams[p])) {\n        copy[p] = txParams[p].map(item => sanitize(item));\n      } else {\n        copy[p] = sanitize(txParams[p]);\n      }\n    }\n    return copy;\n  }, {});\n  return sanitized;\n}\nfunction sanitize(value) {\n  switch (value) {\n    case 'latest':\n      return value;\n    case 'pending':\n      return value;\n    case 'earliest':\n      return value;\n    default:\n      if (typeof value === 'string') {\n        return addHexPrefix(value.toLowerCase());\n      } else {\n        return value;\n      }\n  }\n}","map":{"version":3,"names":["Subprovider","addHexPrefix","SanitizerSubprovider","handleRequest","payload","next","_end","txParams","params","Array","isArray","sanitized","cloneTxParams","permitted","reduce","copy","p","map","item","sanitize","value","toLowerCase"],"sources":["/Users/charvai/Desktop/template/node_modules/@bitski/provider-engine/dist/modules/subproviders/sanitizer.js"],"sourcesContent":["import Subprovider from '../subprovider';\nimport { addHexPrefix } from '../util/eth-util';\nexport default class SanitizerSubprovider extends Subprovider {\n    handleRequest(payload, next, _end) {\n        const txParams = payload.params[0];\n        if (typeof txParams === 'object' && !Array.isArray(txParams)) {\n            const sanitized = cloneTxParams(txParams);\n            payload.params[0] = sanitized;\n        }\n        next();\n    }\n}\n// we use this to clean any custom params from the txParams\nconst permitted = [\n    'from',\n    'to',\n    'value',\n    'data',\n    'gas',\n    'gasPrice',\n    'nonce',\n    'fromBlock',\n    'toBlock',\n    'address',\n    'topics',\n];\nfunction cloneTxParams(txParams) {\n    const sanitized = permitted.reduce((copy, p) => {\n        if (p in txParams) {\n            if (Array.isArray(txParams[p])) {\n                copy[p] = txParams[p].map((item) => sanitize(item));\n            }\n            else {\n                copy[p] = sanitize(txParams[p]);\n            }\n        }\n        return copy;\n    }, {});\n    return sanitized;\n}\nfunction sanitize(value) {\n    switch (value) {\n        case 'latest':\n            return value;\n        case 'pending':\n            return value;\n        case 'earliest':\n            return value;\n        default:\n            if (typeof value === 'string') {\n                return addHexPrefix(value.toLowerCase());\n            }\n            else {\n                return value;\n            }\n    }\n}\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AACxC,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,eAAe,MAAMC,oBAAoB,SAASF,WAAW,CAAC;EAC1DG,aAAa,CAACC,OAAO,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAC/B,MAAMC,QAAQ,GAAGH,OAAO,CAACI,MAAM,CAAC,CAAC,CAAC;IAClC,IAAI,OAAOD,QAAQ,KAAK,QAAQ,IAAI,CAACE,KAAK,CAACC,OAAO,CAACH,QAAQ,CAAC,EAAE;MAC1D,MAAMI,SAAS,GAAGC,aAAa,CAACL,QAAQ,CAAC;MACzCH,OAAO,CAACI,MAAM,CAAC,CAAC,CAAC,GAAGG,SAAS;IACjC;IACAN,IAAI,EAAE;EACV;AACJ;AACA;AACA,MAAMQ,SAAS,GAAG,CACd,MAAM,EACN,IAAI,EACJ,OAAO,EACP,MAAM,EACN,KAAK,EACL,UAAU,EACV,OAAO,EACP,WAAW,EACX,SAAS,EACT,SAAS,EACT,QAAQ,CACX;AACD,SAASD,aAAa,CAACL,QAAQ,EAAE;EAC7B,MAAMI,SAAS,GAAGE,SAAS,CAACC,MAAM,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;IAC5C,IAAIA,CAAC,IAAIT,QAAQ,EAAE;MACf,IAAIE,KAAK,CAACC,OAAO,CAACH,QAAQ,CAACS,CAAC,CAAC,CAAC,EAAE;QAC5BD,IAAI,CAACC,CAAC,CAAC,GAAGT,QAAQ,CAACS,CAAC,CAAC,CAACC,GAAG,CAAEC,IAAI,IAAKC,QAAQ,CAACD,IAAI,CAAC,CAAC;MACvD,CAAC,MACI;QACDH,IAAI,CAACC,CAAC,CAAC,GAAGG,QAAQ,CAACZ,QAAQ,CAACS,CAAC,CAAC,CAAC;MACnC;IACJ;IACA,OAAOD,IAAI;EACf,CAAC,EAAE,CAAC,CAAC,CAAC;EACN,OAAOJ,SAAS;AACpB;AACA,SAASQ,QAAQ,CAACC,KAAK,EAAE;EACrB,QAAQA,KAAK;IACT,KAAK,QAAQ;MACT,OAAOA,KAAK;IAChB,KAAK,SAAS;MACV,OAAOA,KAAK;IAChB,KAAK,UAAU;MACX,OAAOA,KAAK;IAChB;MACI,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QAC3B,OAAOnB,YAAY,CAACmB,KAAK,CAACC,WAAW,EAAE,CAAC;MAC5C,CAAC,MACI;QACD,OAAOD,KAAK;MAChB;EAAC;AAEb"},"metadata":{},"sourceType":"module"}