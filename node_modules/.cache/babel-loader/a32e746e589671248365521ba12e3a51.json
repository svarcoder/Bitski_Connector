{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createWeb3ReactStoreAndActions = exports.MAX_SAFE_CHAIN_ID = void 0;\nconst address_1 = require(\"@ethersproject/address\");\nconst zustand_1 = require(\"zustand\");\n/**\n * MAX_SAFE_CHAIN_ID is the upper bound limit on what will be accepted for `chainId`\n * `MAX_SAFE_CHAIN_ID = floor( ( 2**53 - 39 ) / 2 ) = 4503599627370476`\n *\n * @see {@link https://github.com/MetaMask/metamask-extension/blob/b6673731e2367e119a5fee9a454dd40bd4968948/shared/constants/network.js#L31}\n */\nexports.MAX_SAFE_CHAIN_ID = 4503599627370476;\nfunction validateChainId(chainId) {\n  if (!Number.isInteger(chainId) || chainId <= 0 || chainId > exports.MAX_SAFE_CHAIN_ID) {\n    throw new Error(`Invalid chainId ${chainId}`);\n  }\n}\nfunction validateAccount(account) {\n  return (0, address_1.getAddress)(account);\n}\nconst DEFAULT_STATE = {\n  chainId: undefined,\n  accounts: undefined,\n  activating: false\n};\nfunction createWeb3ReactStoreAndActions() {\n  const store = (0, zustand_1.createStore)()(() => DEFAULT_STATE);\n  // flag for tracking updates so we don't clobber data when cancelling activation\n  let nullifier = 0;\n  /**\n   * Sets activating to true, indicating that an update is in progress.\n   *\n   * @returns cancelActivation - A function that cancels the activation by setting activating to false,\n   * as long as there haven't been any intervening updates.\n   */\n  function startActivation() {\n    const nullifierCached = ++nullifier;\n    store.setState(Object.assign(Object.assign({}, DEFAULT_STATE), {\n      activating: true\n    }));\n    // return a function that cancels the activation iff nothing else has happened\n    return () => {\n      if (nullifier === nullifierCached) store.setState({\n        activating: false\n      });\n    };\n  }\n  /**\n   * Used to report a `stateUpdate` which is merged with existing state. The first `stateUpdate` that results in chainId\n   * and accounts being set will also set activating to false, indicating a successful connection.\n   *\n   * @param stateUpdate - The state update to report.\n   */\n  function update(stateUpdate) {\n    // validate chainId statically, independent of existing state\n    if (stateUpdate.chainId !== undefined) {\n      validateChainId(stateUpdate.chainId);\n    }\n    // validate accounts statically, independent of existing state\n    if (stateUpdate.accounts !== undefined) {\n      for (let i = 0; i < stateUpdate.accounts.length; i++) {\n        stateUpdate.accounts[i] = validateAccount(stateUpdate.accounts[i]);\n      }\n    }\n    nullifier++;\n    store.setState(existingState => {\n      var _a, _b;\n      // determine the next chainId and accounts\n      const chainId = (_a = stateUpdate.chainId) !== null && _a !== void 0 ? _a : existingState.chainId;\n      const accounts = (_b = stateUpdate.accounts) !== null && _b !== void 0 ? _b : existingState.accounts;\n      // ensure that the activating flag is cleared when appropriate\n      let activating = existingState.activating;\n      if (activating && chainId && accounts) {\n        activating = false;\n      }\n      return {\n        chainId,\n        accounts,\n        activating\n      };\n    });\n  }\n  /**\n   * Resets connector state back to the default state.\n   */\n  function resetState() {\n    nullifier++;\n    store.setState(DEFAULT_STATE);\n  }\n  return [store, {\n    startActivation,\n    update,\n    resetState\n  }];\n}\nexports.createWeb3ReactStoreAndActions = createWeb3ReactStoreAndActions;","map":{"version":3,"names":["Object","defineProperty","exports","value","createWeb3ReactStoreAndActions","MAX_SAFE_CHAIN_ID","address_1","require","zustand_1","validateChainId","chainId","Number","isInteger","Error","validateAccount","account","getAddress","DEFAULT_STATE","undefined","accounts","activating","store","createStore","nullifier","startActivation","nullifierCached","setState","assign","update","stateUpdate","i","length","existingState","_a","_b","resetState"],"sources":["/Users/charvai/Desktop/template/node_modules/@web3-react/store/dist/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createWeb3ReactStoreAndActions = exports.MAX_SAFE_CHAIN_ID = void 0;\nconst address_1 = require(\"@ethersproject/address\");\nconst zustand_1 = require(\"zustand\");\n/**\n * MAX_SAFE_CHAIN_ID is the upper bound limit on what will be accepted for `chainId`\n * `MAX_SAFE_CHAIN_ID = floor( ( 2**53 - 39 ) / 2 ) = 4503599627370476`\n *\n * @see {@link https://github.com/MetaMask/metamask-extension/blob/b6673731e2367e119a5fee9a454dd40bd4968948/shared/constants/network.js#L31}\n */\nexports.MAX_SAFE_CHAIN_ID = 4503599627370476;\nfunction validateChainId(chainId) {\n    if (!Number.isInteger(chainId) || chainId <= 0 || chainId > exports.MAX_SAFE_CHAIN_ID) {\n        throw new Error(`Invalid chainId ${chainId}`);\n    }\n}\nfunction validateAccount(account) {\n    return (0, address_1.getAddress)(account);\n}\nconst DEFAULT_STATE = {\n    chainId: undefined,\n    accounts: undefined,\n    activating: false,\n};\nfunction createWeb3ReactStoreAndActions() {\n    const store = (0, zustand_1.createStore)()(() => DEFAULT_STATE);\n    // flag for tracking updates so we don't clobber data when cancelling activation\n    let nullifier = 0;\n    /**\n     * Sets activating to true, indicating that an update is in progress.\n     *\n     * @returns cancelActivation - A function that cancels the activation by setting activating to false,\n     * as long as there haven't been any intervening updates.\n     */\n    function startActivation() {\n        const nullifierCached = ++nullifier;\n        store.setState(Object.assign(Object.assign({}, DEFAULT_STATE), { activating: true }));\n        // return a function that cancels the activation iff nothing else has happened\n        return () => {\n            if (nullifier === nullifierCached)\n                store.setState({ activating: false });\n        };\n    }\n    /**\n     * Used to report a `stateUpdate` which is merged with existing state. The first `stateUpdate` that results in chainId\n     * and accounts being set will also set activating to false, indicating a successful connection.\n     *\n     * @param stateUpdate - The state update to report.\n     */\n    function update(stateUpdate) {\n        // validate chainId statically, independent of existing state\n        if (stateUpdate.chainId !== undefined) {\n            validateChainId(stateUpdate.chainId);\n        }\n        // validate accounts statically, independent of existing state\n        if (stateUpdate.accounts !== undefined) {\n            for (let i = 0; i < stateUpdate.accounts.length; i++) {\n                stateUpdate.accounts[i] = validateAccount(stateUpdate.accounts[i]);\n            }\n        }\n        nullifier++;\n        store.setState((existingState) => {\n            var _a, _b;\n            // determine the next chainId and accounts\n            const chainId = (_a = stateUpdate.chainId) !== null && _a !== void 0 ? _a : existingState.chainId;\n            const accounts = (_b = stateUpdate.accounts) !== null && _b !== void 0 ? _b : existingState.accounts;\n            // ensure that the activating flag is cleared when appropriate\n            let activating = existingState.activating;\n            if (activating && chainId && accounts) {\n                activating = false;\n            }\n            return { chainId, accounts, activating };\n        });\n    }\n    /**\n     * Resets connector state back to the default state.\n     */\n    function resetState() {\n        nullifier++;\n        store.setState(DEFAULT_STATE);\n    }\n    return [store, { startActivation, update, resetState }];\n}\nexports.createWeb3ReactStoreAndActions = createWeb3ReactStoreAndActions;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}