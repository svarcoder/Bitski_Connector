{"ast":null,"code":"const BITSKI_SDK_URL = 'https://cdn.bitskistatic.com/js/sdk/v3/bitski.min.js';\nconst BITSKI_SDK_REGEX = /^https:\\/\\/cdn\\.bitskistatic\\.com\\/js\\/sdk\\/v3\\/bitski\\.min\\.js\\/?(\\?.*)?$/;\nexport const findScript = () => {\n  const scripts = document.querySelectorAll(`script[src^=\"${BITSKI_SDK_URL}\"]`);\n  for (let i = 0; i < scripts.length; i++) {\n    const script = scripts[i];\n    if (!BITSKI_SDK_REGEX.test(script.src)) {\n      continue;\n    }\n    return script;\n  }\n  return null;\n};\nconst injectScript = () => {\n  const script = document.createElement('script');\n  script.src = BITSKI_SDK_URL;\n  const headOrBody = document.head || document.body;\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. The Bitski SDK requires a <body> element.');\n  }\n  headOrBody.appendChild(script);\n  return script;\n};\nlet bitskiPromise = null;\nconst windowLoadPromise = new Promise(resolve => {\n  if (typeof window === 'undefined') {\n    // Resolve to null when imported server side. This makes the module\n    // safe to import in an isomorphic code base.\n    resolve(null);\n    return;\n  }\n  if (window.document.readyState === 'complete') {\n    resolve(null);\n    return;\n  }\n  window.addEventListener('load', () => resolve(null));\n});\nexport const loadScript = () => {\n  // Ensure that we only attempt to load Stripe.js at most once\n  if (bitskiPromise !== null) {\n    return bitskiPromise;\n  }\n  bitskiPromise = new Promise((resolve, reject) => {\n    if (typeof window === 'undefined') {\n      // Resolve to null when imported server side. This makes the module\n      // safe to import in an isomorphic code base.\n      resolve(null);\n      return;\n    }\n    windowLoadPromise.then(() => {\n      if (window.Bitski) {\n        resolve(window.Bitski.BitskiSDK);\n        return;\n      }\n      try {\n        let script = findScript();\n        if (!script) {\n          script = injectScript();\n        }\n        script.addEventListener('load', () => {\n          if (window.Bitski) {\n            resolve(window.Bitski.BitskiSDK);\n          } else {\n            reject(new Error('Bitski SDK not available'));\n          }\n        });\n        script.addEventListener('error', () => {\n          reject(new Error('Failed to load Bitski SDK'));\n        });\n      } catch (error) {\n        reject(error);\n        return;\n      }\n    });\n  });\n  return bitskiPromise;\n};","map":{"version":3,"names":["BITSKI_SDK_URL","BITSKI_SDK_REGEX","findScript","scripts","document","querySelectorAll","i","length","script","test","src","injectScript","createElement","headOrBody","head","body","Error","appendChild","bitskiPromise","windowLoadPromise","Promise","resolve","window","readyState","addEventListener","loadScript","reject","then","Bitski","BitskiSDK","error"],"sources":["/Users/charvai/Desktop/template/node_modules/bitski/dist/esm/load.js"],"sourcesContent":["const BITSKI_SDK_URL = 'https://cdn.bitskistatic.com/js/sdk/v3/bitski.min.js';\nconst BITSKI_SDK_REGEX = /^https:\\/\\/cdn\\.bitskistatic\\.com\\/js\\/sdk\\/v3\\/bitski\\.min\\.js\\/?(\\?.*)?$/;\nexport const findScript = () => {\n    const scripts = document.querySelectorAll(`script[src^=\"${BITSKI_SDK_URL}\"]`);\n    for (let i = 0; i < scripts.length; i++) {\n        const script = scripts[i];\n        if (!BITSKI_SDK_REGEX.test(script.src)) {\n            continue;\n        }\n        return script;\n    }\n    return null;\n};\nconst injectScript = () => {\n    const script = document.createElement('script');\n    script.src = BITSKI_SDK_URL;\n    const headOrBody = document.head || document.body;\n    if (!headOrBody) {\n        throw new Error('Expected document.body not to be null. The Bitski SDK requires a <body> element.');\n    }\n    headOrBody.appendChild(script);\n    return script;\n};\nlet bitskiPromise = null;\nconst windowLoadPromise = new Promise((resolve) => {\n    if (typeof window === 'undefined') {\n        // Resolve to null when imported server side. This makes the module\n        // safe to import in an isomorphic code base.\n        resolve(null);\n        return;\n    }\n    if (window.document.readyState === 'complete') {\n        resolve(null);\n        return;\n    }\n    window.addEventListener('load', () => resolve(null));\n});\nexport const loadScript = () => {\n    // Ensure that we only attempt to load Stripe.js at most once\n    if (bitskiPromise !== null) {\n        return bitskiPromise;\n    }\n    bitskiPromise = new Promise((resolve, reject) => {\n        if (typeof window === 'undefined') {\n            // Resolve to null when imported server side. This makes the module\n            // safe to import in an isomorphic code base.\n            resolve(null);\n            return;\n        }\n        windowLoadPromise.then(() => {\n            if (window.Bitski) {\n                resolve(window.Bitski.BitskiSDK);\n                return;\n            }\n            try {\n                let script = findScript();\n                if (!script) {\n                    script = injectScript();\n                }\n                script.addEventListener('load', () => {\n                    if (window.Bitski) {\n                        resolve(window.Bitski.BitskiSDK);\n                    }\n                    else {\n                        reject(new Error('Bitski SDK not available'));\n                    }\n                });\n                script.addEventListener('error', () => {\n                    reject(new Error('Failed to load Bitski SDK'));\n                });\n            }\n            catch (error) {\n                reject(error);\n                return;\n            }\n        });\n    });\n    return bitskiPromise;\n};\n"],"mappings":"AAAA,MAAMA,cAAc,GAAG,sDAAsD;AAC7E,MAAMC,gBAAgB,GAAG,4EAA4E;AACrG,OAAO,MAAMC,UAAU,GAAG,MAAM;EAC5B,MAAMC,OAAO,GAAGC,QAAQ,CAACC,gBAAgB,CAAE,gBAAeL,cAAe,IAAG,CAAC;EAC7E,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,OAAO,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,MAAME,MAAM,GAAGL,OAAO,CAACG,CAAC,CAAC;IACzB,IAAI,CAACL,gBAAgB,CAACQ,IAAI,CAACD,MAAM,CAACE,GAAG,CAAC,EAAE;MACpC;IACJ;IACA,OAAOF,MAAM;EACjB;EACA,OAAO,IAAI;AACf,CAAC;AACD,MAAMG,YAAY,GAAG,MAAM;EACvB,MAAMH,MAAM,GAAGJ,QAAQ,CAACQ,aAAa,CAAC,QAAQ,CAAC;EAC/CJ,MAAM,CAACE,GAAG,GAAGV,cAAc;EAC3B,MAAMa,UAAU,GAAGT,QAAQ,CAACU,IAAI,IAAIV,QAAQ,CAACW,IAAI;EACjD,IAAI,CAACF,UAAU,EAAE;IACb,MAAM,IAAIG,KAAK,CAAC,kFAAkF,CAAC;EACvG;EACAH,UAAU,CAACI,WAAW,CAACT,MAAM,CAAC;EAC9B,OAAOA,MAAM;AACjB,CAAC;AACD,IAAIU,aAAa,GAAG,IAAI;AACxB,MAAMC,iBAAiB,GAAG,IAAIC,OAAO,CAAEC,OAAO,IAAK;EAC/C,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IAC/B;IACA;IACAD,OAAO,CAAC,IAAI,CAAC;IACb;EACJ;EACA,IAAIC,MAAM,CAAClB,QAAQ,CAACmB,UAAU,KAAK,UAAU,EAAE;IAC3CF,OAAO,CAAC,IAAI,CAAC;IACb;EACJ;EACAC,MAAM,CAACE,gBAAgB,CAAC,MAAM,EAAE,MAAMH,OAAO,CAAC,IAAI,CAAC,CAAC;AACxD,CAAC,CAAC;AACF,OAAO,MAAMI,UAAU,GAAG,MAAM;EAC5B;EACA,IAAIP,aAAa,KAAK,IAAI,EAAE;IACxB,OAAOA,aAAa;EACxB;EACAA,aAAa,GAAG,IAAIE,OAAO,CAAC,CAACC,OAAO,EAAEK,MAAM,KAAK;IAC7C,IAAI,OAAOJ,MAAM,KAAK,WAAW,EAAE;MAC/B;MACA;MACAD,OAAO,CAAC,IAAI,CAAC;MACb;IACJ;IACAF,iBAAiB,CAACQ,IAAI,CAAC,MAAM;MACzB,IAAIL,MAAM,CAACM,MAAM,EAAE;QACfP,OAAO,CAACC,MAAM,CAACM,MAAM,CAACC,SAAS,CAAC;QAChC;MACJ;MACA,IAAI;QACA,IAAIrB,MAAM,GAAGN,UAAU,EAAE;QACzB,IAAI,CAACM,MAAM,EAAE;UACTA,MAAM,GAAGG,YAAY,EAAE;QAC3B;QACAH,MAAM,CAACgB,gBAAgB,CAAC,MAAM,EAAE,MAAM;UAClC,IAAIF,MAAM,CAACM,MAAM,EAAE;YACfP,OAAO,CAACC,MAAM,CAACM,MAAM,CAACC,SAAS,CAAC;UACpC,CAAC,MACI;YACDH,MAAM,CAAC,IAAIV,KAAK,CAAC,0BAA0B,CAAC,CAAC;UACjD;QACJ,CAAC,CAAC;QACFR,MAAM,CAACgB,gBAAgB,CAAC,OAAO,EAAE,MAAM;UACnCE,MAAM,CAAC,IAAIV,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAClD,CAAC,CAAC;MACN,CAAC,CACD,OAAOc,KAAK,EAAE;QACVJ,MAAM,CAACI,KAAK,CAAC;QACb;MACJ;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;EACF,OAAOZ,aAAa;AACxB,CAAC"},"metadata":{},"sourceType":"module"}