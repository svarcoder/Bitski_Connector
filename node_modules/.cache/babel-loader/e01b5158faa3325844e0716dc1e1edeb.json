{"ast":null,"code":"/**\n * Automatically handles finalizing the oauth sign in process with the Bitski SDK\n */\nexport function processCallback() {\n  if (window.opener) {\n    notifyOpener(window.location);\n  } else {\n    throw new Error('Parent window could not be found');\n  }\n}\n/**\n * Notifies the opener when in a popup\n * @param url the url that contains the query params\n */\nfunction notifyOpener(url) {\n  if (window.opener) {\n    if (url) {\n      // parse url to get state\n      const data = parseUrlParams(url);\n      if (data.state) {\n        const name = `popupCallback_${data.state}`;\n        const callback = window.opener[name];\n        if (callback) {\n          callback(url);\n        } else {\n          throw new Error('No callback found on opener');\n        }\n      } else {\n        throw new Error('No state found in response');\n      }\n    }\n  } else {\n    throw new Error('No window.opener');\n  }\n}\n/**\n * Extracts query params from the hash of the url\n * @param url the url to parse\n */\nexport function parseUrlParams(url) {\n  let params;\n  if (url.href.includes('#')) {\n    params = extractQuery(url.hash);\n  } else if (url.href.includes('?')) {\n    params = url.search.split('?').pop();\n  }\n  if (!params) {\n    throw new Error('No params found in result');\n  }\n  return params.split('&').reduce((prev, item) => {\n    const [key, value] = item.split('=');\n    if (key && value) {\n      prev[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n    return prev;\n  }, {});\n}\nfunction extractQuery(url) {\n  if (!url.includes('#')) {\n    throw new Error('No params found in result');\n  }\n  return url.split('#').pop();\n}","map":{"version":3,"names":["processCallback","window","opener","notifyOpener","location","Error","url","data","parseUrlParams","state","name","callback","params","href","includes","extractQuery","hash","search","split","pop","reduce","prev","item","key","value","decodeURIComponent"],"sources":["/Users/charvai/Desktop/template/node_modules/bitski/dist/esm/-private/utils/callback.js"],"sourcesContent":["/**\n * Automatically handles finalizing the oauth sign in process with the Bitski SDK\n */\nexport function processCallback() {\n    if (window.opener) {\n        notifyOpener(window.location);\n    }\n    else {\n        throw new Error('Parent window could not be found');\n    }\n}\n/**\n * Notifies the opener when in a popup\n * @param url the url that contains the query params\n */\nfunction notifyOpener(url) {\n    if (window.opener) {\n        if (url) {\n            // parse url to get state\n            const data = parseUrlParams(url);\n            if (data.state) {\n                const name = `popupCallback_${data.state}`;\n                const callback = window.opener[name];\n                if (callback) {\n                    callback(url);\n                }\n                else {\n                    throw new Error('No callback found on opener');\n                }\n            }\n            else {\n                throw new Error('No state found in response');\n            }\n        }\n    }\n    else {\n        throw new Error('No window.opener');\n    }\n}\n/**\n * Extracts query params from the hash of the url\n * @param url the url to parse\n */\nexport function parseUrlParams(url) {\n    let params;\n    if (url.href.includes('#')) {\n        params = extractQuery(url.hash);\n    }\n    else if (url.href.includes('?')) {\n        params = url.search.split('?').pop();\n    }\n    if (!params) {\n        throw new Error('No params found in result');\n    }\n    return params.split('&').reduce((prev, item) => {\n        const [key, value] = item.split('=');\n        if (key && value) {\n            prev[decodeURIComponent(key)] = decodeURIComponent(value);\n        }\n        return prev;\n    }, {});\n}\nfunction extractQuery(url) {\n    if (!url.includes('#')) {\n        throw new Error('No params found in result');\n    }\n    return url.split('#').pop();\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,SAASA,eAAe,GAAG;EAC9B,IAAIC,MAAM,CAACC,MAAM,EAAE;IACfC,YAAY,CAACF,MAAM,CAACG,QAAQ,CAAC;EACjC,CAAC,MACI;IACD,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;EACvD;AACJ;AACA;AACA;AACA;AACA;AACA,SAASF,YAAY,CAACG,GAAG,EAAE;EACvB,IAAIL,MAAM,CAACC,MAAM,EAAE;IACf,IAAII,GAAG,EAAE;MACL;MACA,MAAMC,IAAI,GAAGC,cAAc,CAACF,GAAG,CAAC;MAChC,IAAIC,IAAI,CAACE,KAAK,EAAE;QACZ,MAAMC,IAAI,GAAI,iBAAgBH,IAAI,CAACE,KAAM,EAAC;QAC1C,MAAME,QAAQ,GAAGV,MAAM,CAACC,MAAM,CAACQ,IAAI,CAAC;QACpC,IAAIC,QAAQ,EAAE;UACVA,QAAQ,CAACL,GAAG,CAAC;QACjB,CAAC,MACI;UACD,MAAM,IAAID,KAAK,CAAC,6BAA6B,CAAC;QAClD;MACJ,CAAC,MACI;QACD,MAAM,IAAIA,KAAK,CAAC,4BAA4B,CAAC;MACjD;IACJ;EACJ,CAAC,MACI;IACD,MAAM,IAAIA,KAAK,CAAC,kBAAkB,CAAC;EACvC;AACJ;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,cAAc,CAACF,GAAG,EAAE;EAChC,IAAIM,MAAM;EACV,IAAIN,GAAG,CAACO,IAAI,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;IACxBF,MAAM,GAAGG,YAAY,CAACT,GAAG,CAACU,IAAI,CAAC;EACnC,CAAC,MACI,IAAIV,GAAG,CAACO,IAAI,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;IAC7BF,MAAM,GAAGN,GAAG,CAACW,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE;EACxC;EACA,IAAI,CAACP,MAAM,EAAE;IACT,MAAM,IAAIP,KAAK,CAAC,2BAA2B,CAAC;EAChD;EACA,OAAOO,MAAM,CAACM,KAAK,CAAC,GAAG,CAAC,CAACE,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAK;IAC5C,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,GAAGF,IAAI,CAACJ,KAAK,CAAC,GAAG,CAAC;IACpC,IAAIK,GAAG,IAAIC,KAAK,EAAE;MACdH,IAAI,CAACI,kBAAkB,CAACF,GAAG,CAAC,CAAC,GAAGE,kBAAkB,CAACD,KAAK,CAAC;IAC7D;IACA,OAAOH,IAAI;EACf,CAAC,EAAE,CAAC,CAAC,CAAC;AACV;AACA,SAASN,YAAY,CAACT,GAAG,EAAE;EACvB,IAAI,CAACA,GAAG,CAACQ,QAAQ,CAAC,GAAG,CAAC,EAAE;IACpB,MAAM,IAAIT,KAAK,CAAC,2BAA2B,CAAC;EAChD;EACA,OAAOC,GAAG,CAACY,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE;AAC/B"},"metadata":{},"sourceType":"module"}