{"ast":null,"code":"/**\n * A token that provides access to Bitski on behalf of a user.\n */\nexport class AccessToken {\n  constructor(token, expiresIn) {\n    this.expiresAt = undefined;\n    this.token = token;\n    if (expiresIn) {\n      this.expiresAt = Math.floor(Date.now() / 1000) + expiresIn;\n    }\n  }\n  get expired() {\n    if (this.expiresAt) {\n      const now = Math.floor(Date.now() / 1000);\n      const expiresIn = this.expiresAt - now;\n      return expiresIn <= 0;\n    }\n    return false;\n  }\n}","map":{"version":3,"names":["AccessToken","constructor","token","expiresIn","expiresAt","undefined","Math","floor","Date","now","expired"],"sources":["/Users/charvai/Desktop/template/node_modules/bitski-provider/dist/auth/access-token.js"],"sourcesContent":["/**\n * A token that provides access to Bitski on behalf of a user.\n */\nexport class AccessToken {\n    constructor(token, expiresIn) {\n        this.expiresAt = undefined;\n        this.token = token;\n        if (expiresIn) {\n            this.expiresAt = Math.floor(Date.now() / 1000) + expiresIn;\n        }\n    }\n    get expired() {\n        if (this.expiresAt) {\n            const now = Math.floor(Date.now() / 1000);\n            const expiresIn = this.expiresAt - now;\n            return expiresIn <= 0;\n        }\n        return false;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,MAAMA,WAAW,CAAC;EACrBC,WAAW,CAACC,KAAK,EAAEC,SAAS,EAAE;IAC1B,IAAI,CAACC,SAAS,GAAGC,SAAS;IAC1B,IAAI,CAACH,KAAK,GAAGA,KAAK;IAClB,IAAIC,SAAS,EAAE;MACX,IAAI,CAACC,SAAS,GAAGE,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAGN,SAAS;IAC9D;EACJ;EACA,IAAIO,OAAO,GAAG;IACV,IAAI,IAAI,CAACN,SAAS,EAAE;MAChB,MAAMK,GAAG,GAAGH,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI,CAAC;MACzC,MAAMN,SAAS,GAAG,IAAI,CAACC,SAAS,GAAGK,GAAG;MACtC,OAAON,SAAS,IAAI,CAAC;IACzB;IACA,OAAO,KAAK;EAChB;AACJ"},"metadata":{},"sourceType":"module"}