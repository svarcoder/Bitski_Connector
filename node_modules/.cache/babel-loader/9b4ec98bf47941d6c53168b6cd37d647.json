{"ast":null,"code":"import { OAuthSignInMethod } from '../constants';\nimport { AuthenticationError, AuthenticationErrorCode } from '../errors/authentication-error';\n/**\n * Sizing options for the Bitski connect button.\n */\nexport var ConnectButtonSize;\n(function (ConnectButtonSize) {\n  ConnectButtonSize[\"Small\"] = \"SMALL\";\n  ConnectButtonSize[\"Medium\"] = \"MEDIUM\";\n  ConnectButtonSize[\"Large\"] = \"LARGE\";\n})(ConnectButtonSize || (ConnectButtonSize = {}));\n/**\n * A button used to connect to Bitski.\n */\nexport class ConnectButton {\n  /**\n   * @param authProvider An instance of an AuthProvider to process sign in requests.\n   * @param options Optional ConnectButtonOptions to configure your button.\n   * @param callback Optional callback to be called after successful or failed log in attempt.\n   * You can also set this directly later with the `callback` property.\n   */\n  constructor(sdk, options, callback) {\n    // Set options to object if undefined\n    options = options || {};\n    // Configure instance\n    this.sdk = sdk;\n    this.size = options.size || ConnectButtonSize.Medium;\n    this.authIntegrationType = options.authMethod || OAuthSignInMethod.Popup;\n    this.callback = callback;\n    this.signInOptions = options.signInOptions || {};\n    // Create the element\n    this.element = document.createElement('button');\n    this.configureElement();\n    this.element.addEventListener('click', this.signin.bind(this));\n    // Embed if needed\n    if (options.container) {\n      options.container.appendChild(this.element);\n    }\n  }\n  /**\n   * Removes the button from the page\n   */\n  remove() {\n    if (this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  }\n  async signin() {\n    const sdk = await this.sdk;\n    if (sdk === null) {\n      throw new Error('Bitski SDK is not available');\n    }\n    try {\n      const user = await sdk.signInOrConnect(this.authIntegrationType, this.signInOptions);\n      if (this.callback) {\n        this.callback(undefined, user);\n      }\n    } catch (error) {\n      // Check for cancellation\n      if (error instanceof AuthenticationError && error.code === AuthenticationErrorCode.UserCancelled) {\n        // Not a real error, the user just cancelled. Trigger cancellation callback.\n        if (this.onCancel) {\n          this.onCancel();\n        }\n      } else if (this.callback) {\n        // Real error. Forward to main callback.\n        this.callback(error, undefined);\n      }\n    }\n  }\n  configureElement() {\n    this.element.title = 'Continue with Bitski';\n    this.element.innerText = 'Continue with Bitski';\n    this.element.className = 'bitski-connect-button';\n    let sizeClass = '';\n    switch (this.size) {\n      case ConnectButtonSize.Small:\n        sizeClass = 'size-small';\n        break;\n      case ConnectButtonSize.Medium:\n        sizeClass = 'size-medium';\n        break;\n      case ConnectButtonSize.Large:\n        sizeClass = 'size-large';\n        break;\n    }\n    this.element.classList.add(sizeClass);\n  }\n}","map":{"version":3,"names":["OAuthSignInMethod","AuthenticationError","AuthenticationErrorCode","ConnectButtonSize","ConnectButton","constructor","sdk","options","callback","size","Medium","authIntegrationType","authMethod","Popup","signInOptions","element","document","createElement","configureElement","addEventListener","signin","bind","container","appendChild","remove","parentNode","removeChild","Error","user","signInOrConnect","undefined","error","code","UserCancelled","onCancel","title","innerText","className","sizeClass","Small","Large","classList","add"],"sources":["/Users/charvai/Desktop/template/node_modules/bitski/dist/esm/-private/components/connect-button.js"],"sourcesContent":["import { OAuthSignInMethod } from '../constants';\nimport { AuthenticationError, AuthenticationErrorCode } from '../errors/authentication-error';\n/**\n * Sizing options for the Bitski connect button.\n */\nexport var ConnectButtonSize;\n(function (ConnectButtonSize) {\n    ConnectButtonSize[\"Small\"] = \"SMALL\";\n    ConnectButtonSize[\"Medium\"] = \"MEDIUM\";\n    ConnectButtonSize[\"Large\"] = \"LARGE\";\n})(ConnectButtonSize || (ConnectButtonSize = {}));\n/**\n * A button used to connect to Bitski.\n */\nexport class ConnectButton {\n    /**\n     * @param authProvider An instance of an AuthProvider to process sign in requests.\n     * @param options Optional ConnectButtonOptions to configure your button.\n     * @param callback Optional callback to be called after successful or failed log in attempt.\n     * You can also set this directly later with the `callback` property.\n     */\n    constructor(sdk, options, callback) {\n        // Set options to object if undefined\n        options = options || {};\n        // Configure instance\n        this.sdk = sdk;\n        this.size = options.size || ConnectButtonSize.Medium;\n        this.authIntegrationType = options.authMethod || OAuthSignInMethod.Popup;\n        this.callback = callback;\n        this.signInOptions = options.signInOptions || {};\n        // Create the element\n        this.element = document.createElement('button');\n        this.configureElement();\n        this.element.addEventListener('click', this.signin.bind(this));\n        // Embed if needed\n        if (options.container) {\n            options.container.appendChild(this.element);\n        }\n    }\n    /**\n     * Removes the button from the page\n     */\n    remove() {\n        if (this.element.parentNode) {\n            this.element.parentNode.removeChild(this.element);\n        }\n    }\n    async signin() {\n        const sdk = await this.sdk;\n        if (sdk === null) {\n            throw new Error('Bitski SDK is not available');\n        }\n        try {\n            const user = await sdk.signInOrConnect(this.authIntegrationType, this.signInOptions);\n            if (this.callback) {\n                this.callback(undefined, user);\n            }\n        }\n        catch (error) {\n            // Check for cancellation\n            if (error instanceof AuthenticationError &&\n                error.code === AuthenticationErrorCode.UserCancelled) {\n                // Not a real error, the user just cancelled. Trigger cancellation callback.\n                if (this.onCancel) {\n                    this.onCancel();\n                }\n            }\n            else if (this.callback) {\n                // Real error. Forward to main callback.\n                this.callback(error, undefined);\n            }\n        }\n    }\n    configureElement() {\n        this.element.title = 'Continue with Bitski';\n        this.element.innerText = 'Continue with Bitski';\n        this.element.className = 'bitski-connect-button';\n        let sizeClass = '';\n        switch (this.size) {\n            case ConnectButtonSize.Small:\n                sizeClass = 'size-small';\n                break;\n            case ConnectButtonSize.Medium:\n                sizeClass = 'size-medium';\n                break;\n            case ConnectButtonSize.Large:\n                sizeClass = 'size-large';\n                break;\n        }\n        this.element.classList.add(sizeClass);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}