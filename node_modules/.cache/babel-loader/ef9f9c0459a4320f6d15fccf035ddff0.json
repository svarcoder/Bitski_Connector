{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CoinbaseWallet = void 0;\nconst types_1 = require(\"@web3-react/types\");\nfunction parseChainId(chainId) {\n  return typeof chainId === 'number' ? chainId : Number.parseInt(chainId, chainId.startsWith('0x') ? 16 : 10);\n}\nclass CoinbaseWallet extends types_1.Connector {\n  constructor(_ref) {\n    let {\n      actions,\n      options,\n      onError\n    } = _ref;\n    super(actions, onError);\n    this.options = options;\n  }\n  // the `connected` property, is bugged, but this works as a hack to check connection status\n  get connected() {\n    var _a;\n    return !!((_a = this.provider) === null || _a === void 0 ? void 0 : _a.selectedAddress);\n  }\n  isomorphicInitialize() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.eagerConnection) return;\n      yield this.eagerConnection = Promise.resolve().then(() => __importStar(require('@coinbase/wallet-sdk'))).then(m => {\n        const _a = this.options,\n          {\n            url\n          } = _a,\n          options = __rest(_a, [\"url\"]);\n        this.coinbaseWallet = new m.default(options);\n        this.provider = this.coinbaseWallet.makeWeb3Provider(url);\n        this.provider.on('connect', _ref2 => {\n          let {\n            chainId\n          } = _ref2;\n          this.actions.update({\n            chainId: parseChainId(chainId)\n          });\n        });\n        this.provider.on('disconnect', error => {\n          var _a;\n          this.actions.resetState();\n          (_a = this.onError) === null || _a === void 0 ? void 0 : _a.call(this, error);\n        });\n        this.provider.on('chainChanged', chainId => {\n          this.actions.update({\n            chainId: parseChainId(chainId)\n          });\n        });\n        this.provider.on('accountsChanged', accounts => {\n          if (accounts.length === 0) {\n            // handle this edge case by disconnecting\n            this.actions.resetState();\n          } else {\n            this.actions.update({\n              accounts\n            });\n          }\n        });\n      });\n    });\n  }\n  /** {@inheritdoc Connector.connectEagerly} */\n  connectEagerly() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const cancelActivation = this.actions.startActivation();\n      try {\n        yield this.isomorphicInitialize();\n        if (!this.connected) throw new Error('No existing connection');\n        return Promise.all([\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.provider.request({\n          method: 'eth_chainId'\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.provider.request({\n          method: 'eth_accounts'\n        })]).then(_ref3 => {\n          let [chainId, accounts] = _ref3;\n          if (!accounts.length) throw new Error('No accounts returned');\n          this.actions.update({\n            chainId: parseChainId(chainId),\n            accounts\n          });\n        });\n      } catch (error) {\n        cancelActivation();\n        throw error;\n      }\n    });\n  }\n  /**\n   * Initiates a connection.\n   *\n   * @param desiredChainIdOrChainParameters - If defined, indicates the desired chain to connect to. If the user is\n   * already connected to this chain, no additional steps will be taken. Otherwise, the user will be prompted to switch\n   * to the chain, if one of two conditions is met: either they already have it added, or the argument is of type\n   * AddEthereumChainParameter, in which case the user will be prompted to add the chain with the specified parameters\n   * first, before being prompted to switch.\n   */\n  activate(desiredChainIdOrChainParameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const desiredChainId = typeof desiredChainIdOrChainParameters === 'number' ? desiredChainIdOrChainParameters : desiredChainIdOrChainParameters === null || desiredChainIdOrChainParameters === void 0 ? void 0 : desiredChainIdOrChainParameters.chainId;\n      if (this.connected) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        if (!desiredChainId || desiredChainId === parseChainId(this.provider.chainId)) return;\n        const desiredChainIdHex = `0x${desiredChainId.toString(16)}`;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this.provider.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: desiredChainIdHex\n          }]\n        }).catch(error => __awaiter(this, void 0, void 0, function* () {\n          if (error.code === 4902 && typeof desiredChainIdOrChainParameters !== 'number') {\n            // if we're here, we can try to add a new network\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return this.provider.request({\n              method: 'wallet_addEthereumChain',\n              params: [Object.assign(Object.assign({}, desiredChainIdOrChainParameters), {\n                chainId: desiredChainIdHex\n              })]\n            });\n          }\n          throw error;\n        }));\n      }\n      const cancelActivation = this.actions.startActivation();\n      try {\n        yield this.isomorphicInitialize();\n        return Promise.all([\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.provider.request({\n          method: 'eth_chainId'\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.provider.request({\n          method: 'eth_requestAccounts'\n        })]).then(_ref4 => {\n          let [chainId, accounts] = _ref4;\n          var _a;\n          const receivedChainId = parseChainId(chainId);\n          if (!desiredChainId || desiredChainId === receivedChainId) return this.actions.update({\n            chainId: receivedChainId,\n            accounts\n          });\n          // if we're here, we can try to switch networks\n          const desiredChainIdHex = `0x${desiredChainId.toString(16)}`;\n          return (_a = this.provider) === null || _a === void 0 ? void 0 : _a.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{\n              chainId: desiredChainIdHex\n            }]\n          }).catch(error => __awaiter(this, void 0, void 0, function* () {\n            if (error.code === 4902 && typeof desiredChainIdOrChainParameters !== 'number') {\n              // if we're here, we can try to add a new network\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              return this.provider.request({\n                method: 'wallet_addEthereumChain',\n                params: [Object.assign(Object.assign({}, desiredChainIdOrChainParameters), {\n                  chainId: desiredChainIdHex\n                })]\n              });\n            }\n            throw error;\n          }));\n        });\n      } catch (error) {\n        cancelActivation();\n        throw error;\n      }\n    });\n  }\n  /** {@inheritdoc Connector.deactivate} */\n  deactivate() {\n    var _a;\n    (_a = this.coinbaseWallet) === null || _a === void 0 ? void 0 : _a.disconnect();\n  }\n  watchAsset(_ref5) {\n    let {\n      address,\n      symbol,\n      decimals,\n      image\n    } = _ref5;\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.provider) throw new Error('No provider');\n      return this.provider.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20',\n          options: {\n            address,\n            symbol,\n            decimals,\n            image // A string url of the token logo\n          }\n        }\n      }).then(success => {\n        if (!success) throw new Error('Rejected');\n        return true;\n      });\n    });\n  }\n}\nexports.CoinbaseWallet = CoinbaseWallet;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","__rest","s","t","p","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","exports","CoinbaseWallet","types_1","require","parseChainId","chainId","Number","parseInt","startsWith","Connector","constructor","actions","options","onError","connected","_a","provider","selectedAddress","isomorphicInitialize","eagerConnection","url","coinbaseWallet","default","makeWeb3Provider","on","update","error","resetState","accounts","connectEagerly","cancelActivation","startActivation","Error","all","request","method","activate","desiredChainIdOrChainParameters","desiredChainId","desiredChainIdHex","toString","params","catch","code","assign","receivedChainId","deactivate","disconnect","watchAsset","address","symbol","decimals","image","type","success"],"sources":["/Users/charvai/Desktop/template/node_modules/@web3-react/coinbase-wallet/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CoinbaseWallet = void 0;\nconst types_1 = require(\"@web3-react/types\");\nfunction parseChainId(chainId) {\n    return typeof chainId === 'number' ? chainId : Number.parseInt(chainId, chainId.startsWith('0x') ? 16 : 10);\n}\nclass CoinbaseWallet extends types_1.Connector {\n    constructor({ actions, options, onError }) {\n        super(actions, onError);\n        this.options = options;\n    }\n    // the `connected` property, is bugged, but this works as a hack to check connection status\n    get connected() {\n        var _a;\n        return !!((_a = this.provider) === null || _a === void 0 ? void 0 : _a.selectedAddress);\n    }\n    isomorphicInitialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.eagerConnection)\n                return;\n            yield (this.eagerConnection = Promise.resolve().then(() => __importStar(require('@coinbase/wallet-sdk'))).then((m) => {\n                const _a = this.options, { url } = _a, options = __rest(_a, [\"url\"]);\n                this.coinbaseWallet = new m.default(options);\n                this.provider = this.coinbaseWallet.makeWeb3Provider(url);\n                this.provider.on('connect', ({ chainId }) => {\n                    this.actions.update({ chainId: parseChainId(chainId) });\n                });\n                this.provider.on('disconnect', (error) => {\n                    var _a;\n                    this.actions.resetState();\n                    (_a = this.onError) === null || _a === void 0 ? void 0 : _a.call(this, error);\n                });\n                this.provider.on('chainChanged', (chainId) => {\n                    this.actions.update({ chainId: parseChainId(chainId) });\n                });\n                this.provider.on('accountsChanged', (accounts) => {\n                    if (accounts.length === 0) {\n                        // handle this edge case by disconnecting\n                        this.actions.resetState();\n                    }\n                    else {\n                        this.actions.update({ accounts });\n                    }\n                });\n            }));\n        });\n    }\n    /** {@inheritdoc Connector.connectEagerly} */\n    connectEagerly() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cancelActivation = this.actions.startActivation();\n            try {\n                yield this.isomorphicInitialize();\n                if (!this.connected)\n                    throw new Error('No existing connection');\n                return Promise.all([\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    this.provider.request({ method: 'eth_chainId' }),\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    this.provider.request({ method: 'eth_accounts' }),\n                ]).then(([chainId, accounts]) => {\n                    if (!accounts.length)\n                        throw new Error('No accounts returned');\n                    this.actions.update({ chainId: parseChainId(chainId), accounts });\n                });\n            }\n            catch (error) {\n                cancelActivation();\n                throw error;\n            }\n        });\n    }\n    /**\n     * Initiates a connection.\n     *\n     * @param desiredChainIdOrChainParameters - If defined, indicates the desired chain to connect to. If the user is\n     * already connected to this chain, no additional steps will be taken. Otherwise, the user will be prompted to switch\n     * to the chain, if one of two conditions is met: either they already have it added, or the argument is of type\n     * AddEthereumChainParameter, in which case the user will be prompted to add the chain with the specified parameters\n     * first, before being prompted to switch.\n     */\n    activate(desiredChainIdOrChainParameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const desiredChainId = typeof desiredChainIdOrChainParameters === 'number'\n                ? desiredChainIdOrChainParameters\n                : desiredChainIdOrChainParameters === null || desiredChainIdOrChainParameters === void 0 ? void 0 : desiredChainIdOrChainParameters.chainId;\n            if (this.connected) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                if (!desiredChainId || desiredChainId === parseChainId(this.provider.chainId))\n                    return;\n                const desiredChainIdHex = `0x${desiredChainId.toString(16)}`;\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                return this.provider.request({\n                    method: 'wallet_switchEthereumChain',\n                    params: [{ chainId: desiredChainIdHex }],\n                }).catch((error) => __awaiter(this, void 0, void 0, function* () {\n                    if (error.code === 4902 && typeof desiredChainIdOrChainParameters !== 'number') {\n                        // if we're here, we can try to add a new network\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        return this.provider.request({\n                            method: 'wallet_addEthereumChain',\n                            params: [Object.assign(Object.assign({}, desiredChainIdOrChainParameters), { chainId: desiredChainIdHex })],\n                        });\n                    }\n                    throw error;\n                }));\n            }\n            const cancelActivation = this.actions.startActivation();\n            try {\n                yield this.isomorphicInitialize();\n                return Promise.all([\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    this.provider.request({ method: 'eth_chainId' }),\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    this.provider.request({ method: 'eth_requestAccounts' }),\n                ]).then(([chainId, accounts]) => {\n                    var _a;\n                    const receivedChainId = parseChainId(chainId);\n                    if (!desiredChainId || desiredChainId === receivedChainId)\n                        return this.actions.update({ chainId: receivedChainId, accounts });\n                    // if we're here, we can try to switch networks\n                    const desiredChainIdHex = `0x${desiredChainId.toString(16)}`;\n                    return (_a = this.provider) === null || _a === void 0 ? void 0 : _a.request({\n                        method: 'wallet_switchEthereumChain',\n                        params: [{ chainId: desiredChainIdHex }],\n                    }).catch((error) => __awaiter(this, void 0, void 0, function* () {\n                        if (error.code === 4902 && typeof desiredChainIdOrChainParameters !== 'number') {\n                            // if we're here, we can try to add a new network\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                            return this.provider.request({\n                                method: 'wallet_addEthereumChain',\n                                params: [Object.assign(Object.assign({}, desiredChainIdOrChainParameters), { chainId: desiredChainIdHex })],\n                            });\n                        }\n                        throw error;\n                    }));\n                });\n            }\n            catch (error) {\n                cancelActivation();\n                throw error;\n            }\n        });\n    }\n    /** {@inheritdoc Connector.deactivate} */\n    deactivate() {\n        var _a;\n        (_a = this.coinbaseWallet) === null || _a === void 0 ? void 0 : _a.disconnect();\n    }\n    watchAsset({ address, symbol, decimals, image, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.provider)\n                throw new Error('No provider');\n            return this.provider\n                .request({\n                method: 'wallet_watchAsset',\n                params: {\n                    type: 'ERC20',\n                    options: {\n                        address,\n                        symbol,\n                        decimals,\n                        image, // A string url of the token logo\n                    },\n                },\n            })\n                .then((success) => {\n                if (!success)\n                    throw new Error('Rejected');\n                return true;\n            });\n        });\n    }\n}\nexports.CoinbaseWallet = CoinbaseWallet;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}