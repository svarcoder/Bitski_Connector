{"ast":null,"code":"export var AuthenticationErrorCode;\n(function (AuthenticationErrorCode) {\n  // The user is not currently signed in\n  AuthenticationErrorCode[AuthenticationErrorCode[\"NotSignedIn\"] = 1000] = \"NotSignedIn\";\n  // The user cancelled the auth request\n  AuthenticationErrorCode[AuthenticationErrorCode[\"UserCancelled\"] = 1001] = \"UserCancelled\";\n  // Either you did not request offline access, or the user did not approve your app for offline access\n  AuthenticationErrorCode[AuthenticationErrorCode[\"NoRefreshToken\"] = 1002] = \"NoRefreshToken\";\n  // You requested silent sign in, which is deprecated\n  AuthenticationErrorCode[AuthenticationErrorCode[\"UnsupportedAuthenticationMethod\"] = 1003] = \"UnsupportedAuthenticationMethod\";\n  // We received an error from the oauth server\n  AuthenticationErrorCode[AuthenticationErrorCode[\"ServerError\"] = 1004] = \"ServerError\";\n  // The SDK is configured incorrectly\n  AuthenticationErrorCode[AuthenticationErrorCode[\"InvalidConfiguration\"] = 1005] = \"InvalidConfiguration\";\n  // Popup blocked\n  AuthenticationErrorCode[AuthenticationErrorCode[\"PopupBlocked\"] = 1006] = \"PopupBlocked\";\n})(AuthenticationErrorCode || (AuthenticationErrorCode = {}));\n/**\n * Represents an error that is thrown during the authentication process\n */\nexport class AuthenticationError extends Error {\n  constructor(message, code) {\n    super(message);\n    this.name = 'AuthenticationError';\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, AuthenticationError);\n    }\n    this.code = code;\n  }\n  // throw AuthenticationError.NotSignedIn()\n  static NotSignedIn() {\n    return new AuthenticationError('Not signed in.', AuthenticationErrorCode.NotSignedIn);\n  }\n  // throw AuthenticationError.UserCancelled()\n  static UserCancelled() {\n    return new AuthenticationError('Sign in request was cancelled.', AuthenticationErrorCode.UserCancelled);\n  }\n  // throw AuthenticationError.NoRefreshToken()\n  static NoRefreshToken() {\n    return new AuthenticationError('Refresh token is not available.', AuthenticationErrorCode.NoRefreshToken);\n  }\n  // throw AuthenticationError.UnsupportedAuthenticationMethod()\n  static UnsupportedAuthenticationMethod() {\n    return new AuthenticationError('Sign in method not supported.', AuthenticationErrorCode.UnsupportedAuthenticationMethod);\n  }\n  // throw AuthenticationError.PopupBlocked()\n  static PopupBlocked(baseUrl) {\n    const msg = `The popup was blocked. Please make sure ${baseUrl} is allowed to open popups.`;\n    return new AuthenticationError(msg, AuthenticationErrorCode.PopupBlocked);\n  }\n  // throw Authentication Error.ServerError(message, description)\n  static ServerError(message, description) {\n    const err = new AuthenticationError(`Error from the server: ${message}`, AuthenticationErrorCode.ServerError);\n    err.description = description;\n    return err;\n  }\n  // throw AuthenticationError.InvalidConfiguration()\n  static InvalidConfiguration(reason) {\n    return new AuthenticationError(`The OAuth Configuration is invalid: ${reason}`, AuthenticationErrorCode.InvalidConfiguration);\n  }\n}","map":{"version":3,"names":["AuthenticationErrorCode","AuthenticationError","Error","constructor","message","code","name","captureStackTrace","NotSignedIn","UserCancelled","NoRefreshToken","UnsupportedAuthenticationMethod","PopupBlocked","baseUrl","msg","ServerError","description","err","InvalidConfiguration","reason"],"sources":["/Users/charvai/Desktop/template/node_modules/bitski/dist/esm/-private/errors/authentication-error.js"],"sourcesContent":["export var AuthenticationErrorCode;\n(function (AuthenticationErrorCode) {\n    // The user is not currently signed in\n    AuthenticationErrorCode[AuthenticationErrorCode[\"NotSignedIn\"] = 1000] = \"NotSignedIn\";\n    // The user cancelled the auth request\n    AuthenticationErrorCode[AuthenticationErrorCode[\"UserCancelled\"] = 1001] = \"UserCancelled\";\n    // Either you did not request offline access, or the user did not approve your app for offline access\n    AuthenticationErrorCode[AuthenticationErrorCode[\"NoRefreshToken\"] = 1002] = \"NoRefreshToken\";\n    // You requested silent sign in, which is deprecated\n    AuthenticationErrorCode[AuthenticationErrorCode[\"UnsupportedAuthenticationMethod\"] = 1003] = \"UnsupportedAuthenticationMethod\";\n    // We received an error from the oauth server\n    AuthenticationErrorCode[AuthenticationErrorCode[\"ServerError\"] = 1004] = \"ServerError\";\n    // The SDK is configured incorrectly\n    AuthenticationErrorCode[AuthenticationErrorCode[\"InvalidConfiguration\"] = 1005] = \"InvalidConfiguration\";\n    // Popup blocked\n    AuthenticationErrorCode[AuthenticationErrorCode[\"PopupBlocked\"] = 1006] = \"PopupBlocked\";\n})(AuthenticationErrorCode || (AuthenticationErrorCode = {}));\n/**\n * Represents an error that is thrown during the authentication process\n */\nexport class AuthenticationError extends Error {\n    constructor(message, code) {\n        super(message);\n        this.name = 'AuthenticationError';\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, AuthenticationError);\n        }\n        this.code = code;\n    }\n    // throw AuthenticationError.NotSignedIn()\n    static NotSignedIn() {\n        return new AuthenticationError('Not signed in.', AuthenticationErrorCode.NotSignedIn);\n    }\n    // throw AuthenticationError.UserCancelled()\n    static UserCancelled() {\n        return new AuthenticationError('Sign in request was cancelled.', AuthenticationErrorCode.UserCancelled);\n    }\n    // throw AuthenticationError.NoRefreshToken()\n    static NoRefreshToken() {\n        return new AuthenticationError('Refresh token is not available.', AuthenticationErrorCode.NoRefreshToken);\n    }\n    // throw AuthenticationError.UnsupportedAuthenticationMethod()\n    static UnsupportedAuthenticationMethod() {\n        return new AuthenticationError('Sign in method not supported.', AuthenticationErrorCode.UnsupportedAuthenticationMethod);\n    }\n    // throw AuthenticationError.PopupBlocked()\n    static PopupBlocked(baseUrl) {\n        const msg = `The popup was blocked. Please make sure ${baseUrl} is allowed to open popups.`;\n        return new AuthenticationError(msg, AuthenticationErrorCode.PopupBlocked);\n    }\n    // throw Authentication Error.ServerError(message, description)\n    static ServerError(message, description) {\n        const err = new AuthenticationError(`Error from the server: ${message}`, AuthenticationErrorCode.ServerError);\n        err.description = description;\n        return err;\n    }\n    // throw AuthenticationError.InvalidConfiguration()\n    static InvalidConfiguration(reason) {\n        return new AuthenticationError(`The OAuth Configuration is invalid: ${reason}`, AuthenticationErrorCode.InvalidConfiguration);\n    }\n}\n"],"mappings":"AAAA,OAAO,IAAIA,uBAAuB;AAClC,CAAC,UAAUA,uBAAuB,EAAE;EAChC;EACAA,uBAAuB,CAACA,uBAAuB,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,GAAG,aAAa;EACtF;EACAA,uBAAuB,CAACA,uBAAuB,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,GAAG,eAAe;EAC1F;EACAA,uBAAuB,CAACA,uBAAuB,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,GAAG,gBAAgB;EAC5F;EACAA,uBAAuB,CAACA,uBAAuB,CAAC,iCAAiC,CAAC,GAAG,IAAI,CAAC,GAAG,iCAAiC;EAC9H;EACAA,uBAAuB,CAACA,uBAAuB,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,GAAG,aAAa;EACtF;EACAA,uBAAuB,CAACA,uBAAuB,CAAC,sBAAsB,CAAC,GAAG,IAAI,CAAC,GAAG,sBAAsB;EACxG;EACAA,uBAAuB,CAACA,uBAAuB,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,GAAG,cAAc;AAC5F,CAAC,EAAEA,uBAAuB,KAAKA,uBAAuB,GAAG,CAAC,CAAC,CAAC,CAAC;AAC7D;AACA;AACA;AACA,OAAO,MAAMC,mBAAmB,SAASC,KAAK,CAAC;EAC3CC,WAAW,CAACC,OAAO,EAAEC,IAAI,EAAE;IACvB,KAAK,CAACD,OAAO,CAAC;IACd,IAAI,CAACE,IAAI,GAAG,qBAAqB;IACjC;IACA,IAAIJ,KAAK,CAACK,iBAAiB,EAAE;MACzBL,KAAK,CAACK,iBAAiB,CAAC,IAAI,EAAEN,mBAAmB,CAAC;IACtD;IACA,IAAI,CAACI,IAAI,GAAGA,IAAI;EACpB;EACA;EACA,OAAOG,WAAW,GAAG;IACjB,OAAO,IAAIP,mBAAmB,CAAC,gBAAgB,EAAED,uBAAuB,CAACQ,WAAW,CAAC;EACzF;EACA;EACA,OAAOC,aAAa,GAAG;IACnB,OAAO,IAAIR,mBAAmB,CAAC,gCAAgC,EAAED,uBAAuB,CAACS,aAAa,CAAC;EAC3G;EACA;EACA,OAAOC,cAAc,GAAG;IACpB,OAAO,IAAIT,mBAAmB,CAAC,iCAAiC,EAAED,uBAAuB,CAACU,cAAc,CAAC;EAC7G;EACA;EACA,OAAOC,+BAA+B,GAAG;IACrC,OAAO,IAAIV,mBAAmB,CAAC,+BAA+B,EAAED,uBAAuB,CAACW,+BAA+B,CAAC;EAC5H;EACA;EACA,OAAOC,YAAY,CAACC,OAAO,EAAE;IACzB,MAAMC,GAAG,GAAI,2CAA0CD,OAAQ,6BAA4B;IAC3F,OAAO,IAAIZ,mBAAmB,CAACa,GAAG,EAAEd,uBAAuB,CAACY,YAAY,CAAC;EAC7E;EACA;EACA,OAAOG,WAAW,CAACX,OAAO,EAAEY,WAAW,EAAE;IACrC,MAAMC,GAAG,GAAG,IAAIhB,mBAAmB,CAAE,0BAAyBG,OAAQ,EAAC,EAAEJ,uBAAuB,CAACe,WAAW,CAAC;IAC7GE,GAAG,CAACD,WAAW,GAAGA,WAAW;IAC7B,OAAOC,GAAG;EACd;EACA;EACA,OAAOC,oBAAoB,CAACC,MAAM,EAAE;IAChC,OAAO,IAAIlB,mBAAmB,CAAE,uCAAsCkB,MAAO,EAAC,EAAEnB,uBAAuB,CAACkB,oBAAoB,CAAC;EACjI;AACJ"},"metadata":{},"sourceType":"module"}