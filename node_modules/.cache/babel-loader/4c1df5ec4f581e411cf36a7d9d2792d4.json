{"ast":null,"code":"export var SubscriptionErrorCode;\n(function (SubscriptionErrorCode) {\n  SubscriptionErrorCode[SubscriptionErrorCode[\"UnsupportedType\"] = 2000] = \"UnsupportedType\";\n  SubscriptionErrorCode[SubscriptionErrorCode[\"NotFound\"] = 2001] = \"NotFound\";\n})(SubscriptionErrorCode || (SubscriptionErrorCode = {}));\n/**\n * Represents an error that occurs in the subscriptions subprovider\n */\nexport class SubscriptionError extends Error {\n  static UnsupportedType(type) {\n    return new SubscriptionError(`Unsupported subscription type: ${type}`, SubscriptionErrorCode.UnsupportedType);\n  }\n  static NotFound(subscriptionId) {\n    return new SubscriptionError(`Subscription with id ${subscriptionId} not found`, SubscriptionErrorCode.NotFound);\n  }\n  constructor(message, code) {\n    super(message);\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, SubscriptionError);\n    }\n    this.code = code;\n  }\n}","map":{"version":3,"names":["SubscriptionErrorCode","SubscriptionError","Error","UnsupportedType","type","NotFound","subscriptionId","constructor","message","code","captureStackTrace"],"sources":["/Users/charvai/Desktop/template/node_modules/@bitski/provider-engine/dist/modules/errors/subscription-error.js"],"sourcesContent":["export var SubscriptionErrorCode;\n(function (SubscriptionErrorCode) {\n    SubscriptionErrorCode[SubscriptionErrorCode[\"UnsupportedType\"] = 2000] = \"UnsupportedType\";\n    SubscriptionErrorCode[SubscriptionErrorCode[\"NotFound\"] = 2001] = \"NotFound\";\n})(SubscriptionErrorCode || (SubscriptionErrorCode = {}));\n/**\n * Represents an error that occurs in the subscriptions subprovider\n */\nexport class SubscriptionError extends Error {\n    static UnsupportedType(type) {\n        return new SubscriptionError(`Unsupported subscription type: ${type}`, SubscriptionErrorCode.UnsupportedType);\n    }\n    static NotFound(subscriptionId) {\n        return new SubscriptionError(`Subscription with id ${subscriptionId} not found`, SubscriptionErrorCode.NotFound);\n    }\n    constructor(message, code) {\n        super(message);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, SubscriptionError);\n        }\n        this.code = code;\n    }\n}\n"],"mappings":"AAAA,OAAO,IAAIA,qBAAqB;AAChC,CAAC,UAAUA,qBAAqB,EAAE;EAC9BA,qBAAqB,CAACA,qBAAqB,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,GAAG,iBAAiB;EAC1FA,qBAAqB,CAACA,qBAAqB,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,GAAG,UAAU;AAChF,CAAC,EAAEA,qBAAqB,KAAKA,qBAAqB,GAAG,CAAC,CAAC,CAAC,CAAC;AACzD;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,SAASC,KAAK,CAAC;EACzC,OAAOC,eAAe,CAACC,IAAI,EAAE;IACzB,OAAO,IAAIH,iBAAiB,CAAE,kCAAiCG,IAAK,EAAC,EAAEJ,qBAAqB,CAACG,eAAe,CAAC;EACjH;EACA,OAAOE,QAAQ,CAACC,cAAc,EAAE;IAC5B,OAAO,IAAIL,iBAAiB,CAAE,wBAAuBK,cAAe,YAAW,EAAEN,qBAAqB,CAACK,QAAQ,CAAC;EACpH;EACAE,WAAW,CAACC,OAAO,EAAEC,IAAI,EAAE;IACvB,KAAK,CAACD,OAAO,CAAC;IACd;IACA,IAAIN,KAAK,CAACQ,iBAAiB,EAAE;MACzBR,KAAK,CAACQ,iBAAiB,CAAC,IAAI,EAAET,iBAAiB,CAAC;IACpD;IACA,IAAI,CAACQ,IAAI,GAAGA,IAAI;EACpB;AACJ"},"metadata":{},"sourceType":"module"}