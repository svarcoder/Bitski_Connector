{"ast":null,"code":"import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport NodeDetailManager from '@toruslabs/fetch-node-details';\nimport { get, setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, BasePostMessageStream, setupMultiplex } from '@toruslabs/openlogin-jrpc';\nimport TorusJs from '@toruslabs/torus.js';\nimport deepmerge from 'lodash.merge';\nimport { ObservableStore, storeAsStream } from '@metamask/obs-store';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport dequal from 'fast-deep-equal';\nimport { duplex } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport createHash from 'create-hash';\nimport { EventEmitter } from 'events';\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\"\n};\nconst WALLET_VERIFIERS = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  EMAIL_PASSWORDLESS: \"torus-auth0-email-passwordless\"\n};\nconst WALLET_OPENLOGIN_VERIFIER_MAP = {\n  [WALLET_VERIFIERS.GOOGLE]: \"tkey-google\",\n  [WALLET_VERIFIERS.FACEBOOK]: \"tkey-facebook\",\n  [WALLET_VERIFIERS.TWITCH]: \"tkey-twitch\",\n  [WALLET_VERIFIERS.REDDIT]: \"tkey-reddit\",\n  [WALLET_VERIFIERS.DISCORD]: \"tkey-discord\",\n  [WALLET_VERIFIERS.EMAIL_PASSWORDLESS]: \"tkey-auth0-email-passwordless\"\n};\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\nconst SUPPORTED_PAYMENT_NETWORK = {\n  MAINNET: \"mainnet\",\n  MATIC: \"matic\",\n  BSC_MAINNET: \"bsc_mainnet\",\n  AVALANCHE_MAINNET: \"avalanche_mainnet\",\n  XDAI: \"xdai\"\n};\nconst TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\n\n/**\n * From https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC&extraParams=YourSite\n * GET https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC\n * Then map over returned entries, picking tsym\n *\n * Last updated: Date of commit\n */\n\nconst CRYPTO_COMPARE_CURRENCIES = [\"ETH\", \"USDT\", \"USDC\", \"TUSD\", \"EOSDT\", \"USD\", \"DAI\", \"GUSD\", \"DKKT\", \"PAX\", \"ILS\", \"RUB\", \"BYN\", \"EUR\", \"GBP\", \"JPY\", \"KRW\", \"PLN\", \"MXN\", \"AUD\", \"BRL\", \"CAD\", \"CHF\", \"KPW\", \"LAK\", \"LBP\", \"LKR\", \"XOF\", \"CNHT\", \"DOGE\", \"UAH\", \"TRY\", \"HKD\", \"XJP\", \"SGD\", \"USC\", \"NZD\", \"NGN\", \"RUR\", \"COP\", \"GHS\", \"EGP\", \"IDR\", \"BHD\", \"CRC\", \"PEN\", \"AED\", \"DOP\", \"PKR\", \"HUF\", \"VND\", \"XAR\", \"LTC\", \"RON\", \"OMR\", \"MYR\", \"DKK\", \"UGX\", \"ZMW\", \"SAR\", \"SEK\", \"GEL\", \"RWF\", \"IRR\", \"TZS\", \"CNY\", \"VEF\", \"BDT\", \"HRK\", \"CLP\", \"THB\", \"XAF\", \"ARS\", \"UYU\", \"SZL\", \"KZT\", \"NOK\", \"KES\", \"PAB\", \"INR\", \"CZK\", \"MAD\", \"TWD\", \"PHP\", \"ZAR\", \"BOB\", \"CDF\", \"DASH\", \"VES\", \"ISK\", \"MWK\", \"BAM\", \"TTD\", \"XRP\", \"JOD\", \"RSD\", \"HNL\", \"BGN\", \"GTQ\", \"BWP\", \"XMR\", \"MMK\", \"QAR\", \"AOA\", \"KWD\", \"MUR\", \"WUSD\", \"WEUR\", \"WAVES\", \"WTRY\", \"LRD\", \"LSL\", \"LYD\", \"AWG\", \"MDL\", \"BTO\", \"EURS\", \"CHFT\", \"MKD\", \"MNT\", \"MOP\", \"MRO\", \"MVR\", \"VOLLAR\", \"CKUSD\", \"KHR\", \"VUV\", \"BITCNY\", \"QC\", \"BBD\", \"NAD\", \"NPR\", \"PGK\", \"PYG\", \"BIF\", \"BMD\", \"BND\", \"XLM\", \"BNB\", \"SCR\", \"BAT\", \"CRO\", \"HT\", \"KCS\", \"LEO\", \"LINK\", \"MKR\", \"NPXS\", \"OMG\", \"REP\", \"ZB\", \"ZIL\", \"ZRX\", \"BCH\", \"BZD\", \"CUP\", \"CVE\", \"DJF\", \"DZD\", \"ERN\", \"ETB\", \"FJD\", \"FKP\", \"BUSD\", \"ANCT\", \"ALL\", \"AMD\", \"ANG\", \"CNYX\", \"IQD\", \"UZS\", \"TND\", \"GGP\", \"XAU\", \"KGS\", \"GIP\", \"JMD\", \"ZEC\", \"USDP\", \"BSV\", \"EMC2\", \"SNT\", \"GTO\", \"POWR\", \"EUSD\", \"EURT\", \"BCY\", \"BTS\", \"ATM\", \"BLOCKPAY\", \"ARDR\", \"AMP\", \"B2X\", \"BITGOLD\", \"BITEUR\", \"ATB\", \"BITUSD\", \"AGRS\", \"DFXT\", \"HIKEN\", \"BIX\", \"KNC\", \"EOS\", \"COB\", \"COSS\", \"BMH\", \"NANO\", \"BDG\", \"BNT\", \"XVG\", \"LKK1Y\", \"LKK\", \"USDK\", \"EURN\", \"NZDT\", \"JSE\", \"GMD\", \"GNF\", \"GYD\", \"YER\", \"XPF\", \"HTG\", \"SLL\", \"SOS\", \"WST\", \"SVC\", \"SYP\", \"NEO\", \"KMF\", \"JUMP\", \"AYA\", \"BLAST\", \"WGR\", \"BCN\", \"BTG\", \"URALS\", \"INN\", \"USDQ\", \"CNH\", \"HUSD\", \"BKRW\", \"NZDX\", \"EURX\", \"CADX\", \"USDEX\", \"JPYX\", \"AUDX\", \"VNDC\", \"EON\", \"GBPX\", \"CHFX\", \"USDJ\", \"IDRT\", \"USDS\", \"USDN\", \"BIDR\", \"IDK\", \"BSD\", \"BTN\", \"KYD\", \"NIO\", \"SBD\", \"SDG\", \"SHP\", \"TOP\", \"XCD\", \"XCHF\", \"CNYT\", \"GYEN\", \"ZUSD\", \"GOLD\", \"TRX\", \"TRYB\", \"PLATC\", \"STRAX\", \"UST\", \"GLM\", \"VAI\", \"BRZ\", \"DDRST\", \"XAUT\", \"MIM\"];\n/**\n * currencies supported by the payment provider\n * Last updated: Date of commit\n */\n\nconst PROVIDER_SUPPORTED_FIAT_CURRENCIES = {\n  // https://integrations.simplex.com/supported_currencies\n  // https://support.moonpay.com/hc/en-gb/articles/360011931457-Which-fiat-currencies-are-supported-\n  [PAYMENT_PROVIDER.MOONPAY]: [\"AUD\", \"BGN\", \"BRL\", \"CAD\", \"CHF\", \"CNY\", \"COP\", \"CZK\", \"DKK\", \"DOP\", \"EGP\", \"EUR\", \"GBP\", \"HKD\", \"HRK\", \"IDR\", \"ILS\", \"JPY\", \"JOD\", \"KES\", \"KRW\", \"KWD\", \"LKR\", \"MAD\", \"MXN\", \"MYR\", \"NGN\", \"NOK\", \"NZD\", \"OMR\", \"PEN\", \"PKR\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"TWD\", \"USD\", \"VND\", \"ZAR\"],\n  /**\n   * https://docs.sendwyre.com/docs/supported-currencies#fiat\n   * The ones where credit card is supported\n   */\n  [PAYMENT_PROVIDER.WYRE]: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"NZD\", \"ARS\", \"BRL\", \"CHF\", \"CLP\", \"COP\", \"CZK\", \"DKK\", \"HKD\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"PHP\", \"PLN\", \"SEK\", \"THB\", \"VND\", \"ZAR\"],\n  // https://support.ramp.network/en/articles/471-why-am-i-paying-in-usd-eur-gbp\n  [PAYMENT_PROVIDER.RAMPNETWORK]: [\"USD\", \"EUR\", \"GBP\"],\n  // From https://xanpool.com/ fiat select dropdown\n  [PAYMENT_PROVIDER.XANPOOL]: [\"SGD\", \"HKD\", \"THB\", \"PHP\", \"INR\", \"IDR\", \"MYR\", \"AUD\", \"NZD\", \"KRW\"],\n  // https://support.aax.com/en/articles/5295762-mercuryo\n  // RUB / UAH currently not supported\n  [PAYMENT_PROVIDER.MERCURYO]: [\"EUR\", \"USD\", \"GBP\", \"TRY\", \"JPY\", \"BRL\", \"NGN\", \"VND\", \"MXN\", \"KRW\"],\n  /**\n   * https://support.transak.com/hc/en-us/articles/360020615578-Credit-and-Debit-Card-Payments-through-Transak\n   * or\n   * https://transak.stoplight.io/docs/transak-docs/b3A6OTk1ODQ0-2-get-fiat-currencies\n   */\n  [PAYMENT_PROVIDER.TRANSAK]: [\"ARS\", \"AUD\", \"BBD\", \"BGN\", \"BMD\", \"BRL\", \"CAD\", \"CHF\", \"CLP\", \"CRC\", \"CZK\", \"DKK\", \"DOP\", \"EUR\", \"FJD\", \"FKP\", \"GBP\", \"GIP\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"ISK\", \"JMD\", \"JPY\", \"KES\", \"KRW\", \"MDL\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PEN\", \"PHP\", \"PLN\", \"PYG\", \"RON\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"TZS\", \"USD\", \"ZAR\"]\n};\nconst cryptoCompareCurrenciesSet = new Set(CRYPTO_COMPARE_CURRENCIES);\n/**\n * Fiat currencies that we support\n */\n\nfunction supportedFiatCurrencies(provider) {\n  const providerSupportedFiatCurrencies = PROVIDER_SUPPORTED_FIAT_CURRENCIES[provider];\n  return providerSupportedFiatCurrencies.filter(currency => cryptoCompareCurrenciesSet.has(currency));\n}\nconst paymentProviders$1 = {\n  [PAYMENT_PROVIDER.MOONPAY]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"4.5% or 5 USD\",\n    line3: \"2,000€/day, 10,000€/mo\",\n    supportPage: \"https://help.moonpay.io/en/\",\n    minOrderValue: 24.99,\n    maxOrderValue: 50000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MOONPAY),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"aave\",\n        display: \"AAVE\"\n      }, {\n        value: \"bat\",\n        display: \"BAT\"\n      }, {\n        value: \"dai\",\n        display: \"DAI\"\n      }, {\n        value: \"eth\",\n        display: \"ETH\"\n      }, {\n        value: \"mkr\",\n        display: \"MKR\"\n      }, {\n        value: \"matic\",\n        display: \"MATIC\"\n      }, {\n        value: \"usdt\",\n        display: \"USDT\"\n      }, {\n        value: \"usdc\",\n        display: \"USDC\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"eth_polygon\",\n        display: \"ETH\"\n      }, {\n        value: \"matic_polygon\",\n        display: \"MATIC\"\n      }, {\n        value: \"usdc_polygon\",\n        display: \"USDC\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"bnb_bsc\",\n        display: \"BNB\"\n      }, {\n        value: \"busd_bsc\",\n        display: \"BUSD\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"avax_cchain\",\n        display: \"AVAX\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.WYRE]: {\n    line1: \"Apple Pay/ Debit/ Credit Card\",\n    line2: \"4.9% + 30¢ or 5 USD\",\n    line3: \"$250/day\",\n    supportPage: \"https://support.sendwyre.com/en/\",\n    minOrderValue: 5,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.WYRE),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"MKR\",\n        display: \"MKR\"\n      }, {\n        value: \"UNI\",\n        display: \"UNI\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"MUSDC\",\n        display: \"USDC\"\n      }],\n      // AVAXC? or AVAX?\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAXC\",\n        display: \"AVAXC\"\n      }]\n    },\n    includeFees: false,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.RAMPNETWORK]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://instant.ramp.network/\",\n    minOrderValue: 50,\n    maxOrderValue: 20000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.RAMPNETWORK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"MATIC_DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"MATIC_MATIC\",\n        display: \"MATIC\"\n      }, {\n        value: \"MATIC_USDC\",\n        display: \"USDC\"\n      }],\n      // what about AVAXC?\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAX\",\n        display: \"AVAX\"\n      }] // Temporary unavailable\n      // [SUPPORTED_PAYMENT_NETWORK.XDAI]: [{ value: 'XDAI_XDAI', display: 'XDAI' }],\n    },\n\n    includeFees: true,\n    api: true,\n    receiveHint: \"walletTopUp.receiveHintRamp\",\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.XANPOOL]: {\n    line1: \"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ <br>ViettelPay/ DuitNow\",\n    line2: \"2.5% buying, 3% selling\",\n    line3: \"$2,500 / day\",\n    supportPage: \"mailto:support@xanpool.com\",\n    minOrderValue: 100,\n    maxOrderValue: 2500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.XANPOOL),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    sell: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.MERCURYO]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"3.95% or 4 USD\",\n    line3: \"10,000€/day, 25,000€/mo\",\n    supportPage: \"mailto:support@mercuryo.io\",\n    minOrderValue: 30,\n    maxOrderValue: 5000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MERCURYO),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"BNB\",\n        display: \"BNB\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }, {\n        value: \"1INCH\",\n        display: \"1INCH\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.TRANSAK]: {\n    line1: \"Apple & Google Pay / Credit/Debit Card<br/>Bangkok Bank Mobile & iPay<br/>Bank Transfer (sepa/gbp) / SCB Mobile & Easy\",\n    line2: \"0.99% - 5.5% or 5 USD\",\n    line3: \"$5,000/day, $28,000/mo\",\n    supportPage: \"https://support.transak.com/hc/en-US\",\n    minOrderValue: 30,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.TRANSAK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"MATIC\",\n        display: \"MATIC\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"WETH\",\n        display: \"WETH\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"BNB\",\n        display: \"BNB\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAX\",\n        display: \"AVAX\"\n      }]\n    },\n    includeFees: true,\n    enforceMax: true\n  }\n};\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: Object.values(WALLET_VERIFIERS),\n  paymentProviders: paymentProviders$1,\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKeyPrefix: \"torus-\"\n};\nconst runOnLoad = fn => new Promise((resolve, reject) => {\n  if (window.document.body != null) {\n    Promise.resolve(fn()).then(resolve).catch(reject);\n  } else {\n    window.document.addEventListener(\"DOMContentLoaded\", () => {\n      Promise.resolve(fn()).then(resolve).catch(reject);\n    });\n  }\n});\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\nconst handleEvent = function (handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\nconst handleStream = (handle, eventName, handler) => {\n  const handlerWrapper = chunk => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n  handle.on(eventName, handlerWrapper);\n};\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\nvar log = loglevel.getLogger(\"torus-embed\");\nvar messages = {\n  errors: {\n    disconnected: () => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: () => \"Torus: Disconnected from iframe. Page reload required.\",\n    sendSiteMetadata: () => \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\",\n    unsupportedSync: method => \"Torus: The Torus Ethereum provider does not support synchronous methods like \".concat(method, \" without a callback parameter.\"),\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners, shouldSendMetadata) => \"Invalid options. Received: { maxEventListeners: \".concat(maxEventListeners, \", shouldSendMetadata: \").concat(shouldSendMetadata, \" }\"),\n    invalidRequestArgs: () => \"Expected a single, non-array, object argument.\",\n    invalidRequestMethod: () => \"'args.method' must be a non-empty string.\",\n    invalidRequestParams: () => \"'args.params' must be an object or array if provided.\",\n    invalidLoggerObject: () => \"'args.logger' must be an object if provided.\",\n    invalidLoggerMethod: method => \"'args.logger' must include required method '\".concat(method, \"'.\")\n  },\n  info: {\n    connected: chainId => \"Torus: Connected to chain with ID \\\"\".concat(chainId, \"\\\".\")\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation: 'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' + 'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation: 'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' + ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    events: {\n      close: 'Torus: The event \"close\" is deprecated and may be removed in the future. Please use \"disconnect\" instead.' + \"\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193\",\n      data: 'Torus: The event \"data\" is deprecated and will be removed in the future.' + 'Use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message',\n      networkChanged: 'Torus: The event \"networkChanged\" is deprecated and may be removed in the future.' + ' Please use \"chainChanged\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n      notification: 'Torus: The event \"notification\" is deprecated and may be removed in the future. ' + 'Please use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193'\n    },\n    publicConfigStore: 'Torus: The property \"publicConfigStore\" is deprecated and WILL be removed in the future.'\n  }\n};\nconst {\n  paymentProviders\n} = configuration;\nconst validatePaymentProvider = (provider, params) => {\n  const errors = {};\n  if (!provider) {\n    return {\n      errors,\n      isValid: true\n    };\n  }\n  if (provider && !paymentProviders[provider]) {\n    errors.provider = \"Invalid Provider\";\n    return {\n      errors,\n      isValid: Object.keys(errors).length === 0\n    };\n  }\n  const selectedProvider = paymentProviders[provider];\n  const selectedParams = params || {}; // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n  // validations\n\n  if (selectedParams.fiatValue) {\n    const requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax) errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n  if (selectedParams.selectedCryptoCurrency) {\n    const validCryptoCurrenciesByChain = Object.values(selectedProvider.validCryptoCurrenciesByChain).flat().map(currency => currency.value);\n    const finalCryptoCurrency = provider === PAYMENT_PROVIDER.MOONPAY ? selectedParams.selectedCryptoCurrency.toLowerCase() : selectedParams.selectedCryptoCurrency;\n    if (validCryptoCurrenciesByChain && !validCryptoCurrenciesByChain.includes(finalCryptoCurrency)) errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n  return {\n    errors,\n    isValid: Object.keys(errors).length === 0\n  };\n}; // utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\n\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: \"The request 'method' must be a non-empty string.\",\n        data: req\n      });\n    }\n    next(done => {\n      const {\n        error\n      } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(\"MetaMask - RPC Error: \".concat(error.message), error);\n      return done();\n    });\n  };\n} // resolve response.result or response, reject errors\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\n\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = \"MetaMask: Lost connection to \\\"\".concat(remoteLabel, \"\\\".\");\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += \"\\n\".concat(error.stack);\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\nconst getPreopenInstanceId = () => Math.random().toString(36).slice(2);\nconst getTorusUrl = async (buildEnv, integrity) => {\n  let torusUrl;\n  let logLevel; // Do not change this line\n\n  const version = \"1.35.8\";\n  let versionUsed = integrity.version || version;\n  try {\n    if ((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version) {\n      let response;\n      if (!configuration.prodTorusUrl) response = await get(\"\".concat(configuration.api, \"/latestversion?name=@toruslabs/torus-embed&version=\").concat(version), {}, {\n        useAPIKey: true\n      });else response = {\n        data: configuration.prodTorusUrl\n      };\n      versionUsed = response.data; // eslint-disable-next-line require-atomic-updates\n\n      configuration.prodTorusUrl = response.data;\n    }\n  } catch (error) {\n    log.error(error, \"unable to fetch latest version\");\n  }\n  log.info(\"version used: \", versionUsed);\n  switch (buildEnv) {\n    case \"binance\":\n      torusUrl = \"https://binance.tor.us/v\".concat(versionUsed);\n      logLevel = \"info\";\n      break;\n    case \"testing\":\n      torusUrl = \"https://testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"lrc\":\n      torusUrl = \"https://lrc.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"beta\":\n      torusUrl = \"https://beta.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:4050\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = \"https://app.tor.us/v\".concat(versionUsed);\n      logLevel = \"error\";\n      break;\n  }\n  return {\n    torusUrl,\n    logLevel\n  };\n};\nconst getUserLanguage = () => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\nconst EMITTED_NOTIFICATIONS = [\"eth_subscription\" // per eth-json-rpc-filters/subscriptionManager\n];\n\nconst NOOP = () => {// empty function\n};\nconst FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nconst FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nconst FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nSafeEventEmitter.defaultMaxListeners = 100; // resolve response.result, reject errors\n\nconst getRpcPromiseCallback = function (resolve, reject) {\n  let unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return (error, response) => {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n};\nclass TorusInpageProvider extends SafeEventEmitter {\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  constructor(connectionStream) {\n    let {\n      maxEventListeners = 100,\n      shouldSendMetadata = true,\n      jsonRpcStreamName = \"provider\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    _defineProperty(this, \"chainId\", void 0);\n    _defineProperty(this, \"selectedAddress\", void 0);\n    _defineProperty(this, \"_rpcEngine\", void 0);\n    _defineProperty(this, \"networkVersion\", void 0);\n    _defineProperty(this, \"shouldSendMetadata\", void 0);\n    _defineProperty(this, \"isTorus\", void 0);\n    _defineProperty(this, \"_publicConfigStore\", void 0);\n    _defineProperty(this, \"tryPreopenHandle\", void 0);\n    _defineProperty(this, \"enable\", void 0);\n    _defineProperty(this, \"_state\", void 0);\n    _defineProperty(this, \"_jsonRpcConnection\", void 0);\n    _defineProperty(this, \"_sentWarnings\", {\n      // methods\n      enable: false,\n      experimentalMethods: false,\n      send: false,\n      publicConfigStore: false,\n      // events\n      events: {\n        close: false,\n        data: false,\n        networkChanged: false,\n        notification: false\n      }\n    });\n    if (!duplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners); // private state\n\n    this._state = _objectSpread$1({}, TorusInpageProvider._defaultState); // public state\n\n    this.selectedAddress = null;\n    this.networkVersion = null;\n    this.chainId = null;\n    this.shouldSendMetadata = shouldSendMetadata; // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._sendSync = this._sendSync.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this); // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"MetaMask\")); // subscribe to metamask public config (one-way)\n\n    this._publicConfigStore = new ObservableStore({\n      storageKey: \"Metamask-Config\"\n    }); // handle isUnlocked changes, and chainChanged and networkChanged events\n    // this._publicConfigStore.subscribe((stringifiedState) => {\n    //   // This is because we are using store as string\n    //   const state = JSON.parse(stringifiedState as unknown as string);\n    //   if (\"isUnlocked\" in state && state.isUnlocked !== this._state.isUnlocked) {\n    //     this._state.isUnlocked = state.isUnlocked;\n    //     if (!this._state.isUnlocked) {\n    //       // accounts are never exposed when the extension is locked\n    //       this._handleAccountsChanged([]);\n    //     } else {\n    //       // this will get the exposed accounts, if any\n    //       try {\n    //         this._rpcRequest(\n    //           { method: \"eth_accounts\", params: [] },\n    //           NOOP,\n    //           true // indicating that eth_accounts _should_ update accounts\n    //         );\n    //       } catch (_) {\n    //         // Swallow error\n    //       }\n    //     }\n    //   }\n    //   if (\"selectedAddress\" in state && this.selectedAddress !== state.selectedAddress) {\n    //     try {\n    //       this._rpcRequest(\n    //         { method: \"eth_accounts\", params: [] },\n    //         NOOP,\n    //         true // indicating that eth_accounts _should_ update accounts\n    //       );\n    //     } catch (_) {\n    //       // Swallow error\n    //     }\n    //   }\n    //   // Emit chainChanged event on chain change\n    //   if (\"chainId\" in state && state.chainId !== this.chainId) {\n    //     this.chainId = state.chainId || null;\n    //     this.emit(\"chainChanged\", this.chainId);\n    //     // indicate that we've connected, for EIP-1193 compliance\n    //     // we do this here so that iframe can initialize\n    //     if (!this._state.hasEmittedConnection) {\n    //       this._handleConnect(this.chainId);\n    //       this._state.hasEmittedConnection = true;\n    //     }\n    //   }\n    //   // Emit networkChanged event on network change\n    //   if (\"networkVersion\" in state && state.networkVersion !== this.networkVersion) {\n    //     this.networkVersion = state.networkVersion || null;\n    //     this.emit(\"networkChanged\", this.networkVersion);\n    //   }\n    // });\n\n    pump(mux.createStream(\"publicConfig\"), storeAsStream(this._publicConfigStore),\n    // RPC requests should still work if only this stream fails\n    logStreamDisconnectWarning.bind(this, \"MetaMask PublicConfigStore\")); // ignore phishing warning message (handled elsewhere)\n\n    mux.ignoreStream(\"phishing\"); // setup own event listeners\n    // EIP-1193 connect\n\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    }); // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, \"MetaMask RpcProvider\")); // handle RPC requests via dapp-side rpc engine\n\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine; // json rpc notification listener\n\n    jsonRpcConnection.events.on(\"notification\", payload => {\n      const {\n        method,\n        params\n      } = payload;\n      if (method === \"wallet_accountsChanged\") {\n        this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        this.emit(\"data\", payload); // deprecated\n\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params\n        });\n      } // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n    });\n  }\n\n  get publicConfigStore() {\n    if (!this._sentWarnings.publicConfigStore) {\n      log.warn(messages.warnings.publicConfigStore);\n      this._sentWarnings.publicConfigStore = true;\n    }\n    return this._publicConfigStore;\n  }\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n\n  isConnected() {\n    return this._state.isConnected;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args\n      });\n    }\n    const {\n      method,\n      params\n    } = args;\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args\n      });\n    }\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args\n      });\n    }\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n\n  sendAsync(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   *   addListener, on, once, prependListener, prependOnceListener\n   */\n\n  addListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.addListener(eventName, listener);\n  }\n  on(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.on(eventName, listener);\n  }\n  once(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.once(eventName, listener);\n  }\n  prependListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.prependListener(eventName, listener);\n  }\n  prependOnceListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.prependOnceListener(eventName, listener);\n  } // Private Methods\n  //= ===================\n\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n\n  async _initializeState() {\n    try {\n      const {\n        accounts,\n        chainId,\n        isUnlocked,\n        networkVersion\n      } = await this.request({\n        method: \"wallet_getProviderState\"\n      }); // indicate that we've connected, for EIP-1193 compliance\n\n      this.emit(\"connect\", {\n        chainId\n      });\n      this._handleChainChanged({\n        chainId,\n        networkVersion\n      });\n      this._handleUnlockStateChanged({\n        accounts,\n        isUnlocked\n      });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @param isInternal - false - Whether the request is internal.\n   */\n\n  _rpcRequest(payload, callback) {\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = (err, res) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload, cb);\n        return;\n      }\n    }\n    this.tryPreopenHandle(_payload, cb);\n  }\n  send(methodOrPayload, callbackOrArgs) {\n    if (!this._sentWarnings.send) {\n      log.warn(messages.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n    if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest({\n            method: methodOrPayload,\n            params: callbackOrArgs\n          }, getRpcPromiseCallback(resolve, reject, false));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n    if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n      return this._rpcRequest(methodOrPayload, callbackOrArgs);\n    }\n    return this._sendSync(methodOrPayload);\n  }\n  /**\n   * DEPRECATED.\n   * Internal backwards compatibility method, used in send.\n   */\n\n  _sendSync(payload) {\n    let result;\n    switch (payload.method) {\n      case \"eth_accounts\":\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n      case \"eth_coinbase\":\n        result = this.selectedAddress || null;\n        break;\n      case \"eth_uninstallFilter\":\n        this._rpcRequest(payload, NOOP);\n        result = true;\n        break;\n      case \"net_version\":\n        result = this.networkVersion || null;\n        break;\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result\n    };\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits MetaMaskInpageProvider#connect\n   */\n\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits MetaMaskInpageProvider#disconnect\n   */\n\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013,\n        // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011,\n        // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits MetamaskInpageProvider#disconnect\n   */\n\n  _handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n  /**\n   * Called when accounts may have changed.\n   */\n\n  _handleAccountsChanged(accounts) {\n    let isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    } // emit accountsChanged if anything about the accounts array has changed\n\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n      this._state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    } // handle selectedAddress\n\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits MetamaskInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n\n  _handleChainChanged() {\n    let {\n      chainId,\n      networkVersion\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!chainId || !networkVersion) {\n      log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", {\n        chainId,\n        networkVersion\n      });\n      return;\n    }\n    if (networkVersion === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n\n  _handleUnlockStateChanged() {\n    let {\n      accounts,\n      isUnlocked\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   */\n\n  _warnOfDeprecation(eventName) {\n    if (this._sentWarnings.events[eventName] === false) {\n      log.warn(messages.warnings.events[eventName]);\n      this._sentWarnings.events[eventName] = true;\n    }\n  }\n}\n_defineProperty(TorusInpageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\nconst defaults = options => ({\n  algorithms: options.algorithms || [\"sha256\"],\n  delimiter: options.delimiter || \" \",\n  full: options.full || false\n}); // Generate list of hashes\n\nconst hashes = (options, data) => {\n  const internalHashes = {};\n  options.algorithms.forEach(algorithm => {\n    internalHashes[algorithm] = createHash(algorithm).update(data, \"utf8\").digest(\"base64\");\n  });\n  return internalHashes;\n}; // Build an integrity string\n\nconst integrity = (options, sri) => {\n  let output = \"\"; // Hash list\n\n  output += Object.keys(sri.hashes).map(algorithm => \"\".concat(algorithm, \"-\").concat(sri.hashes[algorithm])).join(options.delimiter);\n  return output;\n};\nconst main = (options, data) => {\n  // Defaults\n  const finalOptions = defaults(options);\n  const sri = {\n    hashes: hashes(finalOptions, data),\n    integrity: undefined\n  };\n  sri.integrity = integrity(finalOptions, sri);\n  return finalOptions.full ? sri : sri.integrity;\n};\nclass PopupHandler extends EventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features\n    } = _ref;\n    super();\n    _defineProperty(this, \"url\", void 0);\n    _defineProperty(this, \"target\", void 0);\n    _defineProperty(this, \"features\", void 0);\n    _defineProperty(this, \"window\", void 0);\n    _defineProperty(this, \"windowTimer\", void 0);\n    _defineProperty(this, \"iClosedWindow\", void 0);\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this._setupTimer();\n  }\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n        if (!this.iClosedWindow) {\n          this.emit(\"close\");\n        }\n        this.iClosedWindow = false;\n        this.window = undefined;\n      }\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n  open() {\n    var _this$window;\n    this.window = window.open(this.url.href, this.target, this.features);\n    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n    return Promise.resolve();\n  }\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\n\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\n\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\n\nasync function getSiteIcon(window) {\n  const {\n    document\n  } = window; // Use the site's favicon if it exists\n\n  let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  } // Search through available icons in no particular order\n\n  icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n  return null;\n}\n/**\n * Gets site metadata and returns it\n *\n */\n\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window)\n});\n/**\n * Sends site metadata over an RPC request.\n */\n\nasync function sendSiteMetadata(engine) {\n  try {\n    const domainMetadata = await getSiteMetadata(); // call engine.handle directly to avoid normal RPC request handling\n\n    engine.handle({\n      jsonrpc: \"2.0\",\n      id: getPreopenInstanceId(),\n      method: \"wallet_sendDomainMetadata\",\n      params: domainMetadata\n    }, NOOP);\n  } catch (error) {\n    log.error({\n      message: messages.errors.sendSiteMetadata(),\n      originalError: error\n    });\n  }\n}\nconst _excluded = [\"host\", \"chainId\", \"networkName\"];\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nconst defaultVerifiers = {\n  [LOGIN_PROVIDER.GOOGLE]: true,\n  [LOGIN_PROVIDER.FACEBOOK]: true,\n  [LOGIN_PROVIDER.REDDIT]: true,\n  [LOGIN_PROVIDER.TWITCH]: true,\n  [LOGIN_PROVIDER.DISCORD]: true\n};\nconst iframeIntegrity = \"sha384-RhqFseQpufEgNnJYPxNXx+EmyE55iWEWJwkgS7QX/pit6STKFZRf9K9kwmfpDIPw\";\nconst expectedCacheControlHeader = \"max-age=3600\";\nconst UNSAFE_METHODS = [\"eth_sendTransaction\", \"eth_signTypedData\", \"eth_signTypedData_v3\", \"eth_signTypedData_v4\", \"personal_sign\", \"eth_getEncryptionPublicKey\", \"eth_decrypt\"]; // preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const {\n      torusUrl\n    } = await getTorusUrl(\"production\", {\n      check: false,\n      hash: iframeIntegrity,\n      version: \"\"\n    });\n    torusIframeHtml.href = \"\".concat(torusUrl, \"/popup\");\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\nclass Torus {\n  constructor() {\n    let {\n      buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n      buttonSize = 56,\n      modalZIndex = 99999,\n      apiKey = \"torus-default\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _defineProperty(this, \"buttonPosition\", BUTTON_POSITION.BOTTOM_LEFT);\n    _defineProperty(this, \"buttonSize\", void 0);\n    _defineProperty(this, \"torusUrl\", void 0);\n    _defineProperty(this, \"torusIframe\", void 0);\n    _defineProperty(this, \"styleLink\", void 0);\n    _defineProperty(this, \"isLoggedIn\", void 0);\n    _defineProperty(this, \"isInitialized\", void 0);\n    _defineProperty(this, \"torusWidgetVisibility\", void 0);\n    _defineProperty(this, \"torusAlert\", void 0);\n    _defineProperty(this, \"nodeDetailManager\", void 0);\n    _defineProperty(this, \"torusJs\", void 0);\n    _defineProperty(this, \"apiKey\", void 0);\n    _defineProperty(this, \"modalZIndex\", void 0);\n    _defineProperty(this, \"alertZIndex\", void 0);\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n    _defineProperty(this, \"isIframeFullScreen\", void 0);\n    _defineProperty(this, \"whiteLabel\", void 0);\n    _defineProperty(this, \"requestedVerifier\", void 0);\n    _defineProperty(this, \"currentVerifier\", void 0);\n    _defineProperty(this, \"embedTranslations\", void 0);\n    _defineProperty(this, \"ethereum\", void 0);\n    _defineProperty(this, \"provider\", void 0);\n    _defineProperty(this, \"communicationMux\", void 0);\n    _defineProperty(this, \"isLoginCallback\", void 0);\n    _defineProperty(this, \"paymentProviders\", configuration.paymentProviders);\n    _defineProperty(this, \"loginHint\", \"\");\n    _defineProperty(this, \"useWalletConnect\", void 0);\n    _defineProperty(this, \"isCustomLogin\", false);\n    this.buttonPosition = buttonPosition;\n    this.buttonSize = buttonSize;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n\n    this.isInitialized = false; // init done\n\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    this.nodeDetailManager = new NodeDetailManager();\n    this.torusJs = new TorusJs({\n      metadataHost: \"https://metadata.tor.us\",\n      allowHost: \"https://signer.tor.us/api/allow\",\n      network: \"mainnet\"\n    });\n    this.apiKey = apiKey;\n    TorusJs.setAPIKey(apiKey);\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n  }\n  async init() {\n    let {\n      buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n      enableLogging = false,\n      // deprecated: use loginConfig instead\n      enabledVerifiers = defaultVerifiers,\n      network = {\n        host: \"mainnet\",\n        chainId: null,\n        networkName: \"\",\n        blockExplorer: \"\",\n        ticker: \"\",\n        tickerName: \"\"\n      },\n      loginConfig = {},\n      showTorusButton = true,\n      integrity = {\n        check: false,\n        hash: iframeIntegrity,\n        version: \"\"\n      },\n      whiteLabel,\n      skipTKey = false,\n      useWalletConnect = false,\n      mfaLevel = \"default\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    const {\n      torusUrl,\n      logLevel\n    } = await getTorusUrl(buildEnv, integrity);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    this.whiteLabel = whiteLabel;\n    this.useWalletConnect = useWalletConnect;\n    this.isCustomLogin = !!(loginConfig && Object.keys(loginConfig).length > 0) || !!(whiteLabel && Object.keys(whiteLabel).length > 0);\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();else log.disableAll();\n    this.torusWidgetVisibility = showTorusButton;\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";else torusIframeUrl.pathname += \"/popup\";\n    torusIframeUrl.hash = \"#isCustomLogin=\".concat(this.isCustomLogin); // Iframe code\n\n    this.torusIframe = htmlToElement(\"<iframe\\n        id=\\\"torusIframe\\\"\\n        allow=\".concat(useWalletConnect ? \"camera\" : \"\", \"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\").concat(torusIframeUrl.href, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex, \"\\\"\\n      ></iframe>\"));\n    this.torusAlertContainer = htmlToElement('<div id=\"torusAlertContainer\"></div>');\n    this.torusAlertContainer.style.display = \"none\";\n    this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n    const link = window.document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    link.setAttribute(\"type\", \"text/css\");\n    link.setAttribute(\"href\", \"\".concat(torusUrl, \"/css/widget.css\"));\n    this.styleLink = link;\n    const {\n      defaultLanguage = getUserLanguage(),\n      customTranslations = {}\n    } = this.whiteLabel || {};\n    const mergedTranslations = deepmerge(configuration.translations, customTranslations);\n    const languageTranslations = mergedTranslations[defaultLanguage] || configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n    const handleSetup = async () => {\n      await documentReady();\n      return new Promise((resolve, reject) => {\n        this.torusIframe.onload = async () => {\n          // only do this if iframe is not full screen\n          this._setupWeb3();\n          const initStream = this.communicationMux.getStream(\"init_stream\");\n          initStream.on(\"data\", chunk => {\n            const {\n              name,\n              data,\n              error\n            } = chunk;\n            if (name === \"init_complete\" && data.success) {\n              // resolve promise\n              this.isInitialized = true;\n              this._displayIframe(this.isIframeFullScreen);\n              resolve(undefined);\n            } else if (error) {\n              reject(new Error(error));\n            }\n          });\n          initStream.write({\n            name: \"init_stream\",\n            data: {\n              enabledVerifiers,\n              loginConfig,\n              whiteLabel: this.whiteLabel,\n              buttonPosition: this.buttonPosition,\n              buttonSize: this.buttonSize,\n              torusWidgetVisibility: this.torusWidgetVisibility,\n              apiKey: this.apiKey,\n              skipTKey,\n              network,\n              mfaLevel\n            }\n          });\n        };\n        window.document.head.appendChild(this.styleLink);\n        window.document.body.appendChild(this.torusIframe);\n        window.document.body.appendChild(this.torusAlertContainer);\n      });\n    };\n    if (buildEnv === \"production\" && integrity.check) {\n      // hacky solution to check for iframe integrity\n      const fetchUrl = \"\".concat(torusUrl, \"/popup\");\n      const resp = await fetch(fetchUrl, {\n        cache: \"reload\"\n      });\n      if (resp.headers.get(\"Cache-Control\") !== expectedCacheControlHeader) {\n        throw new Error(\"Unexpected Cache-Control headers, got \".concat(resp.headers.get(\"Cache-Control\")));\n      }\n      const response = await resp.text();\n      const calculatedIntegrity = main({\n        algorithms: [\"sha384\"]\n      }, response);\n      log.info(calculatedIntegrity, \"integrity\");\n      if (calculatedIntegrity === integrity.hash) {\n        await handleSetup();\n      } else {\n        this.clearInit();\n        throw new Error(\"Integrity check failed\");\n      }\n    } else {\n      await handleSetup();\n    }\n    return undefined;\n  }\n  login() {\n    let {\n      verifier = \"\",\n      login_hint: loginHint = \"\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    this.requestedVerifier = verifier;\n    this.loginHint = loginHint;\n    return this.ethereum.enable();\n  }\n  logout() {\n    return new Promise((resolve, reject) => {\n      if (!this.isLoggedIn) {\n        reject(new Error(\"User has not logged in yet\"));\n        return;\n      }\n      const logOutStream = this.communicationMux.getStream(\"logout\");\n      logOutStream.write({\n        name: \"logOut\"\n      });\n      const statusStream = this.communicationMux.getStream(\"status\");\n      const statusStreamHandler = status => {\n        if (!status.loggedIn) {\n          this.isLoggedIn = false;\n          this.currentVerifier = \"\";\n          this.requestedVerifier = \"\";\n          resolve();\n        } else reject(new Error(\"Some Error Occured\"));\n      };\n      handleStream(statusStream, \"data\", statusStreamHandler);\n    });\n  }\n  async cleanUp() {\n    if (this.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof HTMLDocument;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n  hideTorusButton() {\n    this.torusWidgetVisibility = false;\n    this._sendWidgetVisibilityStatus(false);\n    this._displayIframe();\n  }\n  showTorusButton() {\n    this.torusWidgetVisibility = true;\n    this._sendWidgetVisibilityStatus(true);\n    this._displayIframe();\n  }\n  setProvider(_ref) {\n    let {\n        host = \"mainnet\",\n        chainId = null,\n        networkName = \"\"\n      } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n    return new Promise((resolve, reject) => {\n      const providerChangeStream = this.communicationMux.getStream(\"provider_change\");\n      const handler = chunk => {\n        const {\n          err,\n          success\n        } = chunk.data;\n        log.info(chunk);\n        if (err) {\n          reject(err);\n        } else if (success) {\n          resolve();\n        } else reject(new Error(\"some error occured\"));\n      };\n      handleStream(providerChangeStream, \"data\", handler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId, {\n        target: \"_blank\",\n        features: FEATURES_PROVIDER_CHANGE_WINDOW\n      });\n      providerChangeStream.write({\n        name: \"show_provider_change\",\n        data: {\n          network: _objectSpread({\n            host,\n            chainId,\n            networkName\n          }, rest),\n          preopenInstanceId,\n          override: false\n        }\n      });\n    });\n  }\n  showWallet(path) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const showWalletStream = this.communicationMux.getStream(\"show_wallet\");\n    const finalPath = path ? \"/\".concat(path) : \"\";\n    showWalletStream.write({\n      name: \"show_wallet\",\n      data: {\n        path: finalPath\n      }\n    });\n    const showWalletHandler = chunk => {\n      if (chunk.name === \"show_wallet_instance\") {\n        // Let the error propogate up (hence, no try catch)\n        const {\n          instanceId\n        } = chunk.data;\n        const finalUrl = new URL(\"\".concat(this.torusUrl, \"/wallet\").concat(finalPath)); // Using URL constructor to prevent js injection and allow parameter validation.!\n\n        finalUrl.searchParams.append(\"integrity\", \"true\");\n        finalUrl.searchParams.append(\"instanceId\", instanceId);\n        Object.keys(params).forEach(x => {\n          finalUrl.searchParams.append(x, params[x]);\n        });\n        finalUrl.hash = \"#isCustomLogin=\".concat(this.isCustomLogin);\n        const walletWindow = new PopupHandler({\n          url: finalUrl,\n          features: FEATURES_DEFAULT_WALLET_WINDOW\n        });\n        walletWindow.open();\n      }\n    };\n    handleStream(showWalletStream, \"data\", showWalletHandler);\n  }\n  async getPublicAddress(_ref2) {\n    let {\n      verifier,\n      verifierId,\n      isExtended = false\n    } = _ref2;\n    if (!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier]) throw new Error(\"Unsupported verifier\");\n    const nodeDetails = await this.nodeDetailManager.getNodeDetails({\n      verifier,\n      verifierId\n    });\n    const endpoints = nodeDetails.torusNodeEndpoints;\n    const torusNodePubs = nodeDetails.torusNodePub;\n    const walletVerifier = verifier;\n    const openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n    try {\n      const existingV1User = await this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n        verifier: walletVerifier,\n        verifierId\n      });\n      if (existingV1User.typeOfUser === \"v1\") {\n        if (!isExtended) return existingV1User.address;\n        return existingV1User;\n      } // we don't support v2 users with v1 verifiers so get or assign the key for v2 user on v2 `verifier`\n\n      const v2User = await this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n        verifier: openloginVerifier,\n        verifierId\n      }, true);\n      if (!isExtended) return v2User.address;\n      return v2User;\n    } catch (error) {\n      if (error !== null && error !== void 0 && error.message.includes(\"Verifier + VerifierID has not yet been assigned\")) {\n        // if user doesn't have key then assign it with v2 verifier\n        const newV2User = await this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n          verifier: openloginVerifier,\n          verifierId\n        }, true);\n        if (!isExtended) return newV2User.address;\n        return newV2User;\n      }\n      throw error;\n    }\n  }\n  getUserInfo(message) {\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const userInfoAccessStream = this.communicationMux.getStream(\"user_info_access\");\n        userInfoAccessStream.write({\n          name: \"user_info_access_request\"\n        });\n        const userInfoAccessHandler = chunk => {\n          const {\n            name,\n            data: {\n              approved,\n              payload,\n              rejected,\n              newRequest\n            }\n          } = chunk;\n          if (name === \"user_info_access_response\") {\n            if (approved) {\n              resolve(payload);\n            } else if (rejected) {\n              reject(new Error(\"User rejected the request\"));\n            } else if (newRequest) {\n              const userInfoStream = this.communicationMux.getStream(\"user_info\");\n              const userInfoHandler = handlerChunk => {\n                if (handlerChunk.name === \"user_info_response\") {\n                  if (handlerChunk.data.approved) {\n                    resolve(handlerChunk.data.payload);\n                  } else {\n                    reject(new Error(\"User rejected the request\"));\n                  }\n                }\n              };\n              handleStream(userInfoStream, \"data\", userInfoHandler);\n              const preopenInstanceId = getPreopenInstanceId();\n              this._handleWindow(preopenInstanceId, {\n                target: \"_blank\",\n                features: FEATURES_PROVIDER_CHANGE_WINDOW\n              });\n              userInfoStream.write({\n                name: \"user_info_request\",\n                data: {\n                  message,\n                  preopenInstanceId\n                }\n              });\n            }\n          }\n        };\n        handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n  initiateTopup(provider, params) {\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        const {\n          errors,\n          isValid\n        } = validatePaymentProvider(provider, params);\n        if (!isValid) {\n          reject(new Error(JSON.stringify(errors)));\n          return;\n        }\n        const topupStream = this.communicationMux.getStream(\"topup\");\n        const topupHandler = chunk => {\n          if (chunk.name === \"topup_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(topupStream, \"data\", topupHandler);\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId);\n        topupStream.write({\n          name: \"topup_request\",\n          data: {\n            provider,\n            params,\n            preopenInstanceId\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n  async loginWithPrivateKey(loginParams) {\n    const {\n      privateKey,\n      userInfo\n    } = loginParams;\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        if (Buffer.from(privateKey, \"hex\").length !== 32) {\n          reject(new Error(\"Invalid private key, Please provide a 32 byte valid secp25k1 private key\"));\n          return;\n        }\n        const loginPrivKeyStream = this.communicationMux.getStream(\"login_with_private_key\");\n        const loginHandler = chunk => {\n          if (chunk.name === \"login_with_private_key_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(loginPrivKeyStream, \"data\", loginHandler);\n        loginPrivKeyStream.write({\n          name: \"login_with_private_key_request\",\n          data: {\n            privateKey,\n            userInfo\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n  async showWalletConnectScanner() {\n    if (!this.useWalletConnect) throw new Error(\"Set `useWalletConnect` as true in init function options to use wallet connect scanner\");\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const walletConnectStream = this.communicationMux.getStream(\"wallet_connect_stream\");\n        const walletConnectHandler = chunk => {\n          if (chunk.name === \"wallet_connect_stream_res\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n            this._displayIframe();\n          }\n        };\n        handleStream(walletConnectStream, \"data\", walletConnectHandler);\n        walletConnectStream.write({\n          name: \"wallet_connect_stream_req\"\n        });\n        this._displayIframe(true);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n  _handleWindow(preopenInstanceId) {\n    let {\n      url,\n      target,\n      features\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (preopenInstanceId) {\n      const windowStream = this.communicationMux.getStream(\"window\");\n      const finalUrl = new URL(url || \"\".concat(this.torusUrl, \"/redirect?preopenInstanceId=\").concat(preopenInstanceId));\n      if (finalUrl.hash) finalUrl.hash += \"&isCustomLogin=\".concat(this.isCustomLogin);else finalUrl.hash = \"#isCustomLogin=\".concat(this.isCustomLogin);\n      const handledWindow = new PopupHandler({\n        url: finalUrl,\n        target,\n        features\n      });\n      handledWindow.open();\n      if (!handledWindow.window) {\n        this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n        return;\n      }\n      windowStream.write({\n        name: \"opened_window\",\n        data: {\n          preopenInstanceId\n        }\n      });\n      const closeHandler = _ref3 => {\n        let {\n          preopenInstanceId: receivedId,\n          close\n        } = _ref3;\n        if (receivedId === preopenInstanceId && close) {\n          handledWindow.close();\n          windowStream.removeListener(\"data\", closeHandler);\n        }\n      };\n      windowStream.on(\"data\", closeHandler);\n      handledWindow.once(\"close\", () => {\n        windowStream.write({\n          data: {\n            preopenInstanceId,\n            closed: true\n          }\n        });\n        windowStream.removeListener(\"data\", closeHandler);\n      });\n    }\n  }\n  _setEmbedWhiteLabel(element) {\n    // Set whitelabel\n    const {\n      theme\n    } = this.whiteLabel || {};\n    if (theme) {\n      const {\n        isDark = false,\n        colors = {}\n      } = theme;\n      if (isDark) element.classList.add(\"torus-dark\");\n      if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n      if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n    }\n  }\n  _getLogoUrl() {\n    var _this$whiteLabel, _this$whiteLabel$them;\n    let logoUrl = \"\".concat(this.torusUrl, \"/images/torus_icon-blue.svg\");\n    if ((_this$whiteLabel = this.whiteLabel) !== null && _this$whiteLabel !== void 0 && (_this$whiteLabel$them = _this$whiteLabel.theme) !== null && _this$whiteLabel$them !== void 0 && _this$whiteLabel$them.isDark) {\n      var _this$whiteLabel2;\n      logoUrl = ((_this$whiteLabel2 = this.whiteLabel) === null || _this$whiteLabel2 === void 0 ? void 0 : _this$whiteLabel2.logoLight) || logoUrl;\n    } else {\n      var _this$whiteLabel3;\n      logoUrl = ((_this$whiteLabel3 = this.whiteLabel) === null || _this$whiteLabel3 === void 0 ? void 0 : _this$whiteLabel3.logoDark) || logoUrl;\n    }\n    return logoUrl;\n  }\n  _sendWidgetVisibilityStatus(status) {\n    const torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\");\n    torusWidgetVisibilityStream.write({\n      data: status\n    });\n  }\n  _displayIframe() {\n    let isFull = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const style = {};\n    const size = this.buttonSize + 14; // 15px padding\n    // set phase\n\n    if (!isFull) {\n      style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"\".concat(size, \"px\");\n      style.width = \"\".concat(size, \"px\");\n      switch (this.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this.isIframeFullScreen = isFull;\n  }\n  _setupWeb3() {\n    log.info(\"setupWeb3 running\"); // setup background connection\n\n    const metamaskStream = new BasePostMessageStream({\n      name: \"embed_metamask\",\n      target: \"iframe_metamask\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    }); // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n    // because the MetamaskInpageProvider also attempts to do so.\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_comm\",\n      target: \"iframe_comm\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    }); // Backward compatibility with Gotchi :)\n    // window.metamaskStream = this.communicationStream\n    // compose the inpage provider\n\n    const inpageProvider = new TorusInpageProvider(metamaskStream); // detect eth_requestAccounts and pipe to enable for now\n\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inpageProvider[m];\n      inpageProvider[m] = function providerFunc(method) {\n        if (method && method === \"eth_requestAccounts\") {\n          return inpageProvider.enable();\n        }\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        return originalMethod.apply(this, [method, ...args]);\n      };\n    };\n    detectAccountRequestPrototypeModifier(\"send\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    inpageProvider.enable = () => {\n      return new Promise((resolve, reject) => {\n        // If user is already logged in, we assume they have given access to the website\n        inpageProvider.sendAsync({\n          jsonrpc: \"2.0\",\n          id: getPreopenInstanceId(),\n          method: \"eth_requestAccounts\",\n          params: []\n        }, (err, response) => {\n          const {\n            result: res\n          } = response || {};\n          if (err) {\n            setTimeout(() => {\n              reject(err);\n            }, 50);\n          } else if (Array.isArray(res) && res.length > 0) {\n            // If user is already rehydrated, resolve this\n            // else wait for something to be written to status stream\n            const handleLoginCb = () => {\n              if (this.requestedVerifier !== \"\" && this.currentVerifier !== this.requestedVerifier) {\n                const {\n                  requestedVerifier\n                } = this; // eslint-disable-next-line promise/no-promise-in-callback\n\n                this.logout() // eslint-disable-next-line promise/always-return\n                .then(_ => {\n                  this.requestedVerifier = requestedVerifier;\n                  this._showLoginPopup(true, resolve, reject);\n                }).catch(error => reject(error));\n              } else {\n                resolve(res);\n              }\n            };\n            if (this.isLoggedIn) {\n              handleLoginCb();\n            } else {\n              this.isLoginCallback = handleLoginCb;\n            }\n          } else {\n            // set up listener for login\n            this._showLoginPopup(true, resolve, reject);\n          }\n        });\n      });\n    };\n    inpageProvider.tryPreopenHandle = (payload, cb) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n        _payload.preopenInstanceId = preopenInstanceId;\n      }\n      inpageProvider._rpcEngine.handle(_payload, cb);\n    }; // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n    // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n\n    const proxiedInpageProvider = new Proxy(inpageProvider, {\n      // straight up lie that we deleted the property so that it doesnt\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.ethereum = proxiedInpageProvider;\n    const communicationMux = setupMultiplex(communicationStream);\n    this.communicationMux = communicationMux;\n    const windowStream = communicationMux.getStream(\"window\");\n    windowStream.on(\"data\", chunk => {\n      if (chunk.name === \"create_window\") {\n        // url is the url we need to open\n        // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n        this._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n      }\n    }); // show torus widget if button clicked\n\n    const widgetStream = communicationMux.getStream(\"widget\");\n    widgetStream.on(\"data\", chunk => {\n      const {\n        data\n      } = chunk;\n      this._displayIframe(data);\n    }); // Show torus button if wallet has been hydrated/detected\n\n    const statusStream = communicationMux.getStream(\"status\");\n    statusStream.on(\"data\", status => {\n      // login\n      if (status.loggedIn) {\n        this.isLoggedIn = status.loggedIn;\n        this.currentVerifier = status.verifier;\n      } // logout\n      else this._displayIframe();\n      if (this.isLoginCallback) {\n        this.isLoginCallback();\n        delete this.isLoginCallback;\n      }\n    });\n    this.provider = proxiedInpageProvider;\n    if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n    inpageProvider._initializeState();\n    log.debug(\"Torus - injected provider\");\n  }\n  _showLoginPopup(calledFromEmbed, resolve, reject) {\n    const loginHandler = data => {\n      const {\n        err,\n        selectedAddress\n      } = data;\n      if (err) {\n        log.error(err);\n        if (reject) reject(err);\n      } // returns an array (cause accounts expects it)\n      else if (resolve) resolve([selectedAddress]);\n      if (this.isIframeFullScreen) this._displayIframe();\n    };\n    const oauthStream = this.communicationMux.getStream(\"oauth\");\n    if (!this.requestedVerifier) {\n      this._displayIframe(true);\n      handleStream(oauthStream, \"data\", loginHandler);\n      oauthStream.write({\n        name: \"oauth_modal\",\n        data: {\n          calledFromEmbed\n        }\n      });\n    } else {\n      handleStream(oauthStream, \"data\", loginHandler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId);\n      oauthStream.write({\n        name: \"oauth\",\n        data: {\n          calledFromEmbed,\n          verifier: this.requestedVerifier,\n          preopenInstanceId,\n          login_hint: this.loginHint\n        }\n      });\n    }\n  }\n  _createPopupBlockAlert(preopenInstanceId, url) {\n    const logoUrl = this._getLogoUrl();\n    const torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + \"<div id=\\\"torusAlert__logo\\\"><img src=\\\"\".concat(logoUrl, \"\\\" /></div>\") + \"<div>\" + \"<h1 id=\\\"torusAlert__title\\\">\".concat(this.embedTranslations.actionRequired, \"</h1>\") + \"<p id=\\\"torusAlert__desc\\\">\".concat(this.embedTranslations.pendingAction, \"</p>\") + \"</div>\" + \"</div>\");\n    const successAlert = htmlToElement(\"<div><a id=\\\"torusAlert__btn\\\">\".concat(this.embedTranslations.continue, \"</a></div>\"));\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(preopenInstanceId, {\n          url,\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n    this._setEmbedWhiteLabel(torusAlert);\n    const attachOnLoad = () => {\n      this.torusAlertContainer.style.display = \"block\";\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n    runOnLoad(attachOnLoad);\n    runOnLoad(bindOnLoad);\n  }\n}\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, SUPPORTED_PAYMENT_NETWORK, TORUS_BUILD_ENV, TorusInpageProvider, WALLET_OPENLOGIN_VERIFIER_MAP, WALLET_VERIFIERS, Torus as default };","map":{"version":3,"sources":["../src/interfaces.ts","../src/supportedCurrencies.ts","../src/config.ts","../src/embedUtils.ts","../src/loglevel.ts","../src/messages.ts","../src/utils.ts","../src/inpage-provider.ts","../src/integrity.ts","../src/PopupHandler.ts","../src/siteMetadata.ts","../src/embed.ts"],"names":["LOGIN_PROVIDER","GOOGLE","FACEBOOK","TWITCH","REDDIT","DISCORD","WALLET_VERIFIERS","EMAIL_PASSWORDLESS","WALLET_OPENLOGIN_VERIFIER_MAP","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","SUPPORTED_PAYMENT_NETWORK","MAINNET","MATIC","BSC_MAINNET","AVALANCHE_MAINNET","XDAI","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","BINANCE","TESTING","LRC","BETA","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","CRYPTO_COMPARE_CURRENCIES","PROVIDER_SUPPORTED_FIAT_CURRENCIES","cryptoCompareCurrenciesSet","Set","supportedFiatCurrencies","provider","providerSupportedFiatCurrencies","filter","currency","has","paymentProviders","line1","line2","line3","supportPage","minOrderValue","maxOrderValue","validCurrencies","validCryptoCurrenciesByChain","value","display","includeFees","api","enforceMax","receiveHint","sell","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","supportedVerifierList","Object","values","prodTorusUrl","localStorageKeyPrefix","runOnLoad","fn","Promise","resolve","reject","window","document","body","then","catch","addEventListener","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","handleEvent","handle","eventName","handler","handlerArgs","handlerWrapper","removeEventListener","handleStream","chunk","removeListener","on","documentReady","readyState","loglevel","getLogger","errors","disconnected","permanentlyDisconnected","sendSiteMetadata","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","shouldSendMetadata","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","enableDeprecation","sendDeprecation","events","close","data","networkChanged","notification","publicConfigStore","config","validatePaymentProvider","params","isValid","keys","length","selectedProvider","selectedParams","fiatValue","requestedOrderAmount","parseFloat","toString","selectedCurrency","includes","selectedCryptoCurrency","flat","map","finalCryptoCurrency","toLowerCase","createErrorMiddleware","req","res","next","error","rpc","invalidRequest","message","done","log","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","getPreopenInstanceId","Math","random","slice","getTorusUrl","buildEnv","integrity","torusUrl","logLevel","version","versionUsed","response","get","useAPIKey","getUserLanguage","userLanguage","navigator","language","userLanguages","split","prototype","hasOwnProperty","call","EMITTED_NOTIFICATIONS","NOOP","FEATURES_PROVIDER_CHANGE_WINDOW","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_CONFIRM_WINDOW","getPopupFeatures","dualScreenLeft","screenLeft","undefined","screenX","dualScreenTop","screenTop","screenY","w","h","width","innerWidth","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","left","abs","top","features","SafeEventEmitter","defaultMaxListeners","getRpcPromiseCallback","unwrapResult","Array","isArray","result","TorusInpageProvider","accounts","isConnected","isUnlocked","initialized","isPermanentlyDisconnected","hasEmittedConnection","enable","experimentalMethods","send","constructor","connectionStream","jsonRpcStreamName","isDuplexStream","Error","messages","isTorus","setMaxListeners","_state","_defaultState","selectedAddress","networkVersion","_handleAccountsChanged","bind","_handleChainChanged","_handleUnlockStateChanged","_handleConnect","_handleDisconnect","_handleStreamDisconnect","_sendSync","_rpcRequest","_warnOfDeprecation","_initializeState","request","sendAsync","mux","ObjectMultiplex","pump","_publicConfigStore","ObservableStore","storageKey","createStream","storeAsStream","ignoreStream","jsonRpcConnection","createStreamMiddleware","stream","rpcEngine","JRPCEngine","push","createIdRemapMiddleware","middleware","_rpcEngine","payload","type","_sentWarnings","args","callback","addListener","listener","once","prependListener","prependOnceListener","isInternal","cb","_payload","jsonrpc","err","tryPreopenHandle","methodOrPayload","callbackOrArgs","id","debug","isRecoverable","errorMessage","EthereumRpcError","streamName","isEthAccounts","finalAccounts","account","dequal","defaults","options","algorithms","delimiter","full","hashes","internalHashes","forEach","algorithm","createHash","update","digest","sri","output","join","main","finalOptions","PopupHandler","EventEmitter","url","target","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","open","href","focus","redirect","locationReplaceOnRedirect","location","replace","imgExists","img","onload","onerror","src","e","getSiteName","siteName","querySelector","metaTitle","title","hostname","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","name","engine","domainMetadata","originalError","defaultVerifiers","iframeIntegrity","expectedCacheControlHeader","UNSAFE_METHODS","preLoadIframe","torusIframeHtml","check","hash","crossOrigin","rel","relList","supports","head","appendChild","Torus","configuration","buttonPosition","buttonSize","modalZIndex","apiKey","isLoggedIn","isInitialized","torusWidgetVisibility","requestedVerifier","currentVerifier","nodeDetailManager","NodeDetailManager","torusJs","TorusJs","metadataHost","allowHost","network","setAPIKey","alertZIndex","isIframeFullScreen","init","enableLogging","enabledVerifiers","host","networkName","blockExplorer","ticker","tickerName","loginConfig","showTorusButton","whiteLabel","skipTKey","useWalletConnect","mfaLevel","isCustomLogin","setDefaultLevel","enableAll","disableAll","torusIframeUrl","URL","pathname","endsWith","torusIframe","torusAlertContainer","style","setProperty","link","setAttribute","styleLink","defaultLanguage","customTranslations","mergedTranslations","deepmerge","languageTranslations","embedTranslations","handleSetup","_setupWeb3","initStream","communicationMux","getStream","success","_displayIframe","write","fetchUrl","resp","fetch","cache","headers","text","calculatedIntegrity","generateIntegrity","clearInit","login","verifier","login_hint","loginHint","ethereum","logout","logOutStream","statusStream","statusStreamHandler","status","loggedIn","cleanUp","isElement","element","Element","HTMLDocument","contains","remove","torusAlert","hideTorusButton","_sendWidgetVisibilityStatus","setProvider","rest","providerChangeStream","preopenInstanceId","_handleWindow","override","showWallet","path","showWalletStream","finalPath","showWalletHandler","instanceId","finalUrl","searchParams","append","x","walletWindow","getPublicAddress","verifierId","isExtended","nodeDetails","getNodeDetails","endpoints","torusNodeEndpoints","torusNodePubs","torusNodePub","walletVerifier","openloginVerifier","existingV1User","getUserTypeAndAddress","typeOfUser","address","v2User","newV2User","getUserInfo","userInfoAccessStream","userInfoAccessHandler","approved","rejected","newRequest","userInfoStream","userInfoHandler","handlerChunk","initiateTopup","JSON","stringify","topupStream","topupHandler","loginWithPrivateKey","loginParams","privateKey","userInfo","Buffer","loginPrivKeyStream","loginHandler","showWalletConnectScanner","walletConnectStream","walletConnectHandler","windowStream","handledWindow","_createPopupBlockAlert","closeHandler","receivedId","_setEmbedWhiteLabel","theme","isDark","colors","classList","add","torusBrand1","torusGray2","_getLogoUrl","logoUrl","logoLight","logoDark","torusWidgetVisibilityStream","isFull","size","right","bottom","assign","metamaskStream","BasePostMessageStream","targetWindow","contentWindow","targetOrigin","origin","communicationStream","inpageProvider","detectAccountRequestPrototypeModifier","m","originalMethod","providerFunc","apply","setTimeout","handleLoginCb","_","_showLoginPopup","isLoginCallback","proxiedInpageProvider","Proxy","deleteProperty","setupMultiplex","widgetStream","calledFromEmbed","oauthStream","successAlert","btnContainer","bindOnLoad","children","attachOnLoad"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport NodeDetailManager from '@toruslabs/fetch-node-details';\nimport { get, setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, BasePostMessageStream, setupMultiplex } from '@toruslabs/openlogin-jrpc';\nimport TorusJs from '@toruslabs/torus.js';\nimport deepmerge from 'lodash.merge';\nimport { ObservableStore, storeAsStream } from '@metamask/obs-store';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport dequal from 'fast-deep-equal';\nimport { duplex } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport createHash from 'create-hash';\nimport { EventEmitter } from 'events';\n\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\"\n};\nconst WALLET_VERIFIERS = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  EMAIL_PASSWORDLESS: \"torus-auth0-email-passwordless\"\n};\nconst WALLET_OPENLOGIN_VERIFIER_MAP = {\n  [WALLET_VERIFIERS.GOOGLE]: \"tkey-google\",\n  [WALLET_VERIFIERS.FACEBOOK]: \"tkey-facebook\",\n  [WALLET_VERIFIERS.TWITCH]: \"tkey-twitch\",\n  [WALLET_VERIFIERS.REDDIT]: \"tkey-reddit\",\n  [WALLET_VERIFIERS.DISCORD]: \"tkey-discord\",\n  [WALLET_VERIFIERS.EMAIL_PASSWORDLESS]: \"tkey-auth0-email-passwordless\"\n};\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\nconst SUPPORTED_PAYMENT_NETWORK = {\n  MAINNET: \"mainnet\",\n  MATIC: \"matic\",\n  BSC_MAINNET: \"bsc_mainnet\",\n  AVALANCHE_MAINNET: \"avalanche_mainnet\",\n  XDAI: \"xdai\"\n};\nconst TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\n\n/**\n * From https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC&extraParams=YourSite\n * GET https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC\n * Then map over returned entries, picking tsym\n *\n * Last updated: Date of commit\n */\n\nconst CRYPTO_COMPARE_CURRENCIES = [\"ETH\", \"USDT\", \"USDC\", \"TUSD\", \"EOSDT\", \"USD\", \"DAI\", \"GUSD\", \"DKKT\", \"PAX\", \"ILS\", \"RUB\", \"BYN\", \"EUR\", \"GBP\", \"JPY\", \"KRW\", \"PLN\", \"MXN\", \"AUD\", \"BRL\", \"CAD\", \"CHF\", \"KPW\", \"LAK\", \"LBP\", \"LKR\", \"XOF\", \"CNHT\", \"DOGE\", \"UAH\", \"TRY\", \"HKD\", \"XJP\", \"SGD\", \"USC\", \"NZD\", \"NGN\", \"RUR\", \"COP\", \"GHS\", \"EGP\", \"IDR\", \"BHD\", \"CRC\", \"PEN\", \"AED\", \"DOP\", \"PKR\", \"HUF\", \"VND\", \"XAR\", \"LTC\", \"RON\", \"OMR\", \"MYR\", \"DKK\", \"UGX\", \"ZMW\", \"SAR\", \"SEK\", \"GEL\", \"RWF\", \"IRR\", \"TZS\", \"CNY\", \"VEF\", \"BDT\", \"HRK\", \"CLP\", \"THB\", \"XAF\", \"ARS\", \"UYU\", \"SZL\", \"KZT\", \"NOK\", \"KES\", \"PAB\", \"INR\", \"CZK\", \"MAD\", \"TWD\", \"PHP\", \"ZAR\", \"BOB\", \"CDF\", \"DASH\", \"VES\", \"ISK\", \"MWK\", \"BAM\", \"TTD\", \"XRP\", \"JOD\", \"RSD\", \"HNL\", \"BGN\", \"GTQ\", \"BWP\", \"XMR\", \"MMK\", \"QAR\", \"AOA\", \"KWD\", \"MUR\", \"WUSD\", \"WEUR\", \"WAVES\", \"WTRY\", \"LRD\", \"LSL\", \"LYD\", \"AWG\", \"MDL\", \"BTO\", \"EURS\", \"CHFT\", \"MKD\", \"MNT\", \"MOP\", \"MRO\", \"MVR\", \"VOLLAR\", \"CKUSD\", \"KHR\", \"VUV\", \"BITCNY\", \"QC\", \"BBD\", \"NAD\", \"NPR\", \"PGK\", \"PYG\", \"BIF\", \"BMD\", \"BND\", \"XLM\", \"BNB\", \"SCR\", \"BAT\", \"CRO\", \"HT\", \"KCS\", \"LEO\", \"LINK\", \"MKR\", \"NPXS\", \"OMG\", \"REP\", \"ZB\", \"ZIL\", \"ZRX\", \"BCH\", \"BZD\", \"CUP\", \"CVE\", \"DJF\", \"DZD\", \"ERN\", \"ETB\", \"FJD\", \"FKP\", \"BUSD\", \"ANCT\", \"ALL\", \"AMD\", \"ANG\", \"CNYX\", \"IQD\", \"UZS\", \"TND\", \"GGP\", \"XAU\", \"KGS\", \"GIP\", \"JMD\", \"ZEC\", \"USDP\", \"BSV\", \"EMC2\", \"SNT\", \"GTO\", \"POWR\", \"EUSD\", \"EURT\", \"BCY\", \"BTS\", \"ATM\", \"BLOCKPAY\", \"ARDR\", \"AMP\", \"B2X\", \"BITGOLD\", \"BITEUR\", \"ATB\", \"BITUSD\", \"AGRS\", \"DFXT\", \"HIKEN\", \"BIX\", \"KNC\", \"EOS\", \"COB\", \"COSS\", \"BMH\", \"NANO\", \"BDG\", \"BNT\", \"XVG\", \"LKK1Y\", \"LKK\", \"USDK\", \"EURN\", \"NZDT\", \"JSE\", \"GMD\", \"GNF\", \"GYD\", \"YER\", \"XPF\", \"HTG\", \"SLL\", \"SOS\", \"WST\", \"SVC\", \"SYP\", \"NEO\", \"KMF\", \"JUMP\", \"AYA\", \"BLAST\", \"WGR\", \"BCN\", \"BTG\", \"URALS\", \"INN\", \"USDQ\", \"CNH\", \"HUSD\", \"BKRW\", \"NZDX\", \"EURX\", \"CADX\", \"USDEX\", \"JPYX\", \"AUDX\", \"VNDC\", \"EON\", \"GBPX\", \"CHFX\", \"USDJ\", \"IDRT\", \"USDS\", \"USDN\", \"BIDR\", \"IDK\", \"BSD\", \"BTN\", \"KYD\", \"NIO\", \"SBD\", \"SDG\", \"SHP\", \"TOP\", \"XCD\", \"XCHF\", \"CNYT\", \"GYEN\", \"ZUSD\", \"GOLD\", \"TRX\", \"TRYB\", \"PLATC\", \"STRAX\", \"UST\", \"GLM\", \"VAI\", \"BRZ\", \"DDRST\", \"XAUT\", \"MIM\"];\n/**\n * currencies supported by the payment provider\n * Last updated: Date of commit\n */\n\nconst PROVIDER_SUPPORTED_FIAT_CURRENCIES = {\n  // https://integrations.simplex.com/supported_currencies\n  // https://support.moonpay.com/hc/en-gb/articles/360011931457-Which-fiat-currencies-are-supported-\n  [PAYMENT_PROVIDER.MOONPAY]: [\"AUD\", \"BGN\", \"BRL\", \"CAD\", \"CHF\", \"CNY\", \"COP\", \"CZK\", \"DKK\", \"DOP\", \"EGP\", \"EUR\", \"GBP\", \"HKD\", \"HRK\", \"IDR\", \"ILS\", \"JPY\", \"JOD\", \"KES\", \"KRW\", \"KWD\", \"LKR\", \"MAD\", \"MXN\", \"MYR\", \"NGN\", \"NOK\", \"NZD\", \"OMR\", \"PEN\", \"PKR\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"TWD\", \"USD\", \"VND\", \"ZAR\"],\n\n  /**\n   * https://docs.sendwyre.com/docs/supported-currencies#fiat\n   * The ones where credit card is supported\n   */\n  [PAYMENT_PROVIDER.WYRE]: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"NZD\", \"ARS\", \"BRL\", \"CHF\", \"CLP\", \"COP\", \"CZK\", \"DKK\", \"HKD\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"PHP\", \"PLN\", \"SEK\", \"THB\", \"VND\", \"ZAR\"],\n  // https://support.ramp.network/en/articles/471-why-am-i-paying-in-usd-eur-gbp\n  [PAYMENT_PROVIDER.RAMPNETWORK]: [\"USD\", \"EUR\", \"GBP\"],\n  // From https://xanpool.com/ fiat select dropdown\n  [PAYMENT_PROVIDER.XANPOOL]: [\"SGD\", \"HKD\", \"THB\", \"PHP\", \"INR\", \"IDR\", \"MYR\", \"AUD\", \"NZD\", \"KRW\"],\n  // https://support.aax.com/en/articles/5295762-mercuryo\n  // RUB / UAH currently not supported\n  [PAYMENT_PROVIDER.MERCURYO]: [\"EUR\", \"USD\", \"GBP\", \"TRY\", \"JPY\", \"BRL\", \"NGN\", \"VND\", \"MXN\", \"KRW\"],\n\n  /**\n   * https://support.transak.com/hc/en-us/articles/360020615578-Credit-and-Debit-Card-Payments-through-Transak\n   * or\n   * https://transak.stoplight.io/docs/transak-docs/b3A6OTk1ODQ0-2-get-fiat-currencies\n   */\n  [PAYMENT_PROVIDER.TRANSAK]: [\"ARS\", \"AUD\", \"BBD\", \"BGN\", \"BMD\", \"BRL\", \"CAD\", \"CHF\", \"CLP\", \"CRC\", \"CZK\", \"DKK\", \"DOP\", \"EUR\", \"FJD\", \"FKP\", \"GBP\", \"GIP\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"ISK\", \"JMD\", \"JPY\", \"KES\", \"KRW\", \"MDL\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PEN\", \"PHP\", \"PLN\", \"PYG\", \"RON\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"TZS\", \"USD\", \"ZAR\"]\n};\nconst cryptoCompareCurrenciesSet = new Set(CRYPTO_COMPARE_CURRENCIES);\n/**\n * Fiat currencies that we support\n */\n\nfunction supportedFiatCurrencies(provider) {\n  const providerSupportedFiatCurrencies = PROVIDER_SUPPORTED_FIAT_CURRENCIES[provider];\n  return providerSupportedFiatCurrencies.filter(currency => cryptoCompareCurrenciesSet.has(currency));\n}\n\nconst paymentProviders$1 = {\n  [PAYMENT_PROVIDER.MOONPAY]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"4.5% or 5 USD\",\n    line3: \"2,000€/day, 10,000€/mo\",\n    supportPage: \"https://help.moonpay.io/en/\",\n    minOrderValue: 24.99,\n    maxOrderValue: 50000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MOONPAY),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"aave\",\n        display: \"AAVE\"\n      }, {\n        value: \"bat\",\n        display: \"BAT\"\n      }, {\n        value: \"dai\",\n        display: \"DAI\"\n      }, {\n        value: \"eth\",\n        display: \"ETH\"\n      }, {\n        value: \"mkr\",\n        display: \"MKR\"\n      }, {\n        value: \"matic\",\n        display: \"MATIC\"\n      }, {\n        value: \"usdt\",\n        display: \"USDT\"\n      }, {\n        value: \"usdc\",\n        display: \"USDC\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"eth_polygon\",\n        display: \"ETH\"\n      }, {\n        value: \"matic_polygon\",\n        display: \"MATIC\"\n      }, {\n        value: \"usdc_polygon\",\n        display: \"USDC\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"bnb_bsc\",\n        display: \"BNB\"\n      }, {\n        value: \"busd_bsc\",\n        display: \"BUSD\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"avax_cchain\",\n        display: \"AVAX\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.WYRE]: {\n    line1: \"Apple Pay/ Debit/ Credit Card\",\n    line2: \"4.9% + 30¢ or 5 USD\",\n    line3: \"$250/day\",\n    supportPage: \"https://support.sendwyre.com/en/\",\n    minOrderValue: 5,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.WYRE),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"MKR\",\n        display: \"MKR\"\n      }, {\n        value: \"UNI\",\n        display: \"UNI\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"MUSDC\",\n        display: \"USDC\"\n      }],\n      // AVAXC? or AVAX?\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAXC\",\n        display: \"AVAXC\"\n      }]\n    },\n    includeFees: false,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.RAMPNETWORK]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://instant.ramp.network/\",\n    minOrderValue: 50,\n    maxOrderValue: 20000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.RAMPNETWORK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"MATIC_DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"MATIC_MATIC\",\n        display: \"MATIC\"\n      }, {\n        value: \"MATIC_USDC\",\n        display: \"USDC\"\n      }],\n      // what about AVAXC?\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAX\",\n        display: \"AVAX\"\n      }] // Temporary unavailable\n      // [SUPPORTED_PAYMENT_NETWORK.XDAI]: [{ value: 'XDAI_XDAI', display: 'XDAI' }],\n\n    },\n    includeFees: true,\n    api: true,\n    receiveHint: \"walletTopUp.receiveHintRamp\",\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.XANPOOL]: {\n    line1: \"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ <br>ViettelPay/ DuitNow\",\n    line2: \"2.5% buying, 3% selling\",\n    line3: \"$2,500 / day\",\n    supportPage: \"mailto:support@xanpool.com\",\n    minOrderValue: 100,\n    maxOrderValue: 2500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.XANPOOL),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    sell: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.MERCURYO]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"3.95% or 4 USD\",\n    line3: \"10,000€/day, 25,000€/mo\",\n    supportPage: \"mailto:support@mercuryo.io\",\n    minOrderValue: 30,\n    maxOrderValue: 5000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MERCURYO),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"BNB\",\n        display: \"BNB\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }, {\n        value: \"1INCH\",\n        display: \"1INCH\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.TRANSAK]: {\n    line1: \"Apple & Google Pay / Credit/Debit Card<br/>Bangkok Bank Mobile & iPay<br/>Bank Transfer (sepa/gbp) / SCB Mobile & Easy\",\n    line2: \"0.99% - 5.5% or 5 USD\",\n    line3: \"$5,000/day, $28,000/mo\",\n    supportPage: \"https://support.transak.com/hc/en-US\",\n    minOrderValue: 30,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.TRANSAK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"MATIC\",\n        display: \"MATIC\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"WETH\",\n        display: \"WETH\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"BNB\",\n        display: \"BNB\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAX\",\n        display: \"AVAX\"\n      }]\n    },\n    includeFees: true,\n    enforceMax: true\n  }\n};\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: Object.values(WALLET_VERIFIERS),\n  paymentProviders: paymentProviders$1,\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKeyPrefix: \"torus-\"\n};\n\nconst runOnLoad = fn => new Promise((resolve, reject) => {\n  if (window.document.body != null) {\n    Promise.resolve(fn()).then(resolve).catch(reject);\n  } else {\n    window.document.addEventListener(\"DOMContentLoaded\", () => {\n      Promise.resolve(fn()).then(resolve).catch(reject);\n    });\n  }\n});\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\nconst handleEvent = function (handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n\n  handle.addEventListener(eventName, handlerWrapper);\n};\nconst handleStream = (handle, eventName, handler) => {\n  const handlerWrapper = chunk => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n\n  handle.on(eventName, handlerWrapper);\n};\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\n\nvar log = loglevel.getLogger(\"torus-embed\");\n\nvar messages = {\n  errors: {\n    disconnected: () => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: () => \"Torus: Disconnected from iframe. Page reload required.\",\n    sendSiteMetadata: () => \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\",\n    unsupportedSync: method => \"Torus: The Torus Ethereum provider does not support synchronous methods like \".concat(method, \" without a callback parameter.\"),\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners, shouldSendMetadata) => \"Invalid options. Received: { maxEventListeners: \".concat(maxEventListeners, \", shouldSendMetadata: \").concat(shouldSendMetadata, \" }\"),\n    invalidRequestArgs: () => \"Expected a single, non-array, object argument.\",\n    invalidRequestMethod: () => \"'args.method' must be a non-empty string.\",\n    invalidRequestParams: () => \"'args.params' must be an object or array if provided.\",\n    invalidLoggerObject: () => \"'args.logger' must be an object if provided.\",\n    invalidLoggerMethod: method => \"'args.logger' must include required method '\".concat(method, \"'.\")\n  },\n  info: {\n    connected: chainId => \"Torus: Connected to chain with ID \\\"\".concat(chainId, \"\\\".\")\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation: 'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' + 'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation: 'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' + ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    events: {\n      close: 'Torus: The event \"close\" is deprecated and may be removed in the future. Please use \"disconnect\" instead.' + \"\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193\",\n      data: 'Torus: The event \"data\" is deprecated and will be removed in the future.' + 'Use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message',\n      networkChanged: 'Torus: The event \"networkChanged\" is deprecated and may be removed in the future.' + ' Please use \"chainChanged\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n      notification: 'Torus: The event \"notification\" is deprecated and may be removed in the future. ' + 'Please use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193'\n    },\n    publicConfigStore: 'Torus: The property \"publicConfigStore\" is deprecated and WILL be removed in the future.'\n  }\n};\n\nconst {\n  paymentProviders\n} = configuration;\nconst validatePaymentProvider = (provider, params) => {\n  const errors = {};\n\n  if (!provider) {\n    return {\n      errors,\n      isValid: true\n    };\n  }\n\n  if (provider && !paymentProviders[provider]) {\n    errors.provider = \"Invalid Provider\";\n    return {\n      errors,\n      isValid: Object.keys(errors).length === 0\n    };\n  }\n\n  const selectedProvider = paymentProviders[provider];\n  const selectedParams = params || {}; // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n  // validations\n\n  if (selectedParams.fiatValue) {\n    const requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax) errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n\n  if (selectedParams.selectedCryptoCurrency) {\n    const validCryptoCurrenciesByChain = Object.values(selectedProvider.validCryptoCurrenciesByChain).flat().map(currency => currency.value);\n    const finalCryptoCurrency = provider === PAYMENT_PROVIDER.MOONPAY ? selectedParams.selectedCryptoCurrency.toLowerCase() : selectedParams.selectedCryptoCurrency;\n    if (validCryptoCurrenciesByChain && !validCryptoCurrenciesByChain.includes(finalCryptoCurrency)) errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n\n  return {\n    errors,\n    isValid: Object.keys(errors).length === 0\n  };\n}; // utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\n\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: \"The request 'method' must be a non-empty string.\",\n        data: req\n      });\n    }\n\n    next(done => {\n      const {\n        error\n      } = res;\n\n      if (!error) {\n        return done();\n      }\n\n      log.error(\"MetaMask - RPC Error: \".concat(error.message), error);\n      return done();\n    });\n  };\n} // resolve response.result or response, reject errors\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\n\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = \"MetaMask: Lost connection to \\\"\".concat(remoteLabel, \"\\\".\");\n\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += \"\\n\".concat(error.stack);\n  }\n\n  log.warn(warningMsg);\n\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\nconst getPreopenInstanceId = () => Math.random().toString(36).slice(2);\nconst getTorusUrl = async (buildEnv, integrity) => {\n  let torusUrl;\n  let logLevel; // Do not change this line\n\n  const version = \"1.35.8\";\n  let versionUsed = integrity.version || version;\n\n  try {\n    if ((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version) {\n      let response;\n      if (!configuration.prodTorusUrl) response = await get(\"\".concat(configuration.api, \"/latestversion?name=@toruslabs/torus-embed&version=\").concat(version), {}, {\n        useAPIKey: true\n      });else response = {\n        data: configuration.prodTorusUrl\n      };\n      versionUsed = response.data; // eslint-disable-next-line require-atomic-updates\n\n      configuration.prodTorusUrl = response.data;\n    }\n  } catch (error) {\n    log.error(error, \"unable to fetch latest version\");\n  }\n\n  log.info(\"version used: \", versionUsed);\n\n  switch (buildEnv) {\n    case \"binance\":\n      torusUrl = \"https://binance.tor.us/v\".concat(versionUsed);\n      logLevel = \"info\";\n      break;\n\n    case \"testing\":\n      torusUrl = \"https://testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"lrc\":\n      torusUrl = \"https://lrc.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"beta\":\n      torusUrl = \"https://beta.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"development\":\n      torusUrl = \"http://localhost:4050\";\n      logLevel = \"debug\";\n      break;\n\n    default:\n      torusUrl = \"https://app.tor.us/v\".concat(versionUsed);\n      logLevel = \"error\";\n      break;\n  }\n\n  return {\n    torusUrl,\n    logLevel\n  };\n};\nconst getUserLanguage = () => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\nconst EMITTED_NOTIFICATIONS = [\"eth_subscription\" // per eth-json-rpc-filters/subscriptionManager\n];\nconst NOOP = () => {// empty function\n};\nconst FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nconst FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nconst FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nSafeEventEmitter.defaultMaxListeners = 100; // resolve response.result, reject errors\n\nconst getRpcPromiseCallback = function (resolve, reject) {\n  let unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return (error, response) => {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n};\n\nclass TorusInpageProvider extends SafeEventEmitter {\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  constructor(connectionStream) {\n    let {\n      maxEventListeners = 100,\n      shouldSendMetadata = true,\n      jsonRpcStreamName = \"provider\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n\n    _defineProperty(this, \"chainId\", void 0);\n\n    _defineProperty(this, \"selectedAddress\", void 0);\n\n    _defineProperty(this, \"_rpcEngine\", void 0);\n\n    _defineProperty(this, \"networkVersion\", void 0);\n\n    _defineProperty(this, \"shouldSendMetadata\", void 0);\n\n    _defineProperty(this, \"isTorus\", void 0);\n\n    _defineProperty(this, \"_publicConfigStore\", void 0);\n\n    _defineProperty(this, \"tryPreopenHandle\", void 0);\n\n    _defineProperty(this, \"enable\", void 0);\n\n    _defineProperty(this, \"_state\", void 0);\n\n    _defineProperty(this, \"_jsonRpcConnection\", void 0);\n\n    _defineProperty(this, \"_sentWarnings\", {\n      // methods\n      enable: false,\n      experimentalMethods: false,\n      send: false,\n      publicConfigStore: false,\n      // events\n      events: {\n        close: false,\n        data: false,\n        networkChanged: false,\n        notification: false\n      }\n    });\n\n    if (!duplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners); // private state\n\n    this._state = _objectSpread$1({}, TorusInpageProvider._defaultState); // public state\n\n    this.selectedAddress = null;\n    this.networkVersion = null;\n    this.chainId = null;\n    this.shouldSendMetadata = shouldSendMetadata; // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._sendSync = this._sendSync.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this); // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"MetaMask\")); // subscribe to metamask public config (one-way)\n\n    this._publicConfigStore = new ObservableStore({\n      storageKey: \"Metamask-Config\"\n    }); // handle isUnlocked changes, and chainChanged and networkChanged events\n    // this._publicConfigStore.subscribe((stringifiedState) => {\n    //   // This is because we are using store as string\n    //   const state = JSON.parse(stringifiedState as unknown as string);\n    //   if (\"isUnlocked\" in state && state.isUnlocked !== this._state.isUnlocked) {\n    //     this._state.isUnlocked = state.isUnlocked;\n    //     if (!this._state.isUnlocked) {\n    //       // accounts are never exposed when the extension is locked\n    //       this._handleAccountsChanged([]);\n    //     } else {\n    //       // this will get the exposed accounts, if any\n    //       try {\n    //         this._rpcRequest(\n    //           { method: \"eth_accounts\", params: [] },\n    //           NOOP,\n    //           true // indicating that eth_accounts _should_ update accounts\n    //         );\n    //       } catch (_) {\n    //         // Swallow error\n    //       }\n    //     }\n    //   }\n    //   if (\"selectedAddress\" in state && this.selectedAddress !== state.selectedAddress) {\n    //     try {\n    //       this._rpcRequest(\n    //         { method: \"eth_accounts\", params: [] },\n    //         NOOP,\n    //         true // indicating that eth_accounts _should_ update accounts\n    //       );\n    //     } catch (_) {\n    //       // Swallow error\n    //     }\n    //   }\n    //   // Emit chainChanged event on chain change\n    //   if (\"chainId\" in state && state.chainId !== this.chainId) {\n    //     this.chainId = state.chainId || null;\n    //     this.emit(\"chainChanged\", this.chainId);\n    //     // indicate that we've connected, for EIP-1193 compliance\n    //     // we do this here so that iframe can initialize\n    //     if (!this._state.hasEmittedConnection) {\n    //       this._handleConnect(this.chainId);\n    //       this._state.hasEmittedConnection = true;\n    //     }\n    //   }\n    //   // Emit networkChanged event on network change\n    //   if (\"networkVersion\" in state && state.networkVersion !== this.networkVersion) {\n    //     this.networkVersion = state.networkVersion || null;\n    //     this.emit(\"networkChanged\", this.networkVersion);\n    //   }\n    // });\n\n    pump(mux.createStream(\"publicConfig\"), storeAsStream(this._publicConfigStore), // RPC requests should still work if only this stream fails\n    logStreamDisconnectWarning.bind(this, \"MetaMask PublicConfigStore\")); // ignore phishing warning message (handled elsewhere)\n\n    mux.ignoreStream(\"phishing\"); // setup own event listeners\n    // EIP-1193 connect\n\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    }); // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, \"MetaMask RpcProvider\")); // handle RPC requests via dapp-side rpc engine\n\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine; // json rpc notification listener\n\n    jsonRpcConnection.events.on(\"notification\", payload => {\n      const {\n        method,\n        params\n      } = payload;\n\n      if (method === \"wallet_accountsChanged\") {\n        this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        this.emit(\"data\", payload); // deprecated\n\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params\n        });\n      } // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n\n    });\n  }\n\n  get publicConfigStore() {\n    if (!this._sentWarnings.publicConfigStore) {\n      log.warn(messages.warnings.publicConfigStore);\n      this._sentWarnings.publicConfigStore = true;\n    }\n\n    return this._publicConfigStore;\n  }\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n\n\n  isConnected() {\n    return this._state.isConnected;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n\n\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args\n      });\n    }\n\n    const {\n      method,\n      params\n    } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n\n\n  sendAsync(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   *   addListener, on, once, prependListener, prependOnceListener\n   */\n\n\n  addListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.addListener(eventName, listener);\n  }\n\n  on(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.on(eventName, listener);\n  }\n\n  once(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.once(eventName, listener);\n  }\n\n  prependListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.prependListener(eventName, listener);\n  }\n\n  prependOnceListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.prependOnceListener(eventName, listener);\n  } // Private Methods\n  //= ===================\n\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n\n\n  async _initializeState() {\n    try {\n      const {\n        accounts,\n        chainId,\n        isUnlocked,\n        networkVersion\n      } = await this.request({\n        method: \"wallet_getProviderState\"\n      }); // indicate that we've connected, for EIP-1193 compliance\n\n      this.emit(\"connect\", {\n        chainId\n      });\n\n      this._handleChainChanged({\n        chainId,\n        networkVersion\n      });\n\n      this._handleUnlockStateChanged({\n        accounts,\n        isUnlocked\n      });\n\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @param isInternal - false - Whether the request is internal.\n   */\n\n\n  _rpcRequest(payload, callback) {\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let cb = callback;\n    const _payload = payload;\n\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = (err, res) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload, cb);\n\n        return;\n      }\n    }\n\n    this.tryPreopenHandle(_payload, cb);\n  }\n\n  send(methodOrPayload, callbackOrArgs) {\n    if (!this._sentWarnings.send) {\n      log.warn(messages.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n\n    if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest({\n            method: methodOrPayload,\n            params: callbackOrArgs\n          }, getRpcPromiseCallback(resolve, reject, false));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n\n    if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n      return this._rpcRequest(methodOrPayload, callbackOrArgs);\n    }\n\n    return this._sendSync(methodOrPayload);\n  }\n  /**\n   * DEPRECATED.\n   * Internal backwards compatibility method, used in send.\n   */\n\n\n  _sendSync(payload) {\n    let result;\n\n    switch (payload.method) {\n      case \"eth_accounts\":\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n\n      case \"eth_coinbase\":\n        result = this.selectedAddress || null;\n        break;\n\n      case \"eth_uninstallFilter\":\n        this._rpcRequest(payload, NOOP);\n\n        result = true;\n        break;\n\n      case \"net_version\":\n        result = this.networkVersion || null;\n        break;\n\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result\n    };\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits MetaMaskInpageProvider#connect\n   */\n\n\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits MetaMaskInpageProvider#disconnect\n   */\n\n\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013, // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011, // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits MetamaskInpageProvider#disconnect\n   */\n\n\n  _handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n  /**\n   * Called when accounts may have changed.\n   */\n\n\n  _handleAccountsChanged(accounts) {\n    let isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // defensive programming\n    let finalAccounts = accounts;\n\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    } // emit accountsChanged if anything about the accounts array has changed\n\n\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    } // handle selectedAddress\n\n\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits MetamaskInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n\n\n  _handleChainChanged() {\n    let {\n      chainId,\n      networkVersion\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!chainId || !networkVersion) {\n      log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", {\n        chainId,\n        networkVersion\n      });\n      return;\n    }\n\n    if (networkVersion === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n\n\n  _handleUnlockStateChanged() {\n    let {\n      accounts,\n      isUnlocked\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   */\n\n\n  _warnOfDeprecation(eventName) {\n    if (this._sentWarnings.events[eventName] === false) {\n      log.warn(messages.warnings.events[eventName]);\n      this._sentWarnings.events[eventName] = true;\n    }\n  }\n\n}\n\n_defineProperty(TorusInpageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n\nconst defaults = options => ({\n  algorithms: options.algorithms || [\"sha256\"],\n  delimiter: options.delimiter || \" \",\n  full: options.full || false\n}); // Generate list of hashes\n\n\nconst hashes = (options, data) => {\n  const internalHashes = {};\n  options.algorithms.forEach(algorithm => {\n    internalHashes[algorithm] = createHash(algorithm).update(data, \"utf8\").digest(\"base64\");\n  });\n  return internalHashes;\n}; // Build an integrity string\n\n\nconst integrity = (options, sri) => {\n  let output = \"\"; // Hash list\n\n  output += Object.keys(sri.hashes).map(algorithm => \"\".concat(algorithm, \"-\").concat(sri.hashes[algorithm])).join(options.delimiter);\n  return output;\n};\n\nconst main = (options, data) => {\n  // Defaults\n  const finalOptions = defaults(options);\n  const sri = {\n    hashes: hashes(finalOptions, data),\n    integrity: undefined\n  };\n  sri.integrity = integrity(finalOptions, sri);\n  return finalOptions.full ? sri : sri.integrity;\n};\n\nclass PopupHandler extends EventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features\n    } = _ref;\n    super();\n\n    _defineProperty(this, \"url\", void 0);\n\n    _defineProperty(this, \"target\", void 0);\n\n    _defineProperty(this, \"features\", void 0);\n\n    _defineProperty(this, \"window\", void 0);\n\n    _defineProperty(this, \"windowTimer\", void 0);\n\n    _defineProperty(this, \"iClosedWindow\", void 0);\n\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n\n    this._setupTimer();\n  }\n\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n\n        if (!this.iClosedWindow) {\n          this.emit(\"close\");\n        }\n\n        this.iClosedWindow = false;\n        this.window = undefined;\n      }\n\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n\n  open() {\n    var _this$window;\n\n    this.window = window.open(this.url.href, this.target, this.features);\n    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n\n}\n\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\n\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n\n      img.onload = () => resolve(true);\n\n      img.onerror = () => resolve(false);\n\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\n\n\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\n\n\nasync function getSiteIcon(window) {\n  const {\n    document\n  } = window; // Use the site's favicon if it exists\n\n  let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  } // Search through available icons in no particular order\n\n\n  icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  return null;\n}\n/**\n * Gets site metadata and returns it\n *\n */\n\n\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window)\n});\n/**\n * Sends site metadata over an RPC request.\n */\n\n\nasync function sendSiteMetadata(engine) {\n  try {\n    const domainMetadata = await getSiteMetadata(); // call engine.handle directly to avoid normal RPC request handling\n\n    engine.handle({\n      jsonrpc: \"2.0\",\n      id: getPreopenInstanceId(),\n      method: \"wallet_sendDomainMetadata\",\n      params: domainMetadata\n    }, NOOP);\n  } catch (error) {\n    log.error({\n      message: messages.errors.sendSiteMetadata(),\n      originalError: error\n    });\n  }\n}\n\nconst _excluded = [\"host\", \"chainId\", \"networkName\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nconst defaultVerifiers = {\n  [LOGIN_PROVIDER.GOOGLE]: true,\n  [LOGIN_PROVIDER.FACEBOOK]: true,\n  [LOGIN_PROVIDER.REDDIT]: true,\n  [LOGIN_PROVIDER.TWITCH]: true,\n  [LOGIN_PROVIDER.DISCORD]: true\n};\nconst iframeIntegrity = \"sha384-RhqFseQpufEgNnJYPxNXx+EmyE55iWEWJwkgS7QX/pit6STKFZRf9K9kwmfpDIPw\";\nconst expectedCacheControlHeader = \"max-age=3600\";\nconst UNSAFE_METHODS = [\"eth_sendTransaction\", \"eth_signTypedData\", \"eth_signTypedData_v3\", \"eth_signTypedData_v4\", \"personal_sign\", \"eth_getEncryptionPublicKey\", \"eth_decrypt\"]; // preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const {\n      torusUrl\n    } = await getTorusUrl(\"production\", {\n      check: false,\n      hash: iframeIntegrity,\n      version: \"\"\n    });\n    torusIframeHtml.href = \"\".concat(torusUrl, \"/popup\");\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  constructor() {\n    let {\n      buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n      buttonSize = 56,\n      modalZIndex = 99999,\n      apiKey = \"torus-default\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _defineProperty(this, \"buttonPosition\", BUTTON_POSITION.BOTTOM_LEFT);\n\n    _defineProperty(this, \"buttonSize\", void 0);\n\n    _defineProperty(this, \"torusUrl\", void 0);\n\n    _defineProperty(this, \"torusIframe\", void 0);\n\n    _defineProperty(this, \"styleLink\", void 0);\n\n    _defineProperty(this, \"isLoggedIn\", void 0);\n\n    _defineProperty(this, \"isInitialized\", void 0);\n\n    _defineProperty(this, \"torusWidgetVisibility\", void 0);\n\n    _defineProperty(this, \"torusAlert\", void 0);\n\n    _defineProperty(this, \"nodeDetailManager\", void 0);\n\n    _defineProperty(this, \"torusJs\", void 0);\n\n    _defineProperty(this, \"apiKey\", void 0);\n\n    _defineProperty(this, \"modalZIndex\", void 0);\n\n    _defineProperty(this, \"alertZIndex\", void 0);\n\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n\n    _defineProperty(this, \"isIframeFullScreen\", void 0);\n\n    _defineProperty(this, \"whiteLabel\", void 0);\n\n    _defineProperty(this, \"requestedVerifier\", void 0);\n\n    _defineProperty(this, \"currentVerifier\", void 0);\n\n    _defineProperty(this, \"embedTranslations\", void 0);\n\n    _defineProperty(this, \"ethereum\", void 0);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"communicationMux\", void 0);\n\n    _defineProperty(this, \"isLoginCallback\", void 0);\n\n    _defineProperty(this, \"paymentProviders\", configuration.paymentProviders);\n\n    _defineProperty(this, \"loginHint\", \"\");\n\n    _defineProperty(this, \"useWalletConnect\", void 0);\n\n    _defineProperty(this, \"isCustomLogin\", false);\n\n    this.buttonPosition = buttonPosition;\n    this.buttonSize = buttonSize;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n\n    this.isInitialized = false; // init done\n\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    this.nodeDetailManager = new NodeDetailManager();\n    this.torusJs = new TorusJs({\n      metadataHost: \"https://metadata.tor.us\",\n      allowHost: \"https://signer.tor.us/api/allow\",\n      network: \"mainnet\"\n    });\n    this.apiKey = apiKey;\n    TorusJs.setAPIKey(apiKey);\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n  }\n\n  async init() {\n    let {\n      buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n      enableLogging = false,\n      // deprecated: use loginConfig instead\n      enabledVerifiers = defaultVerifiers,\n      network = {\n        host: \"mainnet\",\n        chainId: null,\n        networkName: \"\",\n        blockExplorer: \"\",\n        ticker: \"\",\n        tickerName: \"\"\n      },\n      loginConfig = {},\n      showTorusButton = true,\n      integrity = {\n        check: false,\n        hash: iframeIntegrity,\n        version: \"\"\n      },\n      whiteLabel,\n      skipTKey = false,\n      useWalletConnect = false,\n      mfaLevel = \"default\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    const {\n      torusUrl,\n      logLevel\n    } = await getTorusUrl(buildEnv, integrity);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    this.whiteLabel = whiteLabel;\n    this.useWalletConnect = useWalletConnect;\n    this.isCustomLogin = !!(loginConfig && Object.keys(loginConfig).length > 0) || !!(whiteLabel && Object.keys(whiteLabel).length > 0);\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();else log.disableAll();\n    this.torusWidgetVisibility = showTorusButton;\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";else torusIframeUrl.pathname += \"/popup\";\n    torusIframeUrl.hash = \"#isCustomLogin=\".concat(this.isCustomLogin); // Iframe code\n\n    this.torusIframe = htmlToElement(\"<iframe\\n        id=\\\"torusIframe\\\"\\n        allow=\".concat(useWalletConnect ? \"camera\" : \"\", \"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\").concat(torusIframeUrl.href, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex, \"\\\"\\n      ></iframe>\"));\n    this.torusAlertContainer = htmlToElement('<div id=\"torusAlertContainer\"></div>');\n    this.torusAlertContainer.style.display = \"none\";\n    this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n    const link = window.document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    link.setAttribute(\"type\", \"text/css\");\n    link.setAttribute(\"href\", \"\".concat(torusUrl, \"/css/widget.css\"));\n    this.styleLink = link;\n    const {\n      defaultLanguage = getUserLanguage(),\n      customTranslations = {}\n    } = this.whiteLabel || {};\n    const mergedTranslations = deepmerge(configuration.translations, customTranslations);\n    const languageTranslations = mergedTranslations[defaultLanguage] || configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n\n    const handleSetup = async () => {\n      await documentReady();\n      return new Promise((resolve, reject) => {\n        this.torusIframe.onload = async () => {\n          // only do this if iframe is not full screen\n          this._setupWeb3();\n\n          const initStream = this.communicationMux.getStream(\"init_stream\");\n          initStream.on(\"data\", chunk => {\n            const {\n              name,\n              data,\n              error\n            } = chunk;\n\n            if (name === \"init_complete\" && data.success) {\n              // resolve promise\n              this.isInitialized = true;\n\n              this._displayIframe(this.isIframeFullScreen);\n\n              resolve(undefined);\n            } else if (error) {\n              reject(new Error(error));\n            }\n          });\n          initStream.write({\n            name: \"init_stream\",\n            data: {\n              enabledVerifiers,\n              loginConfig,\n              whiteLabel: this.whiteLabel,\n              buttonPosition: this.buttonPosition,\n              buttonSize: this.buttonSize,\n              torusWidgetVisibility: this.torusWidgetVisibility,\n              apiKey: this.apiKey,\n              skipTKey,\n              network,\n              mfaLevel\n            }\n          });\n        };\n\n        window.document.head.appendChild(this.styleLink);\n        window.document.body.appendChild(this.torusIframe);\n        window.document.body.appendChild(this.torusAlertContainer);\n      });\n    };\n\n    if (buildEnv === \"production\" && integrity.check) {\n      // hacky solution to check for iframe integrity\n      const fetchUrl = \"\".concat(torusUrl, \"/popup\");\n      const resp = await fetch(fetchUrl, {\n        cache: \"reload\"\n      });\n\n      if (resp.headers.get(\"Cache-Control\") !== expectedCacheControlHeader) {\n        throw new Error(\"Unexpected Cache-Control headers, got \".concat(resp.headers.get(\"Cache-Control\")));\n      }\n\n      const response = await resp.text();\n      const calculatedIntegrity = main({\n        algorithms: [\"sha384\"]\n      }, response);\n      log.info(calculatedIntegrity, \"integrity\");\n\n      if (calculatedIntegrity === integrity.hash) {\n        await handleSetup();\n      } else {\n        this.clearInit();\n        throw new Error(\"Integrity check failed\");\n      }\n    } else {\n      await handleSetup();\n    }\n\n    return undefined;\n  }\n\n  login() {\n    let {\n      verifier = \"\",\n      login_hint: loginHint = \"\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    this.requestedVerifier = verifier;\n    this.loginHint = loginHint;\n    return this.ethereum.enable();\n  }\n\n  logout() {\n    return new Promise((resolve, reject) => {\n      if (!this.isLoggedIn) {\n        reject(new Error(\"User has not logged in yet\"));\n        return;\n      }\n\n      const logOutStream = this.communicationMux.getStream(\"logout\");\n      logOutStream.write({\n        name: \"logOut\"\n      });\n      const statusStream = this.communicationMux.getStream(\"status\");\n\n      const statusStreamHandler = status => {\n        if (!status.loggedIn) {\n          this.isLoggedIn = false;\n          this.currentVerifier = \"\";\n          this.requestedVerifier = \"\";\n          resolve();\n        } else reject(new Error(\"Some Error Occured\"));\n      };\n\n      handleStream(statusStream, \"data\", statusStreamHandler);\n    });\n  }\n\n  async cleanUp() {\n    if (this.isLoggedIn) {\n      await this.logout();\n    }\n\n    this.clearInit();\n  }\n\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof HTMLDocument;\n    }\n\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n\n    this.isInitialized = false;\n  }\n\n  hideTorusButton() {\n    this.torusWidgetVisibility = false;\n\n    this._sendWidgetVisibilityStatus(false);\n\n    this._displayIframe();\n  }\n\n  showTorusButton() {\n    this.torusWidgetVisibility = true;\n\n    this._sendWidgetVisibilityStatus(true);\n\n    this._displayIframe();\n  }\n\n  setProvider(_ref) {\n    let {\n      host = \"mainnet\",\n      chainId = null,\n      networkName = \"\"\n    } = _ref,\n        rest = _objectWithoutProperties(_ref, _excluded);\n\n    return new Promise((resolve, reject) => {\n      const providerChangeStream = this.communicationMux.getStream(\"provider_change\");\n\n      const handler = chunk => {\n        const {\n          err,\n          success\n        } = chunk.data;\n        log.info(chunk);\n\n        if (err) {\n          reject(err);\n        } else if (success) {\n          resolve();\n        } else reject(new Error(\"some error occured\"));\n      };\n\n      handleStream(providerChangeStream, \"data\", handler);\n      const preopenInstanceId = getPreopenInstanceId();\n\n      this._handleWindow(preopenInstanceId, {\n        target: \"_blank\",\n        features: FEATURES_PROVIDER_CHANGE_WINDOW\n      });\n\n      providerChangeStream.write({\n        name: \"show_provider_change\",\n        data: {\n          network: _objectSpread({\n            host,\n            chainId,\n            networkName\n          }, rest),\n          preopenInstanceId,\n          override: false\n        }\n      });\n    });\n  }\n\n  showWallet(path) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const showWalletStream = this.communicationMux.getStream(\"show_wallet\");\n    const finalPath = path ? \"/\".concat(path) : \"\";\n    showWalletStream.write({\n      name: \"show_wallet\",\n      data: {\n        path: finalPath\n      }\n    });\n\n    const showWalletHandler = chunk => {\n      if (chunk.name === \"show_wallet_instance\") {\n        // Let the error propogate up (hence, no try catch)\n        const {\n          instanceId\n        } = chunk.data;\n        const finalUrl = new URL(\"\".concat(this.torusUrl, \"/wallet\").concat(finalPath)); // Using URL constructor to prevent js injection and allow parameter validation.!\n\n        finalUrl.searchParams.append(\"integrity\", \"true\");\n        finalUrl.searchParams.append(\"instanceId\", instanceId);\n        Object.keys(params).forEach(x => {\n          finalUrl.searchParams.append(x, params[x]);\n        });\n        finalUrl.hash = \"#isCustomLogin=\".concat(this.isCustomLogin);\n        const walletWindow = new PopupHandler({\n          url: finalUrl,\n          features: FEATURES_DEFAULT_WALLET_WINDOW\n        });\n        walletWindow.open();\n      }\n    };\n\n    handleStream(showWalletStream, \"data\", showWalletHandler);\n  }\n\n  async getPublicAddress(_ref2) {\n    let {\n      verifier,\n      verifierId,\n      isExtended = false\n    } = _ref2;\n    if (!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier]) throw new Error(\"Unsupported verifier\");\n    const nodeDetails = await this.nodeDetailManager.getNodeDetails({\n      verifier,\n      verifierId\n    });\n    const endpoints = nodeDetails.torusNodeEndpoints;\n    const torusNodePubs = nodeDetails.torusNodePub;\n    const walletVerifier = verifier;\n    const openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n\n    try {\n      const existingV1User = await this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n        verifier: walletVerifier,\n        verifierId\n      });\n\n      if (existingV1User.typeOfUser === \"v1\") {\n        if (!isExtended) return existingV1User.address;\n        return existingV1User;\n      } // we don't support v2 users with v1 verifiers so get or assign the key for v2 user on v2 `verifier`\n\n\n      const v2User = await this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n        verifier: openloginVerifier,\n        verifierId\n      }, true);\n      if (!isExtended) return v2User.address;\n      return v2User;\n    } catch (error) {\n      if (error !== null && error !== void 0 && error.message.includes(\"Verifier + VerifierID has not yet been assigned\")) {\n        // if user doesn't have key then assign it with v2 verifier\n        const newV2User = await this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n          verifier: openloginVerifier,\n          verifierId\n        }, true);\n        if (!isExtended) return newV2User.address;\n        return newV2User;\n      }\n\n      throw error;\n    }\n  }\n\n  getUserInfo(message) {\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const userInfoAccessStream = this.communicationMux.getStream(\"user_info_access\");\n        userInfoAccessStream.write({\n          name: \"user_info_access_request\"\n        });\n\n        const userInfoAccessHandler = chunk => {\n          const {\n            name,\n            data: {\n              approved,\n              payload,\n              rejected,\n              newRequest\n            }\n          } = chunk;\n\n          if (name === \"user_info_access_response\") {\n            if (approved) {\n              resolve(payload);\n            } else if (rejected) {\n              reject(new Error(\"User rejected the request\"));\n            } else if (newRequest) {\n              const userInfoStream = this.communicationMux.getStream(\"user_info\");\n\n              const userInfoHandler = handlerChunk => {\n                if (handlerChunk.name === \"user_info_response\") {\n                  if (handlerChunk.data.approved) {\n                    resolve(handlerChunk.data.payload);\n                  } else {\n                    reject(new Error(\"User rejected the request\"));\n                  }\n                }\n              };\n\n              handleStream(userInfoStream, \"data\", userInfoHandler);\n              const preopenInstanceId = getPreopenInstanceId();\n\n              this._handleWindow(preopenInstanceId, {\n                target: \"_blank\",\n                features: FEATURES_PROVIDER_CHANGE_WINDOW\n              });\n\n              userInfoStream.write({\n                name: \"user_info_request\",\n                data: {\n                  message,\n                  preopenInstanceId\n                }\n              });\n            }\n          }\n        };\n\n        handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  initiateTopup(provider, params) {\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        const {\n          errors,\n          isValid\n        } = validatePaymentProvider(provider, params);\n\n        if (!isValid) {\n          reject(new Error(JSON.stringify(errors)));\n          return;\n        }\n\n        const topupStream = this.communicationMux.getStream(\"topup\");\n\n        const topupHandler = chunk => {\n          if (chunk.name === \"topup_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n\n        handleStream(topupStream, \"data\", topupHandler);\n        const preopenInstanceId = getPreopenInstanceId();\n\n        this._handleWindow(preopenInstanceId);\n\n        topupStream.write({\n          name: \"topup_request\",\n          data: {\n            provider,\n            params,\n            preopenInstanceId\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  async loginWithPrivateKey(loginParams) {\n    const {\n      privateKey,\n      userInfo\n    } = loginParams;\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        if (Buffer.from(privateKey, \"hex\").length !== 32) {\n          reject(new Error(\"Invalid private key, Please provide a 32 byte valid secp25k1 private key\"));\n          return;\n        }\n\n        const loginPrivKeyStream = this.communicationMux.getStream(\"login_with_private_key\");\n\n        const loginHandler = chunk => {\n          if (chunk.name === \"login_with_private_key_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n\n        handleStream(loginPrivKeyStream, \"data\", loginHandler);\n        loginPrivKeyStream.write({\n          name: \"login_with_private_key_request\",\n          data: {\n            privateKey,\n            userInfo\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  async showWalletConnectScanner() {\n    if (!this.useWalletConnect) throw new Error(\"Set `useWalletConnect` as true in init function options to use wallet connect scanner\");\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const walletConnectStream = this.communicationMux.getStream(\"wallet_connect_stream\");\n\n        const walletConnectHandler = chunk => {\n          if (chunk.name === \"wallet_connect_stream_res\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n\n            this._displayIframe();\n          }\n        };\n\n        handleStream(walletConnectStream, \"data\", walletConnectHandler);\n        walletConnectStream.write({\n          name: \"wallet_connect_stream_req\"\n        });\n\n        this._displayIframe(true);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  _handleWindow(preopenInstanceId) {\n    let {\n      url,\n      target,\n      features\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (preopenInstanceId) {\n      const windowStream = this.communicationMux.getStream(\"window\");\n      const finalUrl = new URL(url || \"\".concat(this.torusUrl, \"/redirect?preopenInstanceId=\").concat(preopenInstanceId));\n      if (finalUrl.hash) finalUrl.hash += \"&isCustomLogin=\".concat(this.isCustomLogin);else finalUrl.hash = \"#isCustomLogin=\".concat(this.isCustomLogin);\n      const handledWindow = new PopupHandler({\n        url: finalUrl,\n        target,\n        features\n      });\n      handledWindow.open();\n\n      if (!handledWindow.window) {\n        this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n\n        return;\n      }\n\n      windowStream.write({\n        name: \"opened_window\",\n        data: {\n          preopenInstanceId\n        }\n      });\n\n      const closeHandler = _ref3 => {\n        let {\n          preopenInstanceId: receivedId,\n          close\n        } = _ref3;\n\n        if (receivedId === preopenInstanceId && close) {\n          handledWindow.close();\n          windowStream.removeListener(\"data\", closeHandler);\n        }\n      };\n\n      windowStream.on(\"data\", closeHandler);\n      handledWindow.once(\"close\", () => {\n        windowStream.write({\n          data: {\n            preopenInstanceId,\n            closed: true\n          }\n        });\n        windowStream.removeListener(\"data\", closeHandler);\n      });\n    }\n  }\n\n  _setEmbedWhiteLabel(element) {\n    // Set whitelabel\n    const {\n      theme\n    } = this.whiteLabel || {};\n\n    if (theme) {\n      const {\n        isDark = false,\n        colors = {}\n      } = theme;\n      if (isDark) element.classList.add(\"torus-dark\");\n      if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n      if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n    }\n  }\n\n  _getLogoUrl() {\n    var _this$whiteLabel, _this$whiteLabel$them;\n\n    let logoUrl = \"\".concat(this.torusUrl, \"/images/torus_icon-blue.svg\");\n\n    if ((_this$whiteLabel = this.whiteLabel) !== null && _this$whiteLabel !== void 0 && (_this$whiteLabel$them = _this$whiteLabel.theme) !== null && _this$whiteLabel$them !== void 0 && _this$whiteLabel$them.isDark) {\n      var _this$whiteLabel2;\n\n      logoUrl = ((_this$whiteLabel2 = this.whiteLabel) === null || _this$whiteLabel2 === void 0 ? void 0 : _this$whiteLabel2.logoLight) || logoUrl;\n    } else {\n      var _this$whiteLabel3;\n\n      logoUrl = ((_this$whiteLabel3 = this.whiteLabel) === null || _this$whiteLabel3 === void 0 ? void 0 : _this$whiteLabel3.logoDark) || logoUrl;\n    }\n\n    return logoUrl;\n  }\n\n  _sendWidgetVisibilityStatus(status) {\n    const torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\");\n    torusWidgetVisibilityStream.write({\n      data: status\n    });\n  }\n\n  _displayIframe() {\n    let isFull = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const style = {};\n    const size = this.buttonSize + 14; // 15px padding\n    // set phase\n\n    if (!isFull) {\n      style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"\".concat(size, \"px\");\n      style.width = \"\".concat(size, \"px\");\n\n      switch (this.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n\n    Object.assign(this.torusIframe.style, style);\n    this.isIframeFullScreen = isFull;\n  }\n\n  _setupWeb3() {\n    log.info(\"setupWeb3 running\"); // setup background connection\n\n    const metamaskStream = new BasePostMessageStream({\n      name: \"embed_metamask\",\n      target: \"iframe_metamask\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    }); // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n    // because the MetamaskInpageProvider also attempts to do so.\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_comm\",\n      target: \"iframe_comm\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    }); // Backward compatibility with Gotchi :)\n    // window.metamaskStream = this.communicationStream\n    // compose the inpage provider\n\n    const inpageProvider = new TorusInpageProvider(metamaskStream); // detect eth_requestAccounts and pipe to enable for now\n\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inpageProvider[m];\n\n      inpageProvider[m] = function providerFunc(method) {\n        if (method && method === \"eth_requestAccounts\") {\n          return inpageProvider.enable();\n        }\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        return originalMethod.apply(this, [method, ...args]);\n      };\n    };\n\n    detectAccountRequestPrototypeModifier(\"send\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n\n    inpageProvider.enable = () => {\n      return new Promise((resolve, reject) => {\n        // If user is already logged in, we assume they have given access to the website\n        inpageProvider.sendAsync({\n          jsonrpc: \"2.0\",\n          id: getPreopenInstanceId(),\n          method: \"eth_requestAccounts\",\n          params: []\n        }, (err, response) => {\n          const {\n            result: res\n          } = response || {};\n\n          if (err) {\n            setTimeout(() => {\n              reject(err);\n            }, 50);\n          } else if (Array.isArray(res) && res.length > 0) {\n            // If user is already rehydrated, resolve this\n            // else wait for something to be written to status stream\n            const handleLoginCb = () => {\n              if (this.requestedVerifier !== \"\" && this.currentVerifier !== this.requestedVerifier) {\n                const {\n                  requestedVerifier\n                } = this; // eslint-disable-next-line promise/no-promise-in-callback\n\n                this.logout() // eslint-disable-next-line promise/always-return\n                .then(_ => {\n                  this.requestedVerifier = requestedVerifier;\n\n                  this._showLoginPopup(true, resolve, reject);\n                }).catch(error => reject(error));\n              } else {\n                resolve(res);\n              }\n            };\n\n            if (this.isLoggedIn) {\n              handleLoginCb();\n            } else {\n              this.isLoginCallback = handleLoginCb;\n            }\n          } else {\n            // set up listener for login\n            this._showLoginPopup(true, resolve, reject);\n          }\n        });\n      });\n    };\n\n    inpageProvider.tryPreopenHandle = (payload, cb) => {\n      const _payload = payload;\n\n      if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n        const preopenInstanceId = getPreopenInstanceId();\n\n        this._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n\n        _payload.preopenInstanceId = preopenInstanceId;\n      }\n\n      inpageProvider._rpcEngine.handle(_payload, cb);\n    }; // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n    // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n\n\n    const proxiedInpageProvider = new Proxy(inpageProvider, {\n      // straight up lie that we deleted the property so that it doesnt\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.ethereum = proxiedInpageProvider;\n    const communicationMux = setupMultiplex(communicationStream);\n    this.communicationMux = communicationMux;\n    const windowStream = communicationMux.getStream(\"window\");\n    windowStream.on(\"data\", chunk => {\n      if (chunk.name === \"create_window\") {\n        // url is the url we need to open\n        // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n        this._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n      }\n    }); // show torus widget if button clicked\n\n    const widgetStream = communicationMux.getStream(\"widget\");\n    widgetStream.on(\"data\", chunk => {\n      const {\n        data\n      } = chunk;\n\n      this._displayIframe(data);\n    }); // Show torus button if wallet has been hydrated/detected\n\n    const statusStream = communicationMux.getStream(\"status\");\n    statusStream.on(\"data\", status => {\n      // login\n      if (status.loggedIn) {\n        this.isLoggedIn = status.loggedIn;\n        this.currentVerifier = status.verifier;\n      } // logout\n      else this._displayIframe();\n\n      if (this.isLoginCallback) {\n        this.isLoginCallback();\n        delete this.isLoginCallback;\n      }\n    });\n    this.provider = proxiedInpageProvider;\n    if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n\n    inpageProvider._initializeState();\n\n    log.debug(\"Torus - injected provider\");\n  }\n\n  _showLoginPopup(calledFromEmbed, resolve, reject) {\n    const loginHandler = data => {\n      const {\n        err,\n        selectedAddress\n      } = data;\n\n      if (err) {\n        log.error(err);\n        if (reject) reject(err);\n      } // returns an array (cause accounts expects it)\n      else if (resolve) resolve([selectedAddress]);\n\n      if (this.isIframeFullScreen) this._displayIframe();\n    };\n\n    const oauthStream = this.communicationMux.getStream(\"oauth\");\n\n    if (!this.requestedVerifier) {\n      this._displayIframe(true);\n\n      handleStream(oauthStream, \"data\", loginHandler);\n      oauthStream.write({\n        name: \"oauth_modal\",\n        data: {\n          calledFromEmbed\n        }\n      });\n    } else {\n      handleStream(oauthStream, \"data\", loginHandler);\n      const preopenInstanceId = getPreopenInstanceId();\n\n      this._handleWindow(preopenInstanceId);\n\n      oauthStream.write({\n        name: \"oauth\",\n        data: {\n          calledFromEmbed,\n          verifier: this.requestedVerifier,\n          preopenInstanceId,\n          login_hint: this.loginHint\n        }\n      });\n    }\n  }\n\n  _createPopupBlockAlert(preopenInstanceId, url) {\n    const logoUrl = this._getLogoUrl();\n\n    const torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + \"<div id=\\\"torusAlert__logo\\\"><img src=\\\"\".concat(logoUrl, \"\\\" /></div>\") + \"<div>\" + \"<h1 id=\\\"torusAlert__title\\\">\".concat(this.embedTranslations.actionRequired, \"</h1>\") + \"<p id=\\\"torusAlert__desc\\\">\".concat(this.embedTranslations.pendingAction, \"</p>\") + \"</div>\" + \"</div>\");\n    const successAlert = htmlToElement(\"<div><a id=\\\"torusAlert__btn\\\">\".concat(this.embedTranslations.continue, \"</a></div>\"));\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(preopenInstanceId, {\n          url,\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    this._setEmbedWhiteLabel(torusAlert);\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.style.display = \"block\";\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    runOnLoad(attachOnLoad);\n    runOnLoad(bindOnLoad);\n  }\n\n}\n\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, SUPPORTED_PAYMENT_NETWORK, TORUS_BUILD_ENV, TorusInpageProvider, WALLET_OPENLOGIN_VERIFIER_MAP, WALLET_VERIFIERS, Torus as default };\n//# sourceMappingURL=torus.esm.js.map\n"]},"metadata":{},"sourceType":"module"}