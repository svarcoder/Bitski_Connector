{"ast":null,"code":"import { EventEmitter } from 'events';\nimport { ProviderEngineError, ProviderEngineErrorCode } from './errors/provider-engine-error';\nimport { createPayload } from './util/create-payload';\n// The base class which ProviderEngine will extend from that provides the basic Web3 Provider interface\nexport default class BaseProvider extends EventEmitter {\n  // Modern send method\n  send(method) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    const payload = createPayload({\n      method,\n      params\n    });\n    return this.sendPayload(payload).then(response => {\n      return response.result;\n    });\n  }\n  // Legacy sendAsync method\n  sendAsync(payload, cb) {\n    this.sendPayload(payload).then(response => {\n      cb(null, response);\n    }).catch(error => {\n      cb(error, null);\n    });\n  }\n  // Whether or not this provider supports subscriptions\n  supportsSubscriptions() {\n    // Override this in your subclass if you support subscriptions\n    return false;\n  }\n  // Method to subscribe to a given subscription type\n  subscribe(_subscribeMethod, _subscriptionMethod, _parameters) {\n    // Override this with subscription implementation\n    return Promise.reject(new ProviderEngineError('Subscriptions are not supported', ProviderEngineErrorCode.UnsupportedFeature));\n  }\n  // Method to unsubscribe\n  unsubscribe(_subscriptionId, _unsubscribeMethod) {\n    // Override this with unsubscribe implementation\n    return Promise.reject(new ProviderEngineError('Subscriptions are not supported', ProviderEngineErrorCode.UnsupportedFeature));\n  }\n}","map":{"version":3,"names":["EventEmitter","ProviderEngineError","ProviderEngineErrorCode","createPayload","BaseProvider","send","method","params","payload","sendPayload","then","response","result","sendAsync","cb","catch","error","supportsSubscriptions","subscribe","_subscribeMethod","_subscriptionMethod","_parameters","Promise","reject","UnsupportedFeature","unsubscribe","_subscriptionId","_unsubscribeMethod"],"sources":["/Users/charvai/Desktop/template/node_modules/@bitski/provider-engine/dist/modules/base-provider.js"],"sourcesContent":["import { EventEmitter } from 'events';\nimport { ProviderEngineError, ProviderEngineErrorCode } from './errors/provider-engine-error';\nimport { createPayload } from './util/create-payload';\n// The base class which ProviderEngine will extend from that provides the basic Web3 Provider interface\nexport default class BaseProvider extends EventEmitter {\n    // Modern send method\n    send(method, params = []) {\n        const payload = createPayload({ method, params });\n        return this.sendPayload(payload).then((response) => {\n            return response.result;\n        });\n    }\n    // Legacy sendAsync method\n    sendAsync(payload, cb) {\n        this.sendPayload(payload).then((response) => {\n            cb(null, response);\n        }).catch((error) => {\n            cb(error, null);\n        });\n    }\n    // Whether or not this provider supports subscriptions\n    supportsSubscriptions() {\n        // Override this in your subclass if you support subscriptions\n        return false;\n    }\n    // Method to subscribe to a given subscription type\n    subscribe(_subscribeMethod, _subscriptionMethod, _parameters) {\n        // Override this with subscription implementation\n        return Promise.reject(new ProviderEngineError('Subscriptions are not supported', ProviderEngineErrorCode.UnsupportedFeature));\n    }\n    // Method to unsubscribe\n    unsubscribe(_subscriptionId, _unsubscribeMethod) {\n        // Override this with unsubscribe implementation\n        return Promise.reject(new ProviderEngineError('Subscriptions are not supported', ProviderEngineErrorCode.UnsupportedFeature));\n    }\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,QAAQ;AACrC,SAASC,mBAAmB,EAAEC,uBAAuB,QAAQ,gCAAgC;AAC7F,SAASC,aAAa,QAAQ,uBAAuB;AACrD;AACA,eAAe,MAAMC,YAAY,SAASJ,YAAY,CAAC;EACnD;EACAK,IAAI,CAACC,MAAM,EAAe;IAAA,IAAbC,MAAM,uEAAG,EAAE;IACpB,MAAMC,OAAO,GAAGL,aAAa,CAAC;MAAEG,MAAM;MAAEC;IAAO,CAAC,CAAC;IACjD,OAAO,IAAI,CAACE,WAAW,CAACD,OAAO,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;MAChD,OAAOA,QAAQ,CAACC,MAAM;IAC1B,CAAC,CAAC;EACN;EACA;EACAC,SAAS,CAACL,OAAO,EAAEM,EAAE,EAAE;IACnB,IAAI,CAACL,WAAW,CAACD,OAAO,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;MACzCG,EAAE,CAAC,IAAI,EAAEH,QAAQ,CAAC;IACtB,CAAC,CAAC,CAACI,KAAK,CAAEC,KAAK,IAAK;MAChBF,EAAE,CAACE,KAAK,EAAE,IAAI,CAAC;IACnB,CAAC,CAAC;EACN;EACA;EACAC,qBAAqB,GAAG;IACpB;IACA,OAAO,KAAK;EAChB;EACA;EACAC,SAAS,CAACC,gBAAgB,EAAEC,mBAAmB,EAAEC,WAAW,EAAE;IAC1D;IACA,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAItB,mBAAmB,CAAC,iCAAiC,EAAEC,uBAAuB,CAACsB,kBAAkB,CAAC,CAAC;EACjI;EACA;EACAC,WAAW,CAACC,eAAe,EAAEC,kBAAkB,EAAE;IAC7C;IACA,OAAOL,OAAO,CAACC,MAAM,CAAC,IAAItB,mBAAmB,CAAC,iCAAiC,EAAEC,uBAAuB,CAACsB,kBAAkB,CAAC,CAAC;EACjI;AACJ"},"metadata":{},"sourceType":"module"}