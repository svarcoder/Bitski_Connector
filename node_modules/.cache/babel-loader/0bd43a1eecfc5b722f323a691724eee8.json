{"ast":null,"code":"export var SignerErrorCode;\n(function (SignerErrorCode) {\n  // The signer module received a request to sign via an unsupported RPC method\n  SignerErrorCode[SignerErrorCode[\"UnsupportedMethod\"] = 3000] = \"UnsupportedMethod\";\n  // The user cancelled or rejected the transaction\n  SignerErrorCode[SignerErrorCode[\"UserCancelled\"] = 3001] = \"UserCancelled\";\n  // The request is missing params for the transaction.\n  // Check that params is an array, and the transaction is the first object.\n  SignerErrorCode[SignerErrorCode[\"MissingTransaction\"] = 3002] = \"MissingTransaction\";\n  // The message signature request is missing expected params.\n  // Check that params is an array, and that they include both a from address, and a message to sign.\n  SignerErrorCode[SignerErrorCode[\"MissingMessage\"] = 3003] = \"MissingMessage\";\n  // Missing from address in typed data request\n  SignerErrorCode[SignerErrorCode[\"MissingFrom\"] = 3004] = \"MissingFrom\";\n  // Missing typed data params. Make sure params is an array and includes\n  // both a from address, and a typed data payload.\n  SignerErrorCode[SignerErrorCode[\"MissingTypedData\"] = 3005] = \"MissingTypedData\";\n})(SignerErrorCode || (SignerErrorCode = {}));\nexport class SignerError extends Error {\n  constructor(message, code) {\n    super(message);\n    this.name = 'TransactionError';\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, SignerError);\n    }\n    this.code = code;\n  }\n  static UnsupportedMethod() {\n    return new SignerError('The method requested is not currently supported.', SignerErrorCode.UnsupportedMethod);\n  }\n  static UserCancelled() {\n    return new SignerError('The user cancelled this transaction', SignerErrorCode.UserCancelled);\n  }\n  static MissingTransaction() {\n    return new SignerError('Could not find transaction in request', SignerErrorCode.MissingTransaction);\n  }\n  static MissingMessage() {\n    return new SignerError('Could not find message params in request', SignerErrorCode.MissingMessage);\n  }\n  static MissingFrom() {\n    return new SignerError('Could not find from address in request params.', SignerErrorCode.MissingFrom);\n  }\n  static MissingTypedData() {\n    return new SignerError('Could not find data to sign in request params.', SignerErrorCode.MissingTypedData);\n  }\n}","map":{"version":3,"names":["SignerErrorCode","SignerError","Error","constructor","message","code","name","captureStackTrace","UnsupportedMethod","UserCancelled","MissingTransaction","MissingMessage","MissingFrom","MissingTypedData"],"sources":["/Users/charvai/Desktop/template/node_modules/bitski/dist/esm/-private/errors/signer-error.js"],"sourcesContent":["export var SignerErrorCode;\n(function (SignerErrorCode) {\n    // The signer module received a request to sign via an unsupported RPC method\n    SignerErrorCode[SignerErrorCode[\"UnsupportedMethod\"] = 3000] = \"UnsupportedMethod\";\n    // The user cancelled or rejected the transaction\n    SignerErrorCode[SignerErrorCode[\"UserCancelled\"] = 3001] = \"UserCancelled\";\n    // The request is missing params for the transaction.\n    // Check that params is an array, and the transaction is the first object.\n    SignerErrorCode[SignerErrorCode[\"MissingTransaction\"] = 3002] = \"MissingTransaction\";\n    // The message signature request is missing expected params.\n    // Check that params is an array, and that they include both a from address, and a message to sign.\n    SignerErrorCode[SignerErrorCode[\"MissingMessage\"] = 3003] = \"MissingMessage\";\n    // Missing from address in typed data request\n    SignerErrorCode[SignerErrorCode[\"MissingFrom\"] = 3004] = \"MissingFrom\";\n    // Missing typed data params. Make sure params is an array and includes\n    // both a from address, and a typed data payload.\n    SignerErrorCode[SignerErrorCode[\"MissingTypedData\"] = 3005] = \"MissingTypedData\";\n})(SignerErrorCode || (SignerErrorCode = {}));\nexport class SignerError extends Error {\n    constructor(message, code) {\n        super(message);\n        this.name = 'TransactionError';\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, SignerError);\n        }\n        this.code = code;\n    }\n    static UnsupportedMethod() {\n        return new SignerError('The method requested is not currently supported.', SignerErrorCode.UnsupportedMethod);\n    }\n    static UserCancelled() {\n        return new SignerError('The user cancelled this transaction', SignerErrorCode.UserCancelled);\n    }\n    static MissingTransaction() {\n        return new SignerError('Could not find transaction in request', SignerErrorCode.MissingTransaction);\n    }\n    static MissingMessage() {\n        return new SignerError('Could not find message params in request', SignerErrorCode.MissingMessage);\n    }\n    static MissingFrom() {\n        return new SignerError('Could not find from address in request params.', SignerErrorCode.MissingFrom);\n    }\n    static MissingTypedData() {\n        return new SignerError('Could not find data to sign in request params.', SignerErrorCode.MissingTypedData);\n    }\n}\n"],"mappings":"AAAA,OAAO,IAAIA,eAAe;AAC1B,CAAC,UAAUA,eAAe,EAAE;EACxB;EACAA,eAAe,CAACA,eAAe,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAAC,GAAG,mBAAmB;EAClF;EACAA,eAAe,CAACA,eAAe,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,GAAG,eAAe;EAC1E;EACA;EACAA,eAAe,CAACA,eAAe,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAAC,GAAG,oBAAoB;EACpF;EACA;EACAA,eAAe,CAACA,eAAe,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,GAAG,gBAAgB;EAC5E;EACAA,eAAe,CAACA,eAAe,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,GAAG,aAAa;EACtE;EACA;EACAA,eAAe,CAACA,eAAe,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,GAAG,kBAAkB;AACpF,CAAC,EAAEA,eAAe,KAAKA,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC;AAC7C,OAAO,MAAMC,WAAW,SAASC,KAAK,CAAC;EACnCC,WAAW,CAACC,OAAO,EAAEC,IAAI,EAAE;IACvB,KAAK,CAACD,OAAO,CAAC;IACd,IAAI,CAACE,IAAI,GAAG,kBAAkB;IAC9B;IACA,IAAIJ,KAAK,CAACK,iBAAiB,EAAE;MACzBL,KAAK,CAACK,iBAAiB,CAAC,IAAI,EAAEN,WAAW,CAAC;IAC9C;IACA,IAAI,CAACI,IAAI,GAAGA,IAAI;EACpB;EACA,OAAOG,iBAAiB,GAAG;IACvB,OAAO,IAAIP,WAAW,CAAC,kDAAkD,EAAED,eAAe,CAACQ,iBAAiB,CAAC;EACjH;EACA,OAAOC,aAAa,GAAG;IACnB,OAAO,IAAIR,WAAW,CAAC,qCAAqC,EAAED,eAAe,CAACS,aAAa,CAAC;EAChG;EACA,OAAOC,kBAAkB,GAAG;IACxB,OAAO,IAAIT,WAAW,CAAC,uCAAuC,EAAED,eAAe,CAACU,kBAAkB,CAAC;EACvG;EACA,OAAOC,cAAc,GAAG;IACpB,OAAO,IAAIV,WAAW,CAAC,0CAA0C,EAAED,eAAe,CAACW,cAAc,CAAC;EACtG;EACA,OAAOC,WAAW,GAAG;IACjB,OAAO,IAAIX,WAAW,CAAC,gDAAgD,EAAED,eAAe,CAACY,WAAW,CAAC;EACzG;EACA,OAAOC,gBAAgB,GAAG;IACtB,OAAO,IAAIZ,WAAW,CAAC,gDAAgD,EAAED,eAAe,CAACa,gBAAgB,CAAC;EAC9G;AACJ"},"metadata":{},"sourceType":"module"}