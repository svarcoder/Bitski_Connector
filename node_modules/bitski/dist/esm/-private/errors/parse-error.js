export var ParseErrorCode;
(function (ParseErrorCode) {
    // Could not parse response as JSON
    ParseErrorCode[ParseErrorCode["InvalidJSON"] = 2000] = "InvalidJSON";
    // Received an error response status,
    // but not error body was provided.
    ParseErrorCode[ParseErrorCode["NoErrorBody"] = 2001] = "NoErrorBody";
})(ParseErrorCode || (ParseErrorCode = {}));
/**
 * Represents an error that is thrown during decoding
 */
export class ParseError extends Error {
    constructor(message, code) {
        super(message);
        this.name = 'ParseError';
        // Maintains proper stack trace for where our error was thrown (only available on V8)
        if (Error.captureStackTrace) {
            Error.captureStackTrace(this, ParseError);
        }
        this.code = code;
    }
    static InvalidJSON() {
        return new ParseError('Could not decode response as JSON', ParseErrorCode.InvalidJSON);
    }
    static UnknownError() {
        return new ParseError('An unknown error occurred.', ParseErrorCode.NoErrorBody);
    }
}
