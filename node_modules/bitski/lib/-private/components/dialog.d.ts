/**
 * Basic modal dialog
 */
export declare class Dialog {
    onClose?: () => void;
    private content;
    private container;
    /**
     * Creates and displays a new dialog
     * @param content The content (HTMLElement, selector, or text) to embed in the dialog
     * @param dynamicContent Set to true to show loading state
     */
    constructor(content: HTMLElement | string, dynamicContent?: boolean);
    /**
     * Show the dialog
     */
    show(): void;
    /**
     * Hides the dialog, but does not remove
     */
    hide(): void;
    /**
     * Dismisses the dialog without triggering the close handler.
     */
    dismiss(): void;
    /**
     * Cancels the dialog by dismissing and triggering the close handler.
     */
    close(): void;
    /**
     * Show or hide the loading indicator
     * @param loading Whether or not to display the spinner
     */
    setLoading(loading: boolean): void;
    /**
     * Determines what content to embed
     * @param content Content to parse
     */
    private parseContent;
    /**
     * Creates and injects the container element at the end of the body,
     * responsible for housing all the dialog-related content.
     */
    private createContainer;
    /**
     * Injects the provided content into the template provided
     * @param container The container element
     * @param content The content to inject in the template
     */
    private injectTemplate;
    /**
     * Adds event listeners for events that should trigger closing the dialog
     */
    private addCloseHandlers;
}
