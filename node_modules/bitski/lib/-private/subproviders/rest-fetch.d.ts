import { CompletionHandler, JSONRPCRequest, NextHandler, Subprovider } from '@bitski/provider-engine';
export interface RestFetchSubproviderOptions {
    rpcUrl: string;
    defaultHeaders?: Record<string, unknown>;
    originHttpHeaderKey?: string;
}
export declare class RestFetchSubprovider extends Subprovider {
    protected rpcUrl: string;
    protected defaultHeaders?: Record<string, unknown>;
    protected originHttpHeaderKey?: string;
    constructor(opts: RestFetchSubproviderOptions);
    handleRequest(payload: JSONRPCRequest, next: NextHandler, end: CompletionHandler): void;
    protected handleRestRequest(payload: JSONRPCRequest, end: CompletionHandler): void;
    protected _submitRequest(targetUrl: any, reqParams: any, done: any): void;
}
