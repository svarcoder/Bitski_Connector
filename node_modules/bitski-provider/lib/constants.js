"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UNAUTHORIZED_ERRORS = exports.RETRIABLE_ERRORS = exports.AUTHENTICATED_METHODS = void 0;
// JSON-RPC methods that require Authorization header
exports.AUTHENTICATED_METHODS = [
    'eth_requestAccounts',
    'eth_accounts',
    'eth_sendTransaction',
    'eth_signTransaction',
    'eth_signTypedData',
    'eth_signTypedData_v3',
    'eth_signTypedData_v4',
    'personal_sign',
    'eth_sign',
];
// Error messages that are usually transient and should be retried
exports.RETRIABLE_ERRORS = [
    // ignore server overload errors
    'Gateway timeout',
    'ETIMEDOUT',
    'ENOTFOUND',
    // ignore server sent html error pages
    // or truncated json responses
    'SyntaxError',
    'ECONNRESET',
    'EHOSTUNREACH',
    'Timeout out while waiting for response', // Actix timeout
];
// Errors that indicate the access token is not valid
exports.UNAUTHORIZED_ERRORS = [
    'Missing auth',
    'Invalid client id',
    'Not Authorized',
];
//# sourceMappingURL=constants.js.map